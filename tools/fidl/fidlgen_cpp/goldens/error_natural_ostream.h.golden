// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#pragma once

#include <fidl/test.error/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_ostream.h>

#include <iostream>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

template <>
struct fidl::ostream::Formatter<::test_error::ExampleFooRequest> {
  static std::ostream& Format(std::ostream& os, const ::test_error::ExampleFooRequest& value);
};
template <>
struct fidl::ostream::Formatter<::test_error::ExampleFooResponse> {
  static std::ostream& Format(std::ostream& os, const ::test_error::ExampleFooResponse& value);
};
template <>
struct fidl::ostream::Formatter<::test_error::ExampleFooResult> {
  static std::ostream& Format(std::ostream& os, const ::test_error::ExampleFooResult& value);
};

namespace test_error {

std::ostream& operator<<(std::ostream& os, const ::test_error::ExampleFooRequest& value);

std::ostream& operator<<(std::ostream& os, const ::test_error::ExampleFooResponse& value);

std::ostream& operator<<(std::ostream& os, const ::test_error::ExampleFooResult& value);

}  // namespace test_error

#ifdef __Fuchsia__

template <>
struct fidl::ostream::Formatter<::fidl::ClientEnd<::test_error::Example>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ClientEnd<::test_error::Example>& value) {
    return os << "ClientEnd<" << "test_error::Example" << ">(" << value.channel().get() << ")";
  }
};

template <>
struct fidl::ostream::Formatter<::fidl::ServerEnd<::test_error::Example>> {
  static std::ostream& Format(std::ostream& os, const ::fidl::ServerEnd<::test_error::Example>& value) {
    return os << "ServerEnd<" << "test_error::Example" << ">(" << value.channel().get() << ")";
  }
};

namespace fidl {

inline std::ostream& operator<<(std::ostream& os, const ::fidl::ClientEnd<::test_error::Example>& value) {
  return fidl::ostream::Formatter<::fidl::ClientEnd<::test_error::Example>>::Format(os, value);
}

inline std::ostream& operator<<(std::ostream& os, const ::fidl::ServerEnd<::test_error::Example>& value) {
  return fidl::ostream::Formatter<::fidl::ServerEnd<::test_error::Example>>::Format(os, value);
}
}  // namespace fidl

#endif  // __Fuchsia__

#pragma clang diagnostic pop
