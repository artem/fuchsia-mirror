// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json
// fidl_experiment = transitional_allow_list

#pragma once

#include <cinttypes>
#include <string>

#include <lib/fidl/cpp/natural_types.h>
#include <lib/fidl/cpp/natural_coding_traits.h>

#include <fidl/test.unknowninteractions/cpp/markers.h>
#include <fidl/test.unknowninteractions/cpp/common_types.h>


#ifdef __Fuchsia__

  #include <lib/zx/channel.h>
  #include <lib/fidl_driver/cpp/natural_types.h>
  

#endif  // __Fuchsia__


#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"

namespace test_unknowninteractions {





class UnknownInteractionsProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsProtocolStrictTwoWayErrResponse;


class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsProtocolFlexibleTwoWayResponse;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse;


class UnknownInteractionsProtocolFlexibleTwoWayErrResponse;


class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse;


class UnknownInteractionsProtocolStrictEventFieldsRequest;


class UnknownInteractionsProtocolStrictEventErrResponse;


class UnknownInteractionsProtocolStrictEventFieldsErrResponse;


class UnknownInteractionsProtocolFlexibleEventFieldsRequest;


class UnknownInteractionsProtocolFlexibleEventErrResponse;


class UnknownInteractionsProtocolFlexibleEventFieldsErrResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse;


class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsAjarProtocolStrictEventFieldsRequest;


class UnknownInteractionsAjarProtocolStrictEventErrResponse;


class UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest;


class UnknownInteractionsAjarProtocolFlexibleEventErrResponse;


class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse;


class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsClosedProtocolStrictEventFieldsRequest;


class UnknownInteractionsClosedProtocolStrictEventErrResponse;


class UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse;


class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse;


class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse;


class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse;


class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse;




class UnknownInteractionsProtocolStrictTwoWayTableResponse;



class UnknownInteractionsProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsProtocolFlexibleTwoWayTableResponse;



class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse;



class UnknownInteractionsProtocolStrictEventTableRequest;



class UnknownInteractionsProtocolStrictEventTableErrResponse;



class UnknownInteractionsProtocolFlexibleEventTableRequest;



class UnknownInteractionsProtocolFlexibleEventTableErrResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsAjarProtocolStrictEventTableRequest;



class UnknownInteractionsAjarProtocolStrictEventTableErrResponse;



class UnknownInteractionsAjarProtocolFlexibleEventTableRequest;



class UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsClosedProtocolStrictEventTableRequest;



class UnknownInteractionsClosedProtocolStrictEventTableErrResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse;




class UnknownInteractionsProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsProtocolStrictTwoWayErrResult;



class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayResult;



class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult;



class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse;



class UnknownInteractionsProtocolFlexibleTwoWayUnionResult;



class UnknownInteractionsProtocolFlexibleTwoWayTableResult;



class UnknownInteractionsProtocolFlexibleTwoWayErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse;



class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult;



class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult;



class UnknownInteractionsProtocolStrictEventUnionRequest;



class UnknownInteractionsProtocolStrictEventErrResult;



class UnknownInteractionsProtocolStrictEventFieldsErrResult;



class UnknownInteractionsProtocolStrictEventUnionErrResponse;



class UnknownInteractionsProtocolStrictEventUnionErrResult;



class UnknownInteractionsProtocolStrictEventTableErrResult;



class UnknownInteractionsProtocolFlexibleEventUnionRequest;



class UnknownInteractionsProtocolFlexibleEventErrResult;



class UnknownInteractionsProtocolFlexibleEventFieldsErrResult;



class UnknownInteractionsProtocolFlexibleEventUnionErrResponse;



class UnknownInteractionsProtocolFlexibleEventUnionErrResult;



class UnknownInteractionsProtocolFlexibleEventTableErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsAjarProtocolStrictEventUnionRequest;



class UnknownInteractionsAjarProtocolStrictEventErrResult;



class UnknownInteractionsAjarProtocolStrictEventFieldsErrResult;



class UnknownInteractionsAjarProtocolStrictEventUnionErrResponse;



class UnknownInteractionsAjarProtocolStrictEventUnionErrResult;



class UnknownInteractionsAjarProtocolStrictEventTableErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest;



class UnknownInteractionsAjarProtocolFlexibleEventErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse;



class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult;



class UnknownInteractionsAjarProtocolFlexibleEventTableErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsClosedProtocolStrictEventUnionRequest;



class UnknownInteractionsClosedProtocolStrictEventErrResult;



class UnknownInteractionsClosedProtocolStrictEventFieldsErrResult;



class UnknownInteractionsClosedProtocolStrictEventUnionErrResponse;



class UnknownInteractionsClosedProtocolStrictEventUnionErrResult;



class UnknownInteractionsClosedProtocolStrictEventTableErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse;



class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult;



class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult;



class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult;






  





class UnknownInteractionsProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(UnknownInteractionsProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictTwoWayUnionResponse(UnknownInteractionsProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayUnionResponse(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableResponse(UnknownInteractionsProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableResponse(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayErrResponse(UnknownInteractionsProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayErrResponse(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayErrResult(UnknownInteractionsProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayErrResult(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult(UnknownInteractionsProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(UnknownInteractionsProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictTwoWayTableErrResult(UnknownInteractionsProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictTwoWayTableErrResult(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolFlexibleTwoWayResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayResponse(UnknownInteractionsProtocolFlexibleTwoWayResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayResponse(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayResult(UnknownInteractionsProtocolFlexibleTwoWayResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayResult(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayFieldsResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(UnknownInteractionsProtocolFlexibleTwoWayFieldsResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayFieldsResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayUnionResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult(UnknownInteractionsProtocolFlexibleTwoWayUnionResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsProtocolFlexibleTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(UnknownInteractionsProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayTableResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayTableResult(UnknownInteractionsProtocolFlexibleTwoWayTableResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayTableResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayTableResult(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayTableResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayTableResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayTableResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayTableResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolFlexibleTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(UnknownInteractionsProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayErrResult(UnknownInteractionsProtocolFlexibleTwoWayErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayErrResult(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsProtocolFlexibleTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(UnknownInteractionsProtocolFlexibleTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& operator=(UnknownInteractionsProtocolFlexibleTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleTwoWayTableErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsProtocolFlexibleTwoWayTableErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventFieldsRequest(UnknownInteractionsProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventFieldsRequest(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept;
    UnknownInteractionsProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictEventUnionRequest(UnknownInteractionsProtocolStrictEventUnionRequest&& other) noexcept
      : UnknownInteractionsProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventUnionRequest& operator=(UnknownInteractionsProtocolStrictEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventUnionRequest(const UnknownInteractionsProtocolStrictEventUnionRequest& other) noexcept : UnknownInteractionsProtocolStrictEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsProtocolStrictEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsProtocolStrictEventTableRequest(UnknownInteractionsProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventTableRequest& operator=(UnknownInteractionsProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventTableRequest(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept;
    UnknownInteractionsProtocolStrictEventTableRequest& operator=(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictEventTableRequest& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventTableRequest& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsProtocolStrictEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictEventErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventErrResponse(UnknownInteractionsProtocolStrictEventErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventErrResponse& operator=(UnknownInteractionsProtocolStrictEventErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventErrResponse(const UnknownInteractionsProtocolStrictEventErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictEventErrResponse& operator=(const UnknownInteractionsProtocolStrictEventErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolStrictEventErrResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolStrictEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventErrResult(UnknownInteractionsProtocolStrictEventErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventErrResult& operator=(UnknownInteractionsProtocolStrictEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventErrResult(const UnknownInteractionsProtocolStrictEventErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventErrResult& operator=(const UnknownInteractionsProtocolStrictEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse val) {
      return UnknownInteractionsProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolStrictEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolStrictEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolStrictEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolStrictEventFieldsErrResponse(UnknownInteractionsProtocolStrictEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventFieldsErrResponse& operator=(UnknownInteractionsProtocolStrictEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventFieldsErrResponse(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictEventFieldsErrResponse& operator=(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolStrictEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventFieldsErrResult(UnknownInteractionsProtocolStrictEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventFieldsErrResult& operator=(UnknownInteractionsProtocolStrictEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventFieldsErrResult(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventFieldsErrResult& operator=(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse val) {
      return UnknownInteractionsProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolStrictEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolStrictEventUnionErrResponse(UnknownInteractionsProtocolStrictEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventUnionErrResponse& operator=(UnknownInteractionsProtocolStrictEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventUnionErrResponse(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) noexcept : UnknownInteractionsProtocolStrictEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionErrResponse& operator=(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolStrictEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolStrictEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventUnionErrResult(UnknownInteractionsProtocolStrictEventUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventUnionErrResult& operator=(UnknownInteractionsProtocolStrictEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventUnionErrResult(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventUnionErrResult& operator=(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse val) {
      return UnknownInteractionsProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsProtocolStrictEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolStrictEventTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolStrictEventTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolStrictEventTableErrResponse(UnknownInteractionsProtocolStrictEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolStrictEventTableErrResponse& operator=(UnknownInteractionsProtocolStrictEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolStrictEventTableErrResponse(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) noexcept;
    UnknownInteractionsProtocolStrictEventTableErrResponse& operator=(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsProtocolStrictEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolStrictEventTableErrResult(UnknownInteractionsProtocolStrictEventTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolStrictEventTableErrResult& operator=(UnknownInteractionsProtocolStrictEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolStrictEventTableErrResult(const UnknownInteractionsProtocolStrictEventTableErrResult& other) noexcept : UnknownInteractionsProtocolStrictEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolStrictEventTableErrResult& operator=(const UnknownInteractionsProtocolStrictEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolStrictEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolStrictEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse val) {
      return UnknownInteractionsProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolStrictEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolStrictEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolStrictEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolFlexibleEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventFieldsRequest(UnknownInteractionsProtocolFlexibleEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventFieldsRequest& operator=(UnknownInteractionsProtocolFlexibleEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventFieldsRequest& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleEventUnionRequest(UnknownInteractionsProtocolFlexibleEventUnionRequest&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventUnionRequest& operator=(UnknownInteractionsProtocolFlexibleEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventUnionRequest(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionRequest& operator=(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsProtocolFlexibleEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleEventTableRequest() noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableRequest(UnknownInteractionsProtocolFlexibleEventTableRequest&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableRequest& operator=(UnknownInteractionsProtocolFlexibleEventTableRequest&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventTableRequest(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventTableRequest& operator=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsProtocolFlexibleEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleEventErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventErrResponse(UnknownInteractionsProtocolFlexibleEventErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventErrResponse(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrResponse& __reserved(uint8_t value);

  UnknownInteractionsProtocolFlexibleEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventErrResult(UnknownInteractionsProtocolFlexibleEventErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventErrResult& operator=(UnknownInteractionsProtocolFlexibleEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventErrResult(const UnknownInteractionsProtocolFlexibleEventErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsProtocolFlexibleEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsProtocolFlexibleEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(UnknownInteractionsProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsProtocolFlexibleEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventFieldsErrResult(UnknownInteractionsProtocolFlexibleEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventFieldsErrResult& operator=(UnknownInteractionsProtocolFlexibleEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolFlexibleEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsProtocolFlexibleEventUnionErrResponse(UnknownInteractionsProtocolFlexibleEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventUnionErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventUnionErrResponse(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsProtocolFlexibleEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventUnionErrResult(UnknownInteractionsProtocolFlexibleEventUnionErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventUnionErrResult& operator=(UnknownInteractionsProtocolFlexibleEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventUnionErrResult(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventUnionErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsProtocolFlexibleEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsProtocolFlexibleEventTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsProtocolFlexibleEventTableErrResponse() noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableErrResponse(UnknownInteractionsProtocolFlexibleEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsProtocolFlexibleEventTableErrResponse& operator=(UnknownInteractionsProtocolFlexibleEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsProtocolFlexibleEventTableErrResponse(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) noexcept;
    UnknownInteractionsProtocolFlexibleEventTableErrResponse& operator=(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsProtocolFlexibleEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsProtocolFlexibleEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsProtocolFlexibleEventTableErrResult(UnknownInteractionsProtocolFlexibleEventTableErrResult&& other) noexcept
      : UnknownInteractionsProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsProtocolFlexibleEventTableErrResult& operator=(UnknownInteractionsProtocolFlexibleEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsProtocolFlexibleEventTableErrResult(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsProtocolFlexibleEventTableErrResult& operator=(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag Which() const {
    return UnknownInteractionsProtocolFlexibleEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsProtocolFlexibleEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse val) {
      return UnknownInteractionsProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsProtocolFlexibleEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsProtocolFlexibleEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsProtocolFlexibleEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsAjarProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsAjarProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult(UnknownInteractionsAjarProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsAjarProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(UnknownInteractionsAjarProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictEventUnionRequest(UnknownInteractionsAjarProtocolStrictEventUnionRequest&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventUnionRequest& operator=(UnknownInteractionsAjarProtocolStrictEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventUnionRequest(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsAjarProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableRequest(UnknownInteractionsAjarProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableRequest& operator=(UnknownInteractionsAjarProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventTableRequest(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventTableRequest& operator=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsAjarProtocolStrictEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictEventErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventErrResponse(UnknownInteractionsAjarProtocolStrictEventErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventErrResponse(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrResponse& __reserved(uint8_t value);

  UnknownInteractionsAjarProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolStrictEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventErrResult(UnknownInteractionsAjarProtocolStrictEventErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventErrResult(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolStrictEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(UnknownInteractionsAjarProtocolStrictEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsAjarProtocolStrictEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(UnknownInteractionsAjarProtocolStrictEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsAjarProtocolStrictEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventUnionErrResult(UnknownInteractionsAjarProtocolStrictEventUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventUnionErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsAjarProtocolStrictEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse(UnknownInteractionsAjarProtocolStrictEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolStrictEventTableErrResponse& operator=(UnknownInteractionsAjarProtocolStrictEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolStrictEventTableErrResponse(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolStrictEventTableErrResponse& operator=(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsAjarProtocolStrictEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolStrictEventTableErrResult(UnknownInteractionsAjarProtocolStrictEventTableErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolStrictEventTableErrResult& operator=(UnknownInteractionsAjarProtocolStrictEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolStrictEventTableErrResult(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolStrictEventTableErrResult& operator=(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolStrictEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolStrictEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse val) {
      return UnknownInteractionsAjarProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolStrictEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolStrictEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolStrictEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolFlexibleEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(UnknownInteractionsAjarProtocolFlexibleEventUnionRequest&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsAjarProtocolFlexibleEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest() noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(UnknownInteractionsAjarProtocolFlexibleEventTableRequest&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableRequest& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableRequest&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsAjarProtocolFlexibleEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventErrResponse(UnknownInteractionsAjarProtocolFlexibleEventErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrResponse& __reserved(uint8_t value);

  UnknownInteractionsAjarProtocolFlexibleEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolFlexibleEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventErrResult(UnknownInteractionsAjarProtocolFlexibleEventErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventErrResult(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse() noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) noexcept;
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsAjarProtocolFlexibleEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(UnknownInteractionsAjarProtocolFlexibleEventTableErrResult&& other) noexcept
      : UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& operator=(UnknownInteractionsAjarProtocolFlexibleEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarProtocolFlexibleEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse val) {
      return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarProtocolFlexibleEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarProtocolFlexibleEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarProtocolFlexibleEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsClosedProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsClosedProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult(UnknownInteractionsClosedProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsClosedProtocolStrictEventFieldsRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventFieldsRequest| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(UnknownInteractionsClosedProtocolStrictEventFieldsRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventFieldsRequest& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsRequest& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedProtocolStrictEventUnionRequest {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictEventUnionRequest(UnknownInteractionsClosedProtocolStrictEventUnionRequest&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventUnionRequest& operator=(UnknownInteractionsClosedProtocolStrictEventUnionRequest&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventUnionRequest(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionRequest(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionRequest& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventUnionRequest::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventUnionRequest WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionRequest(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionRequest& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionRequest(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsClosedProtocolStrictEventTableRequest {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventTableRequest(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictEventTableRequest() noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableRequest(UnknownInteractionsClosedProtocolStrictEventTableRequest&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableRequest& operator=(UnknownInteractionsClosedProtocolStrictEventTableRequest&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventTableRequest(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventTableRequest& operator=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableRequest& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsClosedProtocolStrictEventErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictEventErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventErrResponse(UnknownInteractionsClosedProtocolStrictEventErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventErrResponse(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrResponse& __reserved(uint8_t value);

  UnknownInteractionsClosedProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedProtocolStrictEventErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventErrResult(UnknownInteractionsClosedProtocolStrictEventErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventErrResult(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedProtocolStrictEventFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(UnknownInteractionsClosedProtocolStrictEventFieldsErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsClosedProtocolStrictEventUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(UnknownInteractionsClosedProtocolStrictEventUnionErrResponse&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsClosedProtocolStrictEventUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventUnionErrResult(UnknownInteractionsClosedProtocolStrictEventUnionErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventUnionErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsClosedProtocolStrictEventTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse() noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse(UnknownInteractionsClosedProtocolStrictEventTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedProtocolStrictEventTableErrResponse& operator=(UnknownInteractionsClosedProtocolStrictEventTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedProtocolStrictEventTableErrResponse(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) noexcept;
    UnknownInteractionsClosedProtocolStrictEventTableErrResponse& operator=(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsClosedProtocolStrictEventTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedProtocolStrictEventTableErrResult(UnknownInteractionsClosedProtocolStrictEventTableErrResult&& other) noexcept
      : UnknownInteractionsClosedProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedProtocolStrictEventTableErrResult& operator=(UnknownInteractionsClosedProtocolStrictEventTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedProtocolStrictEventTableErrResult(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedProtocolStrictEventTableErrResult& operator=(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedProtocolStrictEventTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag Which() const {
    return UnknownInteractionsClosedProtocolStrictEventTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedProtocolStrictEventTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse val) {
      return UnknownInteractionsClosedProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedProtocolStrictEventTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedProtocolStrictEventTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedProtocolStrictEventTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedProtocolStrictEventTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedProtocolStrictEventTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult(UnknownInteractionsDriverProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsDriverProtocolFlexibleTwoWayResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& __reserved(uint8_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult(UnknownInteractionsDriverProtocolFlexibleTwoWayResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse() noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kFrameworkErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse
        , int32_t
        , ::fidl::internal::FrameworkErr>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
    kFrameworkErr = 3,  // 0x3
  };

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& operator=(UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }
    static UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult WithFrameworkErr(::fidl::internal::FrameworkErr val) {
      return UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<3>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<3, Storage_> framework_err() const {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<3, Storage_> framework_err() {
      return ::fidl::internal::UnionMemberView<3, Storage_>(storage_);
    }

    // Sets the union to hold the framework_err member.
    //
    
    UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult& framework_err(::fidl::internal::FrameworkErr value) {
      storage_->emplace<3>(std::move(value));
      return *this;
    }

  UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kErr: return 2;
        case ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kFrameworkErr: return 3;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kErr;
        case 3: return ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult::Tag::kFrameworkErr;
        default: return std::nullopt;
    }
  }

};


  
  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& some_field(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse() noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>::Equal(this, &other);
    }
    
      uint8_t
    __reserved() const {
      return storage_.__reserved;
    }

    
    uint8_t& __reserved() {
      return storage_.__reserved;
    }

    // Setter for __reserved.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& __reserved(uint8_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      uint8_t __reserved
        =0u;
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, 1>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, uint8_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::__reserved, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept;

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdefaulted-function-deleted"
  // Default constructs a |UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse| only if all of its members are default constructible.
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse() = default;
#pragma clang diagnostic pop

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept;

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>::Equal(this, &other);
    }
    
      int32_t
    some_field() const {
      return storage_.some_field;
    }

    
    int32_t& some_field() {
      return storage_.some_field;
    }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& some_field(int32_t value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      int32_t some_field
        = {};
  };

  Storage_ storage_;
    Storage_ CloneStorage_() const;

  friend struct ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalStructMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        &Storage_::some_field, 0
      });
  static constexpr auto kPadding = std::make_tuple();

};


  
  
  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kSomeField = 1,  // 0x1
    _do_not_handle_this__write_a_default_case_instead = ::std::numeric_limits<::fidl_union_tag_t>::max(),
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& other) const noexcept {
      return *storage_ != *other.storage_;
    }
  constexpr bool IsUnknown() const {
    return Which() == ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
  }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse WithSomeField(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> some_field() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> some_field() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the some_field member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse& some_field(int32_t value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField: return 1;
      default: {
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::kSomeField;
        default: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse::Tag::_do_not_handle_this__write_a_default_case_instead;
    }
  }

};


  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse {
 private:
  struct Storage_;
 public:
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse() noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse&&) noexcept = default;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept;
    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) const noexcept {
      return !::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>::Equal(this, &other);
    }

  bool IsEmpty() const {
      return !(storage_.some_field.has_value()
      );
  }
    
    const std::optional<int32_t>& some_field() const { return storage_.some_field; }
    ::std::optional<int32_t>& some_field() { return storage_.some_field; }

    // Setter for some_field.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& some_field(std::optional<int32_t> value);

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag);

 private:
  struct Storage_ final {
      ::std::optional<int32_t> some_field;
  };

  // TODO(https://fxbug.dev/91252): Box the storage.
  Storage_ storage_;
    Storage_ CloneStorage_() const;
  friend struct ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>;
  friend struct ::fidl::internal::MemberVisitor<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse>;
  static constexpr auto kMembers = std::make_tuple(::fidl::internal::NaturalTableMember<Storage_, int32_t, fidl::internal::NaturalCodingConstraintEmpty>{
        1, &Storage_::some_field
      });
};

  
  
  
  





class UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult {
 private:
  using Storage_ =
    std::variant<
      std::monostate
        , ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse
        , int32_t>;

 public:
  // TODO: share union tag types between wire & natural.
  enum class Tag : fidl_xunion_tag_t {
    kResponse = 1,  // 0x1
    kErr = 2,  // 0x2
  };

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult&& other) noexcept
      : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag{}) {
    *storage_ = std::move(*other.storage_);
  }
  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& operator=(UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult&& other) noexcept {
    if (this != &other) {
      *storage_ = std::move(*other.storage_);
    }
    return *this;
  }
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(other.CloneStorage_()){}
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) noexcept {
      if (this != &other) {
        storage_ = other.CloneStorage_();
      }
      return *this;
    }

    bool operator==(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ == *other.storage_;
    }
    bool operator!=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& other) const noexcept {
      return *storage_ != *other.storage_;
    }

  constexpr ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag Which() const {
    return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::IndexToTag(storage_->index()).value();
  }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult WithResponse(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<1>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<1, Storage_> response() const {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<1, Storage_> response() {
      return ::fidl::internal::UnionMemberView<1, Storage_>(storage_);
    }

    // Sets the union to hold the response member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& response(::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse value) {
      storage_->emplace<1>(std::move(value));
      return *this;
    }
    static UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult WithErr(int32_t val) {
      return UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::make_shared<Storage_>(
        std::in_place_index_t<2>{},
        std::move(val)));
    }

    const ::fidl::internal::UnionMemberView<2, Storage_> err() const {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    ::fidl::internal::UnionMemberView<2, Storage_> err() {
      return ::fidl::internal::UnionMemberView<2, Storage_>(storage_);
    }

    // Sets the union to hold the err member.
    //
    
    UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult& err(int32_t value) {
      storage_->emplace<2>(std::move(value));
      return *this;
    }

  UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag)
      : storage_(std::make_shared<Storage_>()) {}

 private:
  std::shared_ptr<Storage_> storage_;
    std::shared_ptr<Storage_> CloneStorage_() const;
  friend struct ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult>;
  static constexpr auto kMembers = std::make_tuple(
    ::fidl::internal::NaturalUnionMember<::fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>()
      , ::fidl::internal::NaturalUnionMember<fidl::internal::NaturalCodingConstraintEmpty>());

  explicit UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult(std::shared_ptr<Storage_> storage) : storage_(std::move(storage)) {}

  static constexpr size_t TagToIndex(::fidl::internal::NaturalDecoder* decoder, ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag tag) {
    switch (tag) {
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse: return 1;
        case ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kErr: return 2;
      default: {
          decoder->SetError(::fidl::internal::kCodingErrorUnknownUnionTag);
        return 0;
      }
    }
  }

  static constexpr std::optional<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag> IndexToTag(size_t index) {
    switch (index) {
        case 1: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kResponse;
        case 2: return ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult::Tag::kErr;
        default: return std::nullopt;
    }
  }

};


  
  
  


  
  

  

  inline UnknownInteractionsProtocolStrictTwoWayFieldsResponse::UnknownInteractionsProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsResponse::UnknownInteractionsProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsResponse::UnknownInteractionsProtocolStrictTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictTwoWayFieldsResponse::UnknownInteractionsProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsResponse& UnknownInteractionsProtocolStrictTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictTwoWayTableResponse::UnknownInteractionsProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictTwoWayTableResponse::UnknownInteractionsProtocolStrictTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse::operator=(const UnknownInteractionsProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictTwoWayTableResponse::UnknownInteractionsProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsProtocolStrictTwoWayTableResponse& UnknownInteractionsProtocolStrictTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsProtocolStrictTwoWayErrResponse::UnknownInteractionsProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictTwoWayErrResponse::UnknownInteractionsProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsProtocolStrictTwoWayErrResponse::UnknownInteractionsProtocolStrictTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictTwoWayErrResponse::UnknownInteractionsProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsProtocolStrictTwoWayErrResponse& UnknownInteractionsProtocolStrictTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse& UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictTwoWayTableErrResponse::UnknownInteractionsProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictTwoWayTableErrResponse::UnknownInteractionsProtocolStrictTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse::operator=(const UnknownInteractionsProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictTwoWayTableErrResponse::UnknownInteractionsProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsProtocolStrictTwoWayTableErrResponse& UnknownInteractionsProtocolStrictTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleTwoWayResponse::UnknownInteractionsProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayResponse::UnknownInteractionsProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayResponse::UnknownInteractionsProtocolFlexibleTwoWayResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleTwoWayResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleTwoWayResponse::UnknownInteractionsProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayResponse& UnknownInteractionsProtocolFlexibleTwoWayResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse& UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleTwoWayTableResponse::UnknownInteractionsProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayTableResponse::UnknownInteractionsProtocolFlexibleTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse::operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleTwoWayTableResponse::UnknownInteractionsProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayTableResponse& UnknownInteractionsProtocolFlexibleTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleTwoWayErrResponse::UnknownInteractionsProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayErrResponse::UnknownInteractionsProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayErrResponse::UnknownInteractionsProtocolFlexibleTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleTwoWayErrResponse::UnknownInteractionsProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayErrResponse& UnknownInteractionsProtocolFlexibleTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse& UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse::operator=(const UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse& UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictEventFieldsRequest::UnknownInteractionsProtocolStrictEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictEventFieldsRequest::UnknownInteractionsProtocolStrictEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolStrictEventFieldsRequest::UnknownInteractionsProtocolStrictEventFieldsRequest(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictEventFieldsRequest& ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictEventFieldsRequest::UnknownInteractionsProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolStrictEventFieldsRequest& UnknownInteractionsProtocolStrictEventFieldsRequest::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictEventTableRequest::UnknownInteractionsProtocolStrictEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictEventTableRequest::UnknownInteractionsProtocolStrictEventTableRequest(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept : UnknownInteractionsProtocolStrictEventTableRequest(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictEventTableRequest& ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest::operator=(const UnknownInteractionsProtocolStrictEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictEventTableRequest::UnknownInteractionsProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventTableRequest(Storage_{}) {}
    inline UnknownInteractionsProtocolStrictEventTableRequest& UnknownInteractionsProtocolStrictEventTableRequest::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsProtocolStrictEventErrResponse::UnknownInteractionsProtocolStrictEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictEventErrResponse::UnknownInteractionsProtocolStrictEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsProtocolStrictEventErrResponse::UnknownInteractionsProtocolStrictEventErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictEventErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictEventErrResponse::UnknownInteractionsProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsProtocolStrictEventErrResponse& UnknownInteractionsProtocolStrictEventErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictEventFieldsErrResponse::UnknownInteractionsProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictEventFieldsErrResponse::UnknownInteractionsProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolStrictEventFieldsErrResponse::UnknownInteractionsProtocolStrictEventFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictEventFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictEventFieldsErrResponse::UnknownInteractionsProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolStrictEventFieldsErrResponse& UnknownInteractionsProtocolStrictEventFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolStrictEventTableErrResponse::UnknownInteractionsProtocolStrictEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolStrictEventTableErrResponse::UnknownInteractionsProtocolStrictEventTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse& other) noexcept : UnknownInteractionsProtocolStrictEventTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolStrictEventTableErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse::operator=(const UnknownInteractionsProtocolStrictEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolStrictEventTableErrResponse::UnknownInteractionsProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolStrictEventTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsProtocolStrictEventTableErrResponse& UnknownInteractionsProtocolStrictEventTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleEventFieldsRequest::UnknownInteractionsProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleEventFieldsRequest::UnknownInteractionsProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolFlexibleEventFieldsRequest::UnknownInteractionsProtocolFlexibleEventFieldsRequest(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleEventFieldsRequest& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleEventFieldsRequest::UnknownInteractionsProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolFlexibleEventFieldsRequest& UnknownInteractionsProtocolFlexibleEventFieldsRequest::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleEventTableRequest::UnknownInteractionsProtocolFlexibleEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleEventTableRequest::UnknownInteractionsProtocolFlexibleEventTableRequest(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableRequest(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleEventTableRequest& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest::operator=(const UnknownInteractionsProtocolFlexibleEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleEventTableRequest::UnknownInteractionsProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventTableRequest(Storage_{}) {}
    inline UnknownInteractionsProtocolFlexibleEventTableRequest& UnknownInteractionsProtocolFlexibleEventTableRequest::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsProtocolFlexibleEventErrResponse::UnknownInteractionsProtocolFlexibleEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleEventErrResponse::UnknownInteractionsProtocolFlexibleEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsProtocolFlexibleEventErrResponse::UnknownInteractionsProtocolFlexibleEventErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleEventErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleEventErrResponse::UnknownInteractionsProtocolFlexibleEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsProtocolFlexibleEventErrResponse& UnknownInteractionsProtocolFlexibleEventErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsProtocolFlexibleEventFieldsErrResponse& UnknownInteractionsProtocolFlexibleEventFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsProtocolFlexibleEventTableErrResponse::UnknownInteractionsProtocolFlexibleEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsProtocolFlexibleEventTableErrResponse::UnknownInteractionsProtocolFlexibleEventTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) noexcept : UnknownInteractionsProtocolFlexibleEventTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsProtocolFlexibleEventTableErrResponse& ::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse::operator=(const UnknownInteractionsProtocolFlexibleEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsProtocolFlexibleEventTableErrResponse::UnknownInteractionsProtocolFlexibleEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsProtocolFlexibleEventTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsProtocolFlexibleEventTableErrResponse& UnknownInteractionsProtocolFlexibleEventTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse& UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictTwoWayTableResponse::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayTableResponse::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse::operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictTwoWayTableResponse::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayTableResponse& UnknownInteractionsAjarProtocolStrictTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayErrResponse& UnknownInteractionsAjarProtocolStrictTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse& UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse::operator=(const UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse& UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictEventFieldsRequest::UnknownInteractionsAjarProtocolStrictEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsRequest::UnknownInteractionsAjarProtocolStrictEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsRequest::UnknownInteractionsAjarProtocolStrictEventFieldsRequest(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsRequest& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictEventFieldsRequest::UnknownInteractionsAjarProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsRequest& UnknownInteractionsAjarProtocolStrictEventFieldsRequest::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictEventTableRequest::UnknownInteractionsAjarProtocolStrictEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictEventTableRequest::UnknownInteractionsAjarProtocolStrictEventTableRequest(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableRequest(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictEventTableRequest& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest::operator=(const UnknownInteractionsAjarProtocolStrictEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictEventTableRequest::UnknownInteractionsAjarProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventTableRequest(Storage_{}) {}
    inline UnknownInteractionsAjarProtocolStrictEventTableRequest& UnknownInteractionsAjarProtocolStrictEventTableRequest::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictEventErrResponse::UnknownInteractionsAjarProtocolStrictEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictEventErrResponse::UnknownInteractionsAjarProtocolStrictEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsAjarProtocolStrictEventErrResponse::UnknownInteractionsAjarProtocolStrictEventErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictEventErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictEventErrResponse::UnknownInteractionsAjarProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsAjarProtocolStrictEventErrResponse& UnknownInteractionsAjarProtocolStrictEventErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse& UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolStrictEventTableErrResponse::UnknownInteractionsAjarProtocolStrictEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolStrictEventTableErrResponse::UnknownInteractionsAjarProtocolStrictEventTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) noexcept : UnknownInteractionsAjarProtocolStrictEventTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolStrictEventTableErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse::operator=(const UnknownInteractionsAjarProtocolStrictEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolStrictEventTableErrResponse::UnknownInteractionsAjarProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolStrictEventTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsAjarProtocolStrictEventTableErrResponse& UnknownInteractionsAjarProtocolStrictEventTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest& UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolFlexibleEventTableRequest::UnknownInteractionsAjarProtocolFlexibleEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventTableRequest::UnknownInteractionsAjarProtocolFlexibleEventTableRequest(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableRequest(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolFlexibleEventTableRequest& ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest::operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolFlexibleEventTableRequest::UnknownInteractionsAjarProtocolFlexibleEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventTableRequest(Storage_{}) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventTableRequest& UnknownInteractionsAjarProtocolFlexibleEventTableRequest::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsAjarProtocolFlexibleEventErrResponse::UnknownInteractionsAjarProtocolFlexibleEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventErrResponse::UnknownInteractionsAjarProtocolFlexibleEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventErrResponse::UnknownInteractionsAjarProtocolFlexibleEventErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolFlexibleEventErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolFlexibleEventErrResponse::UnknownInteractionsAjarProtocolFlexibleEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventErrResponse& UnknownInteractionsAjarProtocolFlexibleEventErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse& UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) noexcept : UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse::operator=(const UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse& UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse& UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictTwoWayTableResponse::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayTableResponse::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse::operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictTwoWayTableResponse::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayTableResponse& UnknownInteractionsClosedProtocolStrictTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayErrResponse& UnknownInteractionsClosedProtocolStrictTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse& UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse::operator=(const UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse& UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictEventFieldsRequest::UnknownInteractionsClosedProtocolStrictEventFieldsRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsRequest::UnknownInteractionsClosedProtocolStrictEventFieldsRequest(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsRequest::UnknownInteractionsClosedProtocolStrictEventFieldsRequest(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsRequest& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictEventFieldsRequest::UnknownInteractionsClosedProtocolStrictEventFieldsRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventFieldsRequest(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsRequest& UnknownInteractionsClosedProtocolStrictEventFieldsRequest::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictEventTableRequest::UnknownInteractionsClosedProtocolStrictEventTableRequest(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictEventTableRequest::UnknownInteractionsClosedProtocolStrictEventTableRequest(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableRequest(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictEventTableRequest& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest::operator=(const UnknownInteractionsClosedProtocolStrictEventTableRequest& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictEventTableRequest::UnknownInteractionsClosedProtocolStrictEventTableRequest(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventTableRequest(Storage_{}) {}
    inline UnknownInteractionsClosedProtocolStrictEventTableRequest& UnknownInteractionsClosedProtocolStrictEventTableRequest::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictEventErrResponse::UnknownInteractionsClosedProtocolStrictEventErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictEventErrResponse::UnknownInteractionsClosedProtocolStrictEventErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsClosedProtocolStrictEventErrResponse::UnknownInteractionsClosedProtocolStrictEventErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictEventErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictEventErrResponse::UnknownInteractionsClosedProtocolStrictEventErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsClosedProtocolStrictEventErrResponse& UnknownInteractionsClosedProtocolStrictEventErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse& UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedProtocolStrictEventTableErrResponse::UnknownInteractionsClosedProtocolStrictEventTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedProtocolStrictEventTableErrResponse::UnknownInteractionsClosedProtocolStrictEventTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) noexcept : UnknownInteractionsClosedProtocolStrictEventTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedProtocolStrictEventTableErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse::operator=(const UnknownInteractionsClosedProtocolStrictEventTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedProtocolStrictEventTableErrResponse::UnknownInteractionsClosedProtocolStrictEventTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedProtocolStrictEventTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsClosedProtocolStrictEventTableErrResponse& UnknownInteractionsClosedProtocolStrictEventTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse& UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse::operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayTableResponse& UnknownInteractionsDriverProtocolStrictTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayErrResponse& UnknownInteractionsDriverProtocolStrictTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse& UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse::operator=(const UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse& UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayResponse& UnknownInteractionsDriverProtocolFlexibleTwoWayResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse& UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse::operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse& UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse& UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse& UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse::operator=(const UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse& UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse& UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse::operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse& UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse& UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse& UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse::operator=(const UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse& UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse& UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse::operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse(Storage_{}) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse& UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  

  

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(uint8_t __reserved) noexcept
    : storage_({
      .__reserved = std::move(__reserved)
    }) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse(Storage_{
      .__reserved =0u,
  }) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse& UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse::__reserved(uint8_t value) {
      storage_.__reserved = std::move(value);
      return *this;
    }

  
  
  
  
  
  

  

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(int32_t some_field) noexcept
    : storage_({
      .some_field = std::move(some_field)
    }) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept : ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse::operator=(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse(Storage_{
      .some_field ={},
  }) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse& UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse::some_field(int32_t value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  
  
  
  
  
  
  

  

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(Storage_ storage) noexcept : storage_(std::move(storage)) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(const ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(other.CloneStorage_()){}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& ::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse::operator=(const UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& other) noexcept {
      storage_ = other.CloneStorage_();
      return *this;
    }

  inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(::fidl::internal::DefaultConstructPossiblyInvalidObjectTag) : UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse(Storage_{}) {}
    inline UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse& UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse::some_field(std::optional<int32_t> value) {
      storage_.some_field = std::move(value);
      return *this;
    }

  
  
  
  
  

}  // namespace test_unknowninteractions
namespace fidl {


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsRequest, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsRequest, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsRequest, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsRequest, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsRequest, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsResponse, 4> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 1;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalEmptyStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResponse> {};

  
  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 0;
    static constexpr uint32_t kPrimarySize = 4;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = false;
  };

  template <>
  struct IsStruct<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalStructCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResponse, 4> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableRequest> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableRequest> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableRequest> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableRequest> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableRequest> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableResponse> {};

  

  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 8;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsTable<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> :
    public ::fidl::internal::NaturalTableCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResponse> {};

  


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionRequest> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolStrictEventTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionRequest> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsProtocolFlexibleEventTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionRequest> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolStrictEventTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionRequest> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarProtocolFlexibleEventTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionRequest> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedProtocolStrictEventTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolStrictTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsDriverProtocolFlexibleTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsAjarDriverProtocolStrictTwoWayTableErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayFieldsErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 1;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 0;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResponse> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 2;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 16;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayUnionErrResult> {};


  

  
  template <>
  struct IsFidlType<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template<>
  struct TypeTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> {
    static constexpr uint32_t kMaxNumHandles = 0;
    static constexpr uint32_t kMaxDepth = 3;
    static constexpr uint32_t kPrimarySize = 16;
    static constexpr uint32_t kMaxOutOfLine = 24;
    static constexpr bool kHasPointer = true;
  };

  template <>
  struct IsUnion<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> : public std::true_type {};

  template <>
  struct internal::NaturalCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult, ::fidl::internal::NaturalCodingConstraintEmpty> final
    : public ::fidl::internal::NaturalUnionCodingTraits<::test_unknowninteractions::UnknownInteractionsClosedDriverProtocolStrictTwoWayTableErrResult> {};





#pragma clang diagnostic pop

}  // namespace fidl

