@available(added=1)
library test.versions;

@available(added=2, deprecated=3)
alias Alias = string;

@available(added=2, deprecated=3)
const Const uint32 = 0;

@available(added=2, deprecated=3)
type Bits = bits {
    @available(added=2, deprecated=3)
    A = 1;
};

@available(added=2, deprecated=3)
type Enum = enum {
    @available(added=2, deprecated=3)
    A = 1;
};

@available(added=2, deprecated=3)
type Struct = struct {
    @available(added=2, deprecated=3)
    x uint32;
};

@available(added=2, deprecated=3)
type Table = table {
    @available(added=2, deprecated=3)
    1: x uint32;
};

@available(added=2, deprecated=3)
type Union = union {
    @available(added=2, deprecated=3)
    1: x uint32;
};

closed protocol OtherProtocol {};

@available(added=2, deprecated=3)
closed protocol Protocol {
    @available(added=2, deprecated=3)
    compose OtherProtocol;

    @available(added=2, deprecated=3)
    strict Foo();
};

@available(added=2, deprecated=3)
service Service {
    @available(added=2, deprecated=3)
    p client_end:Protocol;
};

@available(added=NEXT)
const ADDED_AT_NEXT bool = true;

@available(added=HEAD)
const ADDED_AT_HEAD bool = true;
