{
  "name": "test.byteandbytes",
  "experiments": [
    "no_optional_structs",
    "output_index_json",
    "transitional_allow_list"
  ],
  "available": {
    "fuchsia": "LEGACY"
  },
  "library_dependencies": [],
  "bits_declarations": [],
  "const_declarations": [],
  "enum_declarations": [],
  "experimental_resource_declarations": [],
  "protocol_declarations": [],
  "service_declarations": [],
  "struct_declarations": [
    {
      "name": "test.byteandbytes/ByteAndBytes",
      "naming_context": [
        "ByteAndBytes"
      ],
      "location": {
        "filename": "../../tools/fidl/fidlc/testdata/byte_and_bytes.test.fidl",
        "line": 3,
        "column": 6,
        "length": 12
      },
      "members": [
        {
          "type": {
            "kind": "primitive",
            "subtype": "uint8",
            "type_shape_v2": {
              "inline_size": 1,
              "alignment": 1,
              "depth": 0,
              "max_handles": 0,
              "max_out_of_line": 0,
              "has_padding": false,
              "has_flexible_envelope": false
            }
          },
          "name": "single_byte",
          "location": {
            "filename": "../../tools/fidl/fidlc/testdata/byte_and_bytes.test.fidl",
            "line": 4,
            "column": 5,
            "length": 11
          },
          "field_shape_v2": {
            "offset": 0,
            "padding": 0
          }
        }
      ],
      "resource": false,
      "is_empty_success_struct": false,
      "type_shape_v2": {
        "inline_size": 1,
        "alignment": 1,
        "depth": 0,
        "max_handles": 0,
        "max_out_of_line": 0,
        "has_padding": false,
        "has_flexible_envelope": false
      }
    }
  ],
  "external_struct_declarations": [],
  "table_declarations": [],
  "union_declarations": [],
  "alias_declarations": [],
  "new_type_declarations": [],
  "declaration_order": [
    "test.byteandbytes/ByteAndBytes"
  ],
  "declarations": {
    "test.byteandbytes/ByteAndBytes": "struct"
  }
}
