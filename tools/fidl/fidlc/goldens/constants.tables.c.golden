// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>


__LOCAL extern const struct FidlCodedEnum test_constants_EnumTypeTable;
__LOCAL extern const struct FidlCodedBits test_constants_BitsTypeTable;
__LOCAL extern const struct FidlCodedEnum test_constants_EnumTable;
__LOCAL extern const struct FidlCodedBits test_constants_BitsTable;
__LOCAL extern const struct FidlCodedStruct test_constants_StructTable;


static const struct FidlCodedString String4294967295nonnullableTable = {.tag=kFidlTypeString, .max_size=4294967295u, .nullable=kFidlNullability_Nonnullable};


static bool EnumValidatorFor_test_constants_EnumType(uint64_t v) {
  switch (v) {
    case 3ul:
    case 4ul:
      return true;
    default:
      return false;
  }
}

const struct FidlCodedEnum test_constants_EnumTypeTable = {.tag=kFidlTypeEnum, .underlying_type=kFidlCodedPrimitiveSubtype_Int32, .strictness=kFidlStrictness_Strict, .validate=&EnumValidatorFor_test_constants_EnumType, .name="test.constants/EnumType"};

const struct FidlCodedBits test_constants_BitsTypeTable = {.tag=kFidlTypeBits, .underlying_type=kFidlCodedPrimitiveSubtype_Uint32, .strictness=kFidlStrictness_Strict, .mask=7ul, .name="test.constants/BitsType"};

static bool EnumValidatorFor_test_constants_Enum(uint64_t v) {
  switch (v) {
    case 170ul:
      return true;
    default:
      return false;
  }
}

const struct FidlCodedEnum test_constants_EnumTable = {.tag=kFidlTypeEnum, .underlying_type=kFidlCodedPrimitiveSubtype_Uint32, .strictness=kFidlStrictness_Strict, .validate=&EnumValidatorFor_test_constants_Enum, .name="test.constants/Enum"};

const struct FidlCodedBits test_constants_BitsTable = {.tag=kFidlTypeBits, .underlying_type=kFidlCodedPrimitiveSubtype_Uint32, .strictness=kFidlStrictness_Strict, .mask=8ul, .name="test.constants/Bits"};

static const struct FidlStructElement Fields21test_constants_Struct[] = {
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_NotResource},.offset_v2=8u, .field_type=(fidl_type_t*)(&String4294967295nonnullableTable)}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_NotResource},.offset_v2=24u, .field_type=(fidl_type_t*)(&fidl_internal_kBoolTable)}},
    /*FidlStructPadding*/{.padding=/*FidlStructPadding*/{.offset_v2=24u, .header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Padding32,.is_resource=kFidlIsResource_NotResource},.mask_32=4294967040u}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_NotResource},.offset_v2=28u, .field_type=(fidl_type_t*)(&test_constants_EnumTable)}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_NotResource},.offset_v2=32u, .field_type=(fidl_type_t*)(&test_constants_BitsTable)}},
    /*FidlStructPadding*/{.padding=/*FidlStructPadding*/{.offset_v2=36u, .header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Padding32,.is_resource=kFidlIsResource_NotResource},.mask_32=4294967295u}}
};
const struct FidlCodedStruct test_constants_StructTable = {.tag=kFidlTypeStruct, .is_empty=kFidlEmpty_IsNotEmpty, .elements=Fields21test_constants_Struct, .element_count=6u, .size_v2=40u, .name="test.constants/Struct"};

