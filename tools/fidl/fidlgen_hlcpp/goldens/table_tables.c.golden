// WARNING: This file is machine generated by fidlgen.

// fidl_experiment = output_index_json

#include <lib/fidl/internal.h>

const struct FidlCodedTable test_table_ExtensionTableTable;

const struct FidlCodedTable test_table_EmptyTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/EmptyTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = NULL,
    .field_count = 0,
};

const struct FidlCodedTable test_table_ExtensionTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/ExtensionTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = NULL,
    .field_count = 0,
};

static const struct FidlTableField Fields27test_table_NewerSimpleTable[] = {
    {.ordinal = 1, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 5, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 6, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
};
const struct FidlCodedTable test_table_NewerSimpleTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/NewerSimpleTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = Fields27test_table_NewerSimpleTable,
    .field_count = 3,
};

static const struct FidlTableField Fields27test_table_OlderSimpleTable[] = {
    {.ordinal = 1, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
};
const struct FidlCodedTable test_table_OlderSimpleTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/OlderSimpleTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = Fields27test_table_OlderSimpleTable,
    .field_count = 1,
};

static const struct FidlTableField Fields30test_table_ReverseOrdinalTable[] = {
    {.ordinal = 1, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 2, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 3, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
};
const struct FidlCodedTable test_table_ReverseOrdinalTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/ReverseOrdinalTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = Fields30test_table_ReverseOrdinalTable,
    .field_count = 3,
};

static const struct FidlTableField Fields22test_table_SimpleTable[] = {
    {.ordinal = 1, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 5, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
};
const struct FidlCodedTable test_table_SimpleTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/SimpleTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = Fields22test_table_SimpleTable,
    .field_count = 2,
};

static const struct FidlTableField Fields32test_table_SixtyFourOrdinalTable[] = {
    {.ordinal = 1, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 2, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 3, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 4, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 5, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 6, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 7, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 8, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 9, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 10, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 11, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 12, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 13, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 14, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 15, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 16, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 17, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 18, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 19, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 20, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 21, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 22, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 23, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 24, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 25, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 26, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 27, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 28, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 29, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 30, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 31, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 32, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 33, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 34, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 35, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 36, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 37, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 38, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 39, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 40, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 41, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 42, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 43, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 44, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 45, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 46, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 47, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 48, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 49, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 50, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 51, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 52, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 53, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 54, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 55, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 56, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 57, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 58, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 59, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 60, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 61, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 62, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 63, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
    {.ordinal = 64, .type = (const fidl_type_t*)&test_table_ExtensionTableTable},
};
const struct FidlCodedTable test_table_SixtyFourOrdinalTableTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/SixtyFourOrdinalTable",
    .is_resource = kFidlIsResource_NotResource,
    .fields = Fields32test_table_SixtyFourOrdinalTable,
    .field_count = 64,
};

static const struct FidlTableField Fields30test_table_TableWithAttributes[] = {
    {.ordinal = 1, .type = (const fidl_type_t*)&fidl_internal_kInt64Table},
};
const struct FidlCodedTable test_table_TableWithAttributesTable = {
    .tag = kFidlTypeTable,
    .name = "test.table/TableWithAttributes",
    .is_resource = kFidlIsResource_NotResource,
    .fields = Fields30test_table_TableWithAttributes,
    .field_count = 1,
};
