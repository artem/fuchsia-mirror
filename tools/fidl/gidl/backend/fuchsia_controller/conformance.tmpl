{{/*
# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
*/}}

import fuchsia_controller_py
import fidl.test_conformance as test_conformance
import struct
import unittest

def create_handle(cls):
    """Generalized handle-maker (for sockets, events, channel, etc."""
    res = cls.create()
    if isinstance(res, tuple):
        return res[0]
    return res

class ConformanceTests(unittest.TestCase):
{{ range .EncodeSuccessCases }}
    def test_{{ .Name }}_encode(self):
        {{- if .HandleDefs }}
        handle_defs = {{ .HandleDefs }}
        {{- end }}
        value = {{ .Value }}
        b, hdls = value.encode()
        self.assertEqual(b, {{ .Bytes }})
        {{- if .Handles }}
        self.assertEqual([hdl[1] for hdl in hdls], {{ .Handles }})
        {{- else if .HandleDispositions }}
        self.assertEqual(hdls, {{ .HandleDispositions }})
        {{- else }}
        self.assertEqual(hdls, [])
        {{- end }}
{{ end }}

if __name__ == "__main__":
   unittest.main()
