// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        // Netstack3 does not support TCP (yet).
        {
            type: "expect_pass",
            matchers: [
                "*",
            ],
        },
        {
            type: "skip",
            matchers: [
                // Skip tests that will otherwise hang forever.
                // TODO(https://fxbug.dev/42063184): un-skip some of these when the data path is ready.
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSendShutdownWrite/*",

                // Skip flaky tests. TODO(https://fxbug.dev/42082275): un-skip
                // once de-flaked.
                "AllInetTests/TcpSocketTest.SendUnblocksOnSendBufferIncrease/*",

                // Skip flaky tests. TODO(https://fxbug.dev/42063184): un-skip
                // once de-flaked.
                "AllTCPSockets/TCPSocketPairTest.ShutdownWrServerClientClose/*",
                "AllInetTests/TcpSocketTest.PollWithFullBufferBlocks/*",
                "AllInetTests/TcpSocketTest.ClosedWriteBlockingSocket/*",
                "AllInetTests/TcpSocketTest.ClosedReadBlockingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownWriteConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownReadWriteConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSendRecv/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectRecvShutdownRead/*",

                // These tests fail, but are slow to do so. Skip them
                // instead to avoid the test runner from timing out.
                "AllTCPSockets/TCPSocketPairTest.RSTSentOnCloseWithUnreadData/*",
                "AllTCPSockets/TCPSocketPairTest.RSTCausesPollHUP/*",
                "AllTCPSockets/TCPSocketPairTest.RSTSentOnCloseWithUnreadDataAllowsReadBuffered/*",
            ],
        },
        {
            type: "expect_failure",
            matchers: [
                // Otherwise, expect failure.
                "AllInetTests/TcpSocketTest.ShutdownWriteInTimeWait/*",
                "AllInetTests/TcpSocketTest.MsgTrunc/*",
                "AllInetTests/TcpSocketTest.MsgTruncWithCtrunc/*",
                "AllInetTests/TcpSocketTest.MsgTruncWithCtruncOnly/*",
                "AllInetTests/TcpSocketTest.MsgTruncLargeSize/*",
                "AllInetTests/TcpSocketTest.MsgTruncPeek/*",
                "AllInetTests/TcpSocketTest.TcpInqSetSockOpt/*",
                "AllInetTests/TcpSocketTest.TcpInq/*",
                "AllInetTests/TcpSocketTest.TcpSCMPriority/*",
                "AllInetTests/TcpSocketTest.GetSocketAcceptConnListener/*",
                "AllInetTests/TcpSocketTest.GetSocketAcceptConnNonListener/*",
                "AllInetTests/SimpleTcpSocketTest.SynRcvdOnListenerShutdown/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownReadConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampZeroClosedSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampBelowMinRcvBuf/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampAboveHalfMinRcvBuf/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPDeferAcceptNeg/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPDeferAcceptGreaterThanZero/*",
                "AllInetTests/SimpleTcpSocketTest.SetMaxSegFailsForInvalidMSSValues/*",
                "AllInetTests/SimpleTcpSocketTest.SetMaxSeg/*",
                "AllInetTests/SimpleTcpSocketTest.SetGetTCPCongestionShortReadBuffer/*",
                "AllInetTests/SimpleTcpSocketTest.SetGetTCPCongestionLargeReadBuffer/*",
                "AllInetTests/SimpleTcpSocketTest.SetCongestionControlSucceedsForSupported/*",
                "AllInetTests/SimpleTcpSocketTest.SetCongestionControlFailsForUnsupported/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectRetry/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListenerRead/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListenerPeek/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListener/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnect_PollWrNorm/*",
                "AllInetTests/SimpleTcpSocketTest.MaxSegDefault/*",
                "AllInetTests/SimpleTcpSocketTest.GetTCPDeferAcceptDefault/*",
                "AllInetTests/SimpleTcpSocketTest.ConnectUnspecifiedAddress/*",
                "AllInetTests/SimpleTcpSocketTest.CloseNonConnectedLingerOption/*",
                "AllInetTests/SimpleTcpSocketTest.CleanupOnConnectionRefused/*",
                "AllTCPSockets/AllSocketPairTest.BasicSendmmsg/*",
                "AllTCPSockets/AllSocketPairTest.SendmmsgIsLimitedByMAXIOV/*",
                "AllTCPSockets/AllSocketPairTest.BasicRecvmmsg/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsg10KB/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsgMsgCtruncNoop/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsg16KB/*",
                "AllTCPSockets/AllSocketPairTest.RecvmsgMsghdrFlagsCleared/*",
                "AllTCPSockets/AllSocketPairTest.RecvmsgPeekMsghdrFlagsCleared/*",
                "AllTCPSockets/AllSocketPairTest.RecvmmsgInvalidTimeout/*",
                "AllTCPSockets/AllSocketPairTest.RecvmmsgTimeoutBeforeRecv/*",
                "AllTCPSockets/AllSocketPairTest.RecvWaitAll/*",
                "AllTCPSockets/AllSocketPairTest.RecvWaitAllDontWait/*",
                "AllTCPSockets/AllSocketPairTest.RecvTimeoutWaitAll/*",
                "AllTCPSockets/AllSocketPairTest.SetAndGetBooleanSocketOptions/*",
                "AllTCPSockets/AllSocketPairTest.GetSocketOutOfBandInlineOption/*",
                "AllTCPSockets/AllSocketPairTest.GetSocketRcvbufOption/*",
                "AllTCPSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",
                "AllTCPSockets/TCPSocketPairTest.CheckTcpInfoFields/*",
                "AllTCPSockets/TCPSocketPairTest.ShutdownRdUnreadDataShouldCauseNoPacketsUnlessClosed/*",
                "AllTCPSockets/TCPSocketPairTest.TCPCorkDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPCork/*",
                "AllTCPSockets/TCPSocketPairTest.TCPCork/*",
                "AllTCPSockets/TCPSocketPairTest.SetSoKeepaliveClosed/*",
                "AllTCPSockets/TCPSocketPairTest.SetOOBInline/*",
                "AllTCPSockets/TCPSocketPairTest.MsgTruncMsgPeek/*",
                "AllTCPSockets/TCPSocketPairTest.SetCongestionControlSucceedsForSupported/*",
                "AllTCPSockets/TCPSocketPairTest.SetGetTCPCongestionShortReadBuffer/*",
                "AllTCPSockets/TCPSocketPairTest.SetGetTCPCongestionLargeReadBuffer/*",
                "AllTCPSockets/TCPSocketPairTest.SetCongestionControlFailsForUnsupported/*",
                "AllTCPSockets/TCPSocketPairTest.SoLingerOptionWithReset/*",
                "AllTCPSockets/TCPSocketPairTest.SetTCPWindowClampBelowMinRcvBufConnectedSocket/*",
                "AllTCPSockets/TCPSocketPairTest.IpMulticastTtlDefault/*",
                "AllTCPSockets/TCPSocketPairTest.IpMulticastLoopDefault/*",
                "AllTCPSockets/TCPSocketPairTest.SetAndGetLingerOption/*",
                "AllTCPSockets/TCPSocketPairTest.SetOffLingerOption/*",
                "AllTCPSockets/TCPSocketPairTest.CloseWithLingerOption/*",
                "AllTCPSockets/TCPSocketPairTest.ResetWithSoLingerZeroTimeoutOption/*",
            ],
        },
    ],
}
