// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        // Netstack3 does not support TCP (yet).
        {
            type: "expect_pass",
            matchers: [
                "*",
            ],
        },
        {
            type: "skip",
            matchers: [
                // Skip tests that will otherwise hang forever.
                // TODO(https://fxbug.dev/111877): un-skip some of these when the data path is ready.
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSendShutdownWrite/*",

                // Skip flaky tests. TODO(https://fxbug.dev/111877): un-skip
                // once de-flaked.
                "AllInetTests/TcpSocketTest.PollWithFullBufferBlocks/*",
                "AllInetTests/TcpSocketTest.ClosedWriteBlockingSocket/*",
                "AllInetTests/TcpSocketTest.ClosedReadBlockingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownWriteConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownReadWriteConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSendRecv/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectRecvShutdownRead/*",
            ],
        },
        {
            type: "expect_failure",
            matchers: [
                // Otherwise, expect failure.
                "AllInetTests/TcpSocketTest.ShutdownWriteInTimeWait/*",
                "AllInetTests/TcpSocketTest.MsgTrunc/*",
                "AllInetTests/TcpSocketTest.MsgTruncWithCtrunc/*",
                "AllInetTests/TcpSocketTest.MsgTruncWithCtruncOnly/*",
                "AllInetTests/TcpSocketTest.MsgTruncLargeSize/*",
                "AllInetTests/TcpSocketTest.MsgTruncPeek/*",
                "AllInetTests/TcpSocketTest.TcpInqSetSockOpt/*",
                "AllInetTests/TcpSocketTest.TcpInq/*",
                "AllInetTests/TcpSocketTest.TcpSCMPriority/*",
                "AllInetTests/TcpSocketTest.GetSocketAcceptConnListener/*",
                "AllInetTests/TcpSocketTest.GetSocketAcceptConnNonListener/*",
                "AllInetTests/SimpleTcpSocketTest.SynRcvdOnListenerShutdown/*",
                "AllInetTests/SimpleTcpSocketTest.ShutdownReadConnectingSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampZeroClosedSocket/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampBelowMinRcvBuf/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPWindowClampAboveHalfMinRcvBuf/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPDeferAcceptNeg/*",
                "AllInetTests/SimpleTcpSocketTest.SetTCPDeferAcceptGreaterThanZero/*",
                "AllInetTests/SimpleTcpSocketTest.SetMaxSegFailsForInvalidMSSValues/*",
                "AllInetTests/SimpleTcpSocketTest.SetMaxSeg/*",
                "AllInetTests/SimpleTcpSocketTest.SetGetTCPCongestionShortReadBuffer/*",
                "AllInetTests/SimpleTcpSocketTest.SetGetTCPCongestionLargeReadBuffer/*",
                "AllInetTests/SimpleTcpSocketTest.SetCongestionControlSucceedsForSupported/*",
                "AllInetTests/SimpleTcpSocketTest.SetCongestionControlFailsForUnsupported/*",
                "AllInetTests/SimpleTcpSocketTest.SelfConnectSend/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectRetry/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListenerRead/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListenerPeek/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnectNoListener/*",
                "AllInetTests/SimpleTcpSocketTest.NonBlockingConnect_PollWrNorm/*",
                "AllInetTests/SimpleTcpSocketTest.MaxSegDefault/*",
                "AllInetTests/SimpleTcpSocketTest.GetTCPDeferAcceptDefault/*",
                "AllInetTests/SimpleTcpSocketTest.ConnectUnspecifiedAddress/*",
                "AllInetTests/SimpleTcpSocketTest.CloseNonConnectedLingerOption/*",
                "AllInetTests/SimpleTcpSocketTest.CleanupOnConnectionRefused/*",

                "AllTCPSockets/AllSocketPairTest.BasicSendmmsg/*",
                "AllTCPSockets/AllSocketPairTest.SendmmsgIsLimitedByMAXIOV/*",
                "AllTCPSockets/AllSocketPairTest.BasicRecvmmsg/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsg10KB/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsgMsgCtruncNoop/*",
                "AllTCPSockets/AllSocketPairTest.SendmsgRecvmsg16KB/*",
                "AllTCPSockets/AllSocketPairTest.RecvmsgMsghdrFlagsCleared/*",
                "AllTCPSockets/AllSocketPairTest.RecvmsgPeekMsghdrFlagsCleared/*",
                "AllTCPSockets/AllSocketPairTest.RecvmmsgInvalidTimeout/*",
                "AllTCPSockets/AllSocketPairTest.RecvmmsgTimeoutBeforeRecv/*",
                "AllTCPSockets/AllSocketPairTest.LingerSocketOption/*",
                "AllTCPSockets/AllSocketPairTest.RecvWaitAll/*",
                "AllTCPSockets/AllSocketPairTest.RecvWaitAllDontWait/*",
                "AllTCPSockets/AllSocketPairTest.RecvTimeoutWaitAll/*",
                "AllTCPSockets/AllSocketPairTest.GetSockoptDomain/*",
                "AllTCPSockets/AllSocketPairTest.GetSockoptProtocol/*",
                "AllTCPSockets/AllSocketPairTest.SetAndGetBooleanSocketOptions/*",
                "AllTCPSockets/AllSocketPairTest.GetSocketOutOfBandInlineOption/*",
                "AllTCPSockets/AllSocketPairTest.GetSocketRcvbufOption/*",
                "AllTCPSockets/AllSocketPairTest.GetSetSocketRcvlowatOption/*",

                // Test case variants 2,5 should fail because the test
                // dual-stack sockets, which Netstack doesn't support yet.
                // The IPv4-only and IPv6-only variants are covered by other
                // patterns.
                "AllTCPSockets/AllSocketPairTest.*/2",
                "AllTCPSockets/AllSocketPairTest.*/5",
            ],
        },
    ],
}
