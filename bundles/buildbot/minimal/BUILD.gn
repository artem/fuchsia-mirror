# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/testing/validated_test_types_group.gni")

assert(is_fuchsia, "These can only be defined in the default toolchain")

# For use with the 'hermetic_test_package_labels' GN build argument.
validated_test_types_group("hermetic_tests") {
  testonly = true
  allowed_test_types = [ "hermetic" ]
  deps = [ "//examples:hermetic_tests" ]
}

# For use with the 'test_package_labels' GN build argument.
group("non-hermetic_tests") {
  testonly = true
  deps = []
  public_deps = []
  data_deps = []

  # Ensure that no tests are added to the non-hermetic tests group
  assert(
      deps + public_deps + data_deps == [],
      "The minimal product does not support the running of non-hermetic tests in infra.")
}

# For use with the 'e2e_test_labels' GN build argument.
group("e2e_tests") {
  testonly = true
  deps = []
  public_deps = []
  data_deps = []

  # Ensure that no tests are added to the e2e_tests tests group
  assert(
      deps + public_deps + data_deps == [],
      "The minimal product does not support the running of end-to-end tests in infra.")
}

# WARNING: Known to infrastructure
group("minimal") {
  testonly = true

  # The buildbot groups are not allowed to add platform features, only tests
  # and tools.
  assert_no_deps = [ "//bundles/platform/*" ]

  deps = [
    # All tests from the standardized test groups:
    ":e2e_tests",
    ":hermetic_tests",
    ":non-hermetic_tests",

    # Additional non-test things to build:
    ":additional_build_targets",

    # TODO(fxbug.dev/131001): Define the set of tests that should run on minimal.
    "//examples:tests",
    "//sdk:tests",
    "//src/connectivity/network:tests",

    # TODO(fxbug.dev/132473): Uncomment once all tests pass on minimal.x64.
    # "//src/developer:tests",
    "//src/bringup:tests",
    "//src/devices:tests",
    "//src/diagnostics:tests",
    "//src/fonts:tests",
    "//src/hwinfo:tests",
    "//src/intl:tests",
    "//src/lib:tests",
    "//src/performance:tests",
    "//src/power:tests",
    "//src/storage:tests",
    "//src/sys:tests",
    "//src/zircon:tests",
  ]

  if (current_cpu == "riscv64") {
    deps -= [
      # TODO(fxbug.dev/122609): Remove after removing Go dependencies on RISC-V.
      "//src/connectivity/network:tests",

      # TODO(fxbug.dev/292292675): Enable once all dependencies succeed on RISC-V.
      # TODO(fxbug.dev/132473): Uncomment when adding to the default targets.
      # "//src/developer:tests",

      # TODO(fxbug.dev/297201368): Remove when storage tests pass on RISC-V.
      "//src/storage:tests",
    ]

    deps += [
      # Run a subset of the network tests until fxbug.dev/122609 is addressed
      # and all tests (removed above) can be built and run.
      "//src/connectivity/network/tests:tests",
    ]
  }
}

# Contains additional targets to be built that are not needed for tests.
# This allows bots to ensure buildable targets do not regress even if they are
# not being run by another bot (i.e., during bringup of a new CPU architecture).
group("additional_build_targets") {
  testonly = true
  deps = [ "//examples" ]
}
