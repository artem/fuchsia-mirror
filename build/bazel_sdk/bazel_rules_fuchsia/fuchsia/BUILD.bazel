# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Public Fuchsia rules.

load("//fuchsia/private:flags.bzl", "package_repo_path_flag")
load("@fuchsia_sdk//fuchsia/private:fuchsia_api_level.bzl", "fuchsia_api_level", "fuchsia_static_api_level")

# Specifies the API level to use when building a package. A user can set this
# flag on the command line to override the package level or they can set it on
# their package. If left empty, the build will fail.
fuchsia_static_api_level(
    # LINT.IfChange
    name = "fuchsia_api_level",
    # LINT.ThenChange(private/fuchsia_api_level.bzl)
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

fuchsia_api_level(
    # LINT.IfChange
    name = "repository_default_fuchsia_api_level",
    # LINT.ThenChange(private/fuchsia_transition.bzl)
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

fuchsia_api_level(
    # LINT.IfChange
    name = "override_fuchsia_api_level",
    # LINT.ThenChange(private/fuchsia_transition.bzl)
    build_setting_default = "",
    visibility = ["//visibility:public"],
)

# Toolchain type for the Fuchsia toolchain.
toolchain_type(
    name = "toolchain",
    visibility = ["//visibility:public"],
)

# Export files for use in documentation.
exports_files(
    glob(["*.bzl"]),
    visibility = ["//:__subpackages__"],
)

# Command line flags

# Allows the user to specify a path to a package repository
# which packages can be published to.
#
# bazel build //:my_package --@fuchsia_sdk//fuchsia:package_repo=out/foo
package_repo_path_flag(
    name = "package_repo",
    build_setting_default = "",
    visibility = ["//visibility:public"],
)
