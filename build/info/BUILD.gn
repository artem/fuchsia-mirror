# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/bootfs_files_for_assembly.gni")
import("//build/bazel/bazel_inputs.gni")
import("//build/board.gni")
import("//build/components/fuchsia_package.gni")
import("//build/dist/resource.gni")
import("//build/info/info.gni")

if (current_toolchain == default_toolchain) {
  action("latest-commit-date") {
    # Ensure this action is invoked if integration HEAD moves
    inputs = [ "//integration/.git/HEAD" ]
    outputs = [
      build_info_files.latest_commit_date,
      build_info_files.minimum_utc_stamp,
    ]
    script = "gen-latest-commit-date.sh"
    args = rebase_path([ "//integration/" ] + outputs, root_build_dir)
  }

  if (build_info_version != "") {
    generated_file("version") {
      outputs = [ build_info_files.version ]
      contents = build_info_version
    }
  } else {
    copy("version") {
      sources = [ build_info_files.latest_commit_date ]
      outputs = [ build_info_files.version ]
      deps = [ ":latest-commit-date" ]
    }
  }

  resource("minimum_utc_stamp") {
    sources = [ build_info_files.minimum_utc_stamp ]
    outputs = [ "config/build_info/minimum_utc_stamp" ]
    deps = [ ":latest-commit-date" ]
  }

  bootfs_files_for_assembly("bootfs") {
    deps = [ ":minimum_utc_stamp" ]
  }

  bazel_input_resource("build_info.bazel_input") {
    sources = [
      build_info_files.version,
      build_info_files.jiri_snapshot,
      build_info_files.latest_commit_date,
      build_info_files.minimum_utc_stamp,
    ]
    outputs = [
      "build_info_version.txt",
      "jiri_snapshot.xml",
      "latest-commit-date.txt",
      "minimum-utc-stamp.txt",
    ]
    deps = [ ":build_info_files" ]
  }

  group("build_info_files") {
    public_deps = [
      ":latest-commit-date",
      ":minimum_utc_stamp",
      ":version",
    ]
  }
} else {
  group("build_info_files") {
    public_deps = [ ":build_info_files($default_toolchain)" ]
  }
}
