# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

- workstream: "Fuchsia to start providing a stable driver application binary
    interface (ABI) for at least six months for downstream products that use
    drivers compiled through the SDK. This confirms the platform's commitment
    to delivering reliable and long-lasting driver support."
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: Framework and APIs for system power management.
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: Bluetooth LE Audio, MAP profiles, OBEX profiles and HFP Handsfree.
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: Starnix is running on RISC-V ISA on an emulator.
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: "Starnix support for accessing various hardware subsystems through
    <code>sysfs</code>."
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: Unified address space support for faster syscalls.
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: Support eBPF (Extended Berkeley Packet Filter) in Starnix..
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: Full <code>strace</code> and <code>ptrace</code> support in Starnix.
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: "Support SELinux process access control in Starnix."
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: "Support for running driver conformance tests against all partner
    and platform product configurations, validating any related drivers against
    built system images."
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: "All actively developed and net new drivers are migrated to, and
    built on, DFv2 and FIDL."
  area: Platform Evolution
  category: [Platform Evolution]

- workstream: "Fast and reliable workflows for engineers using Rust in the
    platform source tree: CI for rust-analyzer, <5s check cycles, discoverable
    Fuchsia Rust API documentation, and streamlined process to keep third-party
    Rust libraries up to date."
  area: Developer Experience
  category: [Developer Experience]

- workstream: "Support for CPU Profiling across all supported architectures,
    improve Fuchsia tracing for developers."
  area: Developer Experience
  category: [Developer Experience]

- workstream: "SDK can be used to bring-up new hardware. This includes
    developing a board driver, drivers for peripheral devices on the board, and
    implementing board definitions for the hardware using the SDK."
  area: Developer Experience
  category: [Developer Experience]

- workstream: "Enable all DFv2/FIDL drivers to be built, tested, and debugged
    with the SDK and Bazel, as part of the platform source tree or in their own
    standalone repository."
  area: Developer Experience
  category: [Developer Experience]

- workstream: "FIDL element deprecations can be treated as compile-time
    warnings, improving awareness of platform evolutions."
  area: Developer Experience
  category: [Developer Experience]

- workstream: "Google Test (aka gtest) is the preferred, support unit test
    framework for driver authoring in the Fuchsia platform source tree and with
    the SDK (replacing zxtest for the same purpose)."
  area: Developer Experience
  category: [Developer Experience]

- workstream: "Enable Driver Conformance tests to be distributed and run by
    driver authors, to validate that their driver conforms to published
    interfaces before publishing back to Fuchsia."
  area: Developer Experience
  category: [Developer Experience]
