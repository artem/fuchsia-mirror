# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")

rustc_binary("rust_fxt_integration_test_bin") {
  edition = "2021"
  source_root = "src/integration_test.rs"
  sources = [ source_root ]
  deps = [
    "//sdk/fidl/fuchsia.component:fuchsia.component_rust",
    "//sdk/fidl/fuchsia.component.decl:fuchsia.component.decl_rust",
    "//sdk/fidl/fuchsia.tracing.controller:fuchsia.tracing.controller_rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/performance/lib/fxt/rust",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:tracing",
  ]
}

fuchsia_test_component("integration_test") {
  manifest = "meta/integration_test.cml"
  deps = [ ":rust_fxt_integration_test_bin" ]
}

executable("provider_puppet_cpp_bin") {
  sources = [ "src/provider_puppet.cc" ]
  deps = [
    "//sdk/lib/syslog/cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/trace-provider",
  ]
}

rustc_binary("provider_puppet_rust_bin") {
  edition = "2021"
  source_root = "src/provider_puppet.rs"
  sources = [ source_root ]

  deps = [
    "//src/lib/fuchsia",
    "//src/lib/trace/rust:trace",
    "//src/lib/trace/rust:trace-provider",
    "//src/lib/zircon/rust:fuchsia-zircon",
  ]
}

fuchsia_component("provider_puppet_cpp") {
  manifest = "meta/provider_puppet_cpp.cml"
  deps = [ ":provider_puppet_cpp_bin" ]
}

fuchsia_component("provider_puppet_rust") {
  manifest = "meta/provider_puppet_rust.cml"
  deps = [ ":provider_puppet_rust_bin" ]
}

fuchsia_test_package("fxt_integration_test_cpp_puppet") {
  test_components = [ ":integration_test" ]

  deps = [
    ":provider_puppet_cpp",
    "//src/performance/trace_manager:component_hermetic",
  ]

  # Make a data dep so that the golden tests get "run" as build actions when running w/ fx test.
  data_deps = [ "goldens:goldens($host_toolchain)" ]
}

fuchsia_test_package("fxt_integration_test_rust_puppet") {
  test_components = [ ":integration_test" ]

  deps = [
    ":provider_puppet_rust",
    "//src/performance/trace_manager:component_hermetic",
  ]

  # Make a data dep so that the golden tests get "run" as build actions when running w/ fx test.
  data_deps = [ "goldens:goldens($host_toolchain)" ]
}

group("tests") {
  testonly = true
  deps = [
    ":fxt_integration_test_cpp_puppet",
    ":fxt_integration_test_rust_puppet",
    "goldens",
  ]
}
