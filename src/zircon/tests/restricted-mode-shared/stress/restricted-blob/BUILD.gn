# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/toolchain/zircon/user_basic_redirect.gni")
import("//build/zircon/embedded_blob.gni")
import("//build/zircon/hermetic_code_blob.gni")

user_basic_redirect("restricted-blob") {
  visibility = [ "../*" ]
  testonly = true

  # The embedded blob is built in the user.basic environment too.  It doesn't
  # really matter that it is, but it makes it easier to have it depend on the
  # hermetic_code_blob() target that needs to be compiled in user.basic.
  public_deps = [ ":reader" ]
}

embedded_blob("reader") {
  visibility = [ ":*" ]
  testonly = true

  sources = [ "$target_out_dir/reader.bin" ]
  deps = [ ":reader.blob" ]
  public_deps = [ ":reader.blob.public" ]
}

hermetic_code_blob("reader.blob") {
  visibility = [ ":*" ]
  testonly = true

  output_name = "reader"
  public = [ "reader.h" ]
  public_deps = [ "//zircon/system/public" ]

  entrypoint = "Reader"
  sources = [ "reader.cc" ]

  # TODO(fxbug.dev/129545): LLD lets --no-pie trump the code generation
  # switches, but this needs to be compiled as PIC though linked differently.
  if (toolchain_variant.tags + [ "lto" ] - [ "lto" ] !=
      toolchain_variant.tags) {
    ldflags = [ "-Wl,-mllvm,-relocation-model=pic" ]
  }
}
