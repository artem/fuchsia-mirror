# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")

rustc_binary("mock_services") {
  testonly = true
  name = "critical_services_mock_services"
  edition = "2021"
  source_root = "src/mock_services.rs"

  deps = [
    "fidl:fuchsia.test.pwrbtn_rust",
    "//sdk/fidl/fuchsia.hardware.input:fuchsia.hardware.input_rust",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/storage/lib/vfs/rust:vfs",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:tracing",
  ]

  sources = [ "src/mock_services.rs" ]
}

rustc_test("test_driver") {
  testonly = true
  name = "critical_services_integration_test"
  edition = "2021"
  source_root = "src/test.rs"

  deps = [
    "fidl:fuchsia.test.pwrbtn_rust",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-component",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:tracing",
  ]

  sources = [ "src/test.rs" ]
}

fuchsia_component_manifest("manifest") {
  component_name = "critical-services"
  manifest = "//src/bringup/bin/critical-services/meta/critical-services.cml"
}

fuchsia_component("critical-services-component") {
  testonly = true
  cm_label = ":manifest"
  deps = [ "//src/bringup/bin/critical-services" ]
}

fuchsia_structured_config_values2("config_values") {
  testonly = true
  cm_label = ":manifest"
  component_name = "critical-services"
  values = {
    exception_handler_available = false
  }
}

fuchsia_component("test_driver_component") {
  testonly = true
  component_name = "test-driver"
  manifest = "meta/test-driver.cml"
  deps = [ ":test_driver" ]
}

fuchsia_test_component("mock_services_component") {
  component_name = "mock_services"
  manifest = "meta/critical_services_integration_test.cml"
  deps = [ ":mock_services" ]
}

fuchsia_test_package("critical-services-integration-test") {
  test_components = [ ":mock_services_component" ]
  deps = [
    ":config_values",
    ":critical-services-component",
    ":test_driver_component",
  ]
}
