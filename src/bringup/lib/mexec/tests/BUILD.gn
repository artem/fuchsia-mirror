# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/testing/boot_tests/zbi_test.gni")
import("//build/testing/boot_tests/zbi_test_executable.gni")
import("//src/bringup/lib/mexec/testing/zbi_test.gni")

group("tests") {
  testonly = true
  deps = [
    ":mexec-entropy-test",
    ":mexec-smoke-test",
  ]
}

zbi_test_executable("no-op-success") {
  sources = [ "no-op-success.cc" ]
}

# Define both an child zbi_test() and an mexec_zbi_test() using it.
template("mexec_no_op_success_test") {
  child_target = "$target_name-zbi-test"
  mexec_target = "mexec-$target_name-test"

  zbi_test(child_target) {
    assert(current_cpu != "")

    args = invoker.child_args

    deps = [
      ":no-op-success",
      "//zircon/kernel",
    ]
  }

  mexec_zbi_test(mexec_target) {
    child_zbi = ":$child_target.zbi"
    args = invoker.mexec_args
  }
}

mexec_no_op_success_test("smoke") {
  # Force the data ZBI to be put above the 4GiB mark in physical memory;
  # this covers an edge case that can arise with particularly large ZBIs.
  mexec_args = [ "kernel.mexec-force-high-ramdisk=true" ]
  child_args = []
}

# The child test is not intended to be run directly, as it relies on requiring
# entropy from the cmdline.  It is intended to be used only via the mexec test.
mexec_no_op_success_test("entropy") {
  mexec_args = []
  child_args = [ "kernel.cprng-seed-require.cmdline=true" ]
}
