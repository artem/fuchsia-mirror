# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/sdk/sdk_atom.gni")
import("//build/sdk/sdk_noop_atom.gni")
import("//src/developer/ffx/build/ffx_plugin.gni")
import("//src/developer/ffx/build/ffx_tool.gni")
import("emu_companion.gni")

if (is_host) {
  ffx_plugin("ffx_emulator") {
    version = "0.1.0"
    edition = "2021"
    with_unit_tests = true
    args_sources = [ "src/args.rs" ]
    config_data = [ "data/config.json" ]
    plugin_deps = [
      "commands/console:ffx_emulator_console",
      "commands/list:ffx_emulator_list",
      "commands/show:ffx_emulator_show",
      "commands/start:ffx_emulator_start",
      "commands/stop:ffx_emulator_stop",
    ]
    test_deps = [
      "commands:tests",
      "common:tests",
      "configuration:tests",
      "engines:tests",
    ]
    deps = [
      ":aemu_internal",
      ":qemu_internal",
      ":uefi_internal",
    ]
  }

  # AEMU is supported on mac and linux and both arm64 and x64
  if (arm_sdk_tools || current_cpu == host_cpu) {
    emu_companion("aemu_internal") {
      default_binary = "//prebuilt/third_party/android/aemu/release/${current_os}-${current_cpu}/emulator"
      prebuilt_path = "//prebuilt/third_party/android/aemu/release/${current_os}-${current_cpu}"
      sdk_dest_path = "tools/${current_cpu}/aemu_internal"
    }
  } else {
    sdk_noop_atom("aemu_internal") {
      id = "sdk://tools/$current_cpu/aemu_internal"
      category = "partner"
      type = "companion_host_tool"
    }
  }

  # QEMU is currently the host_cpu.
  # TODO(https://fxbug.dev/42057937) once arm64 is available for mac, provide it as well.
  if (current_cpu == host_cpu) {
    emu_companion("qemu_internal") {
      default_binary = "//prebuilt/third_party/qemu/${current_os}-${current_cpu}/bin/qemu-system-x86_64"
      prebuilt_path = "//prebuilt/third_party/qemu/${current_os}-${current_cpu}"
      sdk_dest_path = "tools/${current_cpu}/qemu_internal"
    }
    emu_companion("uefi_internal") {
      prebuilt_path = "//prebuilt/third_party/edk2/qemu-${current_cpu}"
      sdk_dest_path = "tools/${current_cpu}/qemu_uefi_internal"
      if (current_cpu == "x64") {
        default_binary =
            "//prebuilt/third_party/edk2/qemu-${current_cpu}/OVMF_CODE.fd"
        prebuilt_files = [
          "//prebuilt/third_party/edk2/qemu-${current_cpu}/OVMF_CODE.fd",
          "//prebuilt/third_party/edk2/qemu-${current_cpu}/OVMF_VARS.fd",
        ]
      }
      if (current_cpu == "arm64") {
        default_binary =
            "//prebuilt/third_party/edk2/qemu-${current_cpu}/QEMU_EFI.fd"
        prebuilt_files = [
          "//prebuilt/third_party/edk2/qemu-${current_cpu}/QEMU_EFI.fd",
          "//prebuilt/third_party/edk2/qemu-${current_cpu}/QEMU_VARS.fd",
        ]
      }
    }
  } else {
    sdk_noop_atom("qemu_internal") {
      id = "sdk://tools/$current_cpu/qemu_internal"
      category = "partner"
      type = "companion_host_tool"
    }
    sdk_noop_atom("uefi_internal") {
      id = "sdk://tools/$current_cpu/qemu_uefi_internal"
      category = "partner"
      type = "companion_host_tool"
    }
  }

  ffx_tool("ffx_emulator_tool") {
    edition = "2021"
    output_name = "ffx-emu"
    deps = [
      ":ffx_emulator_suite",
      "//src/lib/fuchsia-async",
    ]
    sources = [ "src/main.rs" ]

    sdk_target_name = "sdk"
    sdk_category = "partner"
  }

  group("emulator") {
    public_deps = [
      ":ffx_emulator_tool",
      ":ffx_emulator_tool_host_tool",
    ]
  }

  group("bin") {
    public_deps = [ ":ffx_emulator_tool_versioned" ]
  }

  group("tests") {
    testonly = true
    deps = [ ":ffx_emulator_tests($host_toolchain)" ]
  }
}

group("e2e_tests") {
  testonly = true
  deps = [ "e2e_test:e2e_tests" ]
}
