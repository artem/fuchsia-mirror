// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.controller.othertest;

using fuchsia.controller.test;

type CrossLibraryStruct = struct {
    value fuchsia.controller.test.NoopUnion;
};

type TestingEnum = strict enum : int32 {
   FLIPPED_OTHER_TEST = 2;
   TEST = -1;
   OTHER_TEST = -2;
};

@discoverable
closed protocol CrossLibraryNoop {
    strict EnumMethod(struct {
        enum_thing TestingEnum;
    });

    strict UnionNoop(fuchsia.controller.test.NoopUnion);

    strict SendingProtocol(resource struct {
        some_handle server_end:fuchsia.controller.test.Testing;
    });

    strict -> OnRandomEvent(struct {
        this uint32;
        that TestingEnum;
    });

    strict -> OnEmptyEvent();
};
