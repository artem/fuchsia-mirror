# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components/fuchsia_package.gni")
import("//build/config/compiler.gni")
import("//build/host.gni")
import("//build/rust/rustc_binary.gni")

test_deps = []

# The qemu-x64 board does not build a UEFI partition. Switch to x64 to include
# this test.
#
# TODO(https://fxbug.dev/42079810): optimize shouldn't be required here but needs more
# investigation why it's a problem
if (is_host && target_cpu == "x64" && build_uefi_disk &&
    optimize != "sanitizer") {
  rustc_test("ffx_target_test") {
    testonly = true
    edition = "2021"
    source_root = "src/tests.rs"

    sources = [ "src/tests.rs" ]

    deps = [
      "//src/developer/ffx/lib/isolate:lib",
      "//src/developer/ffx/testing:ffx_testing",
      "//src/lib/fuchsia",
      "//src/lib/fuchsia-async",
      "//src/lib/testing/fixture",
      "//third_party/rust_crates:anyhow",
      "//third_party/rust_crates:futures",
    ]

    if (target_cpu == "x64") {
      # TODO(https://fxbug.dev/42080558): The x86 kernel gets loaded at a fixed physical
      # address of 1MiB. The UEFI environment under QEMU has some memory
      # reserved at about 8MiB. This limits the total kernel image size that
      # can be loaded.  A larger kernel image size will get a panic in early
      # boot (physboot).  Until the kernel's internal fixed-location constraint
      # is removed, kernel images that are too big just can't be loaded. Some
      # instrumented kernels like asan/ubsan builds can wind up too big.
      # Machinery //zircon/kernel/BUILD.gn arranges to examine the actual
      # kernel image and compare its required memory size to a known upper
      # limit. If it's too big, then feature="big_zircon_kernel" is added.
      deps += [ "//zircon/kernel:rust-cfg-big-zircon-kernel" ]
    }

    # Only one emulator can be spawned at a time.
    args = [ "--test-threads=1" ]
  }

  test_deps += [ ":ffx_target_test($host_toolchain)" ]
}

group("tests") {
  deps = test_deps
  testonly = true
}
