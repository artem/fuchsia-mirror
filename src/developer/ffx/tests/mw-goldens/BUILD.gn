# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/host.gni")
import("//build/rust/rustc_binary.gni")
import("//build/testing/golden_files.gni")
import("//src/developer/ffx/config.gni")

assert(is_host, "ffx mw-golden tests are only valid with the host toolchain.")

if (has_board) {
  # Exported SDK with ffx binary.
  _sdk_label = "//sdk:core($default_toolchain)"
  _sdk_outdir = get_label_info(_sdk_label, "root_out_dir")
  _sdk_path = _sdk_outdir + "/sdk/exported/core"

  host_test_data("sdk_exported_for_ffx") {
    sources = [ _sdk_path ]
    deps = [ _sdk_label ]
  }

  _golden_dir = "${target_out_dir}/goldens"
  _comparison_file = "${target_out_dir}/schema_comparisons.json"
  _schemalist_file = "${target_out_dir}/schemalist.txt"

  action("gen_schema_list") {
    testonly = true
    script = "gen_schema.py"
    inputs = [ "commandlist.txt" ]
    outputs = [ _schemalist_file ]
    args = [
      "--command-list",
      rebase_path("commandlist.txt", root_build_dir),
      "--schemalist",
      rebase_path(_schemalist_file, root_build_dir),
    ]
  }

  golden_files("ffx-golden-schemafile-list") {
    testonly = true
    visibility = [ ":*" ]
    visible_label = get_label_info(":ffx-golden-mw-list", "label_no_toolchain")
    comparisons = [
      {
        golden = "goldens/schemalist.txt"
        candidate = _schemalist_file
      },
    ]
    deps = [ ":gen_schema_list" ]
  }

  action("gen_schema_files") {
    testonly = true
    script = "gen_schema.py"
    inputs = [
      "commandlist.txt",
      "${root_build_dir}/host_x64/ffx",
    ]
    outputs = [ _comparison_file ]
    _golden_filename_list = read_file("goldens/schemalist.txt", "list lines")
    foreach(f, _golden_filename_list) {
      outputs += [ "${_golden_dir}/${f}" ]
    }
    args = [
      "--command-list",
      rebase_path("commandlist.txt", root_build_dir),
      "--goldens-dir",
      rebase_path("goldens", "//"),
      "--out-dir",
      rebase_path(_golden_dir, root_build_dir),
      "--sdk-root",
      rebase_path(_sdk_path, root_build_dir),
      "--comparisons",
      rebase_path(_comparison_file, root_build_dir),
    ]
    deps = [
      ":ffx-golden-schemafile-list",
      ":sdk_exported_for_ffx",
      "//src/developer/ffx:ffx_bin",
    ]
  }

  golden_files("ffx-golden-mw-list") {
    testonly = true
    comparisons = _comparison_file
    deps = [ ":gen_schema_files" ]
  }

  group("tests") {
    testonly = true

    # TODO(https://fxbug.dev/42075360): Support product bundle for testing on mac
    # For now, just test on linux.
    # Also check for has_board, since this test cannot run on a configuration without a
    # board.
    # TODO(b/287779902) Also check that dual mode as subtools aren't enabled,
    # because that produces an incomplete SDK.
    if (is_linux) {
      if (!ffx_build_dual_mode_plugins_as_subtools) {
        deps = [ ":ffx-golden-mw-list" ]
      } else {
        print(
            "Warning! ffx machine schema golden file tests are disabled because this build has ffx_build_dual_mode_plugins_as_subtools = true.")
      }
    }
  }
} else {
  # no board, so no tests
  group("tests") {
  }
}
