// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    capabilities: [
        {
            protocol: [
                "fuchsia.memory.debug.MemoryPressure",
                "fuchsia.memory.inspection.Collector",
                "fuchsia.memorypressure.Provider",
            ],
        },
    ],
    use: [
        {
            protocol: [
                "fuchsia.component.Introspector.root",
                "fuchsia.feedback.CrashReporter",
                "fuchsia.kernel.RootJobForInspect",
                "fuchsia.kernel.Stats",
                "fuchsia.memory.report.SnapshotProvider",
                "fuchsia.metrics.MetricEventLoggerFactory",
                "fuchsia.scheduler.ProfileProvider",
            ],
        },
        {
            protocol: [ "fuchsia.tracing.provider.Registry" ],

            // Trace manager may be excluded from builds where tracing is not
            // expected to be used for observability, such as in the bringup
            // product and non-eng builds of any product.
            availability: "optional",
        },
        {
            directory: "dev-aml-ram",
            rights: [ "r*" ],
            path: "/dev/class/aml-ram",
        },
        {
            storage: "cache",
            path: "/cache",
        },
        {
            directory: "config-data",
            rights: [ "r*" ],
            path: "/config/data",
        },
        {
            config: "fuchsia.memory.CaptureOnPressureChange",
            config_key: "capture_on_pressure_change",
            availability: "optional",
        },
        {
            config: "fuchsia.memory.ImminentOomCaptureDelay",
            config_key: "imminent_oom_capture_delay_s",
            availability: "optional",
        },
        {
            config: "fuchsia.memory.CriticalCaptureDelay",
            config_key: "critical_capture_delay_s",
            availability: "optional",
        },
        {
            config: "fuchsia.memory.WarningCaptureDelay",
            config_key: "warning_capture_delay_s",
            availability: "optional",
        },
        {
            config: "fuchsia.memory.NormalCaptureDelay",
            config_key: "normal_capture_delay_s",
            availability: "optional",
        },
    ],
    expose: [
        {
            protocol: [
                "fuchsia.memory.debug.MemoryPressure",
                "fuchsia.memory.inspection.Collector",
                "fuchsia.memorypressure.Provider",
            ],
            from: "self",
        },
    ],
    config: {
        capture_on_pressure_change: { type: "bool" },
        imminent_oom_capture_delay_s: { type: "uint32" },
        critical_capture_delay_s: { type: "uint32" },
        warning_capture_delay_s: { type: "uint32" },
        normal_capture_delay_s: { type: "uint32" },
    },
}
