## require optimize=none
# TODO(jruthe): remove this when the test is refactored into multiple scripts.
## set timeout 5
[zxdb] b $main
Created Breakpoint 1 @ $main
Pending: No current matches for location. It will be matched against new
         processes and shared libraries.

[zxdb] run-component fuchsia-pkg://fuchsia.com/zxdb_e2e_inferiors#meta/cpp_functions.cm
run-component won't work for many v2 components. See "help run-component".
Launched Process 1 state=Running koid=?? name=cpp_functions.cm component=cpp_functions.cm
Breakpoint 1 now matching 1 addrs for $main
ðŸ›‘ on bp 1 main() â€¢ cpp_functions.cc:??

# This will re-hit the user installed breakpoint.
[zxdb] p PrintHello()
ðŸ›‘ on bp 1 main() â€¢ cpp_functions.cc:??
void

[zxdb] n
ðŸ›‘ main() â€¢ cpp_functions.cc:??

# Now it stops on a generic breakpoint.
[zxdb] p NestedTwiceNoArgs()
ðŸ›‘ main() â€¢ cpp_functions.cc:??
void

# The global variable should have been updated.
[zxdb] p SomeGlobal
10

# This adds one to the number printed right above.
[zxdb] p ReturnGlobalPlusOne()
ðŸ›‘ main() â€¢ cpp_functions.cc:??
11

# Should be at the same location as before.
[zxdb] f
â–¶ 0 main() â€¢ cpp_functions.cc:??
  1â€¦4 Â«libc startupÂ» (-r expands)

# Should be able to chain return values with more expressions.
[zxdb] p ReturnGlobalPlusOne() - 1
ðŸ›‘ main() â€¢ cpp_functions.cc:??
10

# TODO(https://fxbug.dev/129958): this should also work as
# ReturnGlobalPlusOne() - 1 == SomeGlobal
[zxdb] p SomeGlobal == ReturnGlobalPlusOne() - 1
ðŸ›‘ main() â€¢ cpp_functions.cc:??
true

# Pointers should also work.
[zxdb] p GetIntPointer()
ðŸ›‘ main() â€¢ cpp_functions.cc:??
(*)0x?? âž” 10

# Expressions should still work.
[zxdb] p *GetIntPointer() * 2
ðŸ›‘ main() â€¢ cpp_functions.cc:??
20

# Other built in types should work.
[zxdb] p GetFloat()
ðŸ›‘ main() â€¢ cpp_functions.cc:??
3.14159

[zxdb] p GetCharPtr()
ðŸ›‘ main() â€¢ cpp_functions.cc:??
Hello!

# Simple types shouldn't be a problem
[zxdb] p AddTwoInts(3, 5)
ðŸ›‘ main() â€¢ cpp_functions.cc:??
8

[zxdb] until 71
ðŸ›‘ main() â€¢ cpp_functions.cc:??

[zxdb] locals
lhs = 7
rhs = 8

[zxdb] p SwapPointedToValues(&lhs, &rhs)
ðŸ›‘ main() â€¢ cpp_functions.cc:??
void

[zxdb] locals
lhs = 8
rhs = 7

# Coerce a char array to a char* implicitly
[zxdb] p EchoCharPtr(kHello)
ðŸ›‘ main() â€¢ cpp_functions.cc:??
void

# Passing a simple char* should work
[zxdb] p EchoCharPtr(kCharStar)
ðŸ›‘ main() â€¢ cpp_functions.cc:??
void

[zxdb] until 80
ðŸ›‘ main() â€¢ cpp_functions.cc:??

[zxdb] locals
s = {one = 1, two = 2, nums = {3, 4, 5, 6}}

# User defined objects should be passable by pointer.
[zxdb] p DoSomeStuff(&s)
ðŸ›‘ main() â€¢ cpp_functions.cc:??
void

[zxdb] locals
s = {one = 2, two = 3, nums = {3, 4, 5}}

# Let the program finish.
[zxdb] c
Process 1 exited with code 0.
