// Copyright 2024 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library test.suspendcontrol;
using fuchsia.hardware.suspend;
using zx;

type SuspendResult = table {
    1: reason fuchsia.hardware.suspend.WakeReason;
    2: suspend_duration zx.Duration;
    3: suspend_overhead zx.Duration;
};

closed protocol Device {
    strict SetSuspendStates(table {
        1: suspend_states
                vector<fuchsia.hardware.suspend.SuspendState>:fuchsia.hardware.suspend.MAX_SUSPEND_STATES;
    }) -> () error zx.Status;

    strict AwaitSuspend() -> (table {
        1: state_index uint64;
    }) error zx.Status;

    strict Resume(flexible union {
        1: result SuspendResult;
        2: error zx.Status;
    }) -> () error zx.Status;
};
