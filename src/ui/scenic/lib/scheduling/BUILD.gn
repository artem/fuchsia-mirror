# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/cobalt/metrics_registry.gni")

metrics_registry("frame_metrics_registry") {
  # This must match the ID of our Cobalt project as specified in:
  # third_party/cobalt_config/projects.yaml
  project_id = 2820332838
  namespace = "cobalt_registry"
  generate_cc = true
  generate_binarypb = false
}

source_set("frame_scheduler") {
  sources = [
    "constant_frame_predictor.cc",
    "constant_frame_predictor.h",
    "default_frame_scheduler.cc",
    "default_frame_scheduler.h",
    "duration_predictor.cc",
    "duration_predictor.h",
    "frame_predictor.cc",
    "frame_predictor.h",
    "frame_scheduler.h",
    "frame_stats.cc",
    "frame_stats.h",
    "windowed_frame_predictor.cc",
    "windowed_frame_predictor.h",
  ]
  deps = [
    ":frame_metrics_registry",
    "//src/lib/fxl",
    "//src/ui/scenic/lib/utils",
    "//zircon/system/ulib/inspect",
  ]
  public_deps = [
    ":frame_scheduler_interface",
    ":id",
    ":vsync_timing",
    "//sdk/lib/syslog/cpp",
    "//src/ui/scenic/lib/utils",
    "//third_party/cobalt/src/lib/client/cpp:buckets_config",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/trace",
  ]
}

source_set("frame_scheduler_interface") {
  sources = [ "frame_scheduler.h" ]
  public_deps = [
    ":id",
    "//src/lib/fxl",
    "//zircon/system/ulib/zx",
  ]
}

source_set("vsync_timing") {
  sources = [
    "vsync_timing.cc",
    "vsync_timing.h",
  ]
  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
    "//zircon/system/ulib/zx",
  ]
}

source_set("present_helpers") {
  sources = [
    "present1_helper.cc",
    "present1_helper.h",
    "present2_helper.cc",
    "present2_helper.h",
  ]
  deps = [
    "//sdk/lib/syslog/cpp",
    "//zircon/system/ulib/trace",
  ]
  public_deps = [
    ":frame_scheduler_interface",
    ":id",
    "//sdk/fidl/fuchsia.ui.scenic:fuchsia.ui.scenic_hlcpp",
  ]
}

source_set("id") {
  sources = [
    "id.cc",
    "id.h",
  ]
}
