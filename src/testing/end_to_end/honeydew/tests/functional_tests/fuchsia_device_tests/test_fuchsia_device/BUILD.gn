# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/python/python_library.gni")
import("//build/python/python_mobly_test.gni")
import("//build/testing/environments.gni")

if (is_host) {
  python_mobly_test("x64_emu_test") {
    main_source = "test_fuchsia_device.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    params_source = "params_x64.yaml"
    environments = [ emu_env ]
  }

  python_mobly_test("x64_emu_test_fc") {
    main_source = "test_fuchsia_device.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    params_source = "params_x64.yaml"
    transport = "fuchsia-controller"
    environments = [ emu_env ]
  }

  python_mobly_test("x64_nuc_test") {
    main_source = "test_fuchsia_device.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    params_source = "params_x64.yaml"
    environments = [ nuc_env ]
  }

  python_mobly_test("x64_nuc_test_fc") {
    main_source = "test_fuchsia_device.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    params_source = "params_x64.yaml"
    transport = "fuchsia-controller"
    environments = [ nuc_env ]
  }

  python_mobly_test("vim3_test") {
    main_source = "test_fuchsia_device.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    params_source = "params_vim3.yaml"
    environments = [ vim3_env ]
  }

  python_mobly_test("vim3_test_fc") {
    main_source = "test_fuchsia_device.py"
    libraries = [
      "//src/testing/end_to_end/honeydew",
      "//src/testing/end_to_end/mobly_base_tests:fuchsia_base_test",
    ]
    params_source = "params_vim3.yaml"
    transport = "fuchsia-controller"
    environments = [ vim3_env ]
  }

  # Group containing all of the fuchsia_device functional test cases.
  group("tests") {
    testonly = true
    public_deps = [
      ":vim3_test($host_toolchain)",
      ":vim3_test_fc($host_toolchain)",
      ":x64_emu_test($host_toolchain)",
      ":x64_emu_test_fc($host_toolchain)",
      ":x64_nuc_test($host_toolchain)",
      ":x64_nuc_test_fc($host_toolchain)",
    ]
  }

  # Infra test groups:
  #     Stable
  #         Emulator
  #             That require SL4F transport
  #             That does not require SL4F transport
  #     Unstable
  #         VIM3
  #             That require SL4F transport
  #             That does not require SL4F transport
  #         NUC
  #             That require SL4F transport
  #             That does not require SL4F transport
  group("stable_emulator_sl4f_tests") {
    testonly = true
    public_deps = [ ":x64_emu_test($host_toolchain)" ]
  }

  group("stable_emulator_tests") {
    testonly = true
    public_deps = [ ":x64_emu_test_fc($host_toolchain)" ]
  }

  group("unstable_vim3_sl4f_tests") {
    testonly = true
    public_deps = [ ":vim3_test($host_toolchain)" ]
  }

  group("unstable_vim3_tests") {
    testonly = true
    public_deps = [ ":vim3_test_fc($host_toolchain)" ]
  }

  group("unstable_nuc_sl4f_tests") {
    testonly = true
    public_deps = [ ":x64_nuc_test($host_toolchain)" ]
  }

  group("unstable_nuc_tests") {
    testonly = true
    public_deps = [ ":x64_nuc_test_fc($host_toolchain)" ]
  }
}
