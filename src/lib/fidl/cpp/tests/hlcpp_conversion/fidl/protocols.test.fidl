// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library test.protocols;

closed protocol ClosedProtocol {
    strict StrictOneWay(struct {
        arg int32;
    });

    strict StrictTwoWay(struct {
        arg int32;
    }) -> (struct {
        res int32;
    });

    strict StrictTwoWayError(struct {
        arg int32;
    }) -> (struct {
        res int32;
    }) error int32;

    strict -> OnStrictEvent(struct {
        arg int32;
    });
};

ajar protocol AjarProtocol {
    strict StrictOneWay(struct {
        arg int32;
    });

    strict StrictTwoWay(struct {
        arg int32;
    }) -> (struct {
        res int32;
    });

    strict StrictTwoWayError(struct {
        arg int32;
    }) -> (struct {
        res int32;
    }) error int32;

    strict -> OnStrictEvent(struct {
        arg int32;
    });

    flexible FlexibleOneWay(struct {
        arg int32;
    });

    flexible -> OnFlexibleEvent(struct {
        arg int32;
    });
};


open protocol OpenProtocol {
    strict StrictOneWay(struct {
        arg int32;
    });

    strict StrictTwoWay(struct {
        arg int32;
    }) -> (struct {
        res int32;
    });

    strict StrictTwoWayError(struct {
        arg int32;
    }) -> (struct {
        res int32;
    }) error int32;

    strict -> OnStrictEvent(struct {
        arg int32;
    });

    flexible FlexibleOneWay(struct {
        arg int32;
    });

    flexible -> OnFlexibleEvent(struct {
        arg int32;
    });

    flexible FlexibleTwoWay(struct {
        arg int32;
    }) -> (struct {
        res int32;
    });

    flexible FlexibleTwoWayError(struct {
        arg int32;
    }) -> (struct {
        res int32;
    }) error int32;
};
