# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

group("lib") {
  testonly = true

  deps = [
    ":tests",
    "backoff",
    "callback",
    "chunked-compression",
    "cobalt",
    "debug",
    "dense-map",
    "diagnostics",
    "directed_graph",
    "driver_symbols",
    "dynfidl",
    "eld",
    "elfldltl",
    "elflib",
    "fake-clock",
    "fakealloc",
    "fdio",
    "fidl_server",
    "fidl_table_validation",
    "files",
    "fuchsia-lockfile($host_toolchain)",
    "fuchsia-url",
    "fuchsia_nix",
    "fxl",
    "gcs($host_toolchain)",
    "http-sse:http_sse",
    "http-uri-ext",
    "icu",
    "icu_data",
    "inet",
    "intl",
    "llvm-profdata",
    "loader_service",
    "mapped-vmo",
    "mdns",
    "metrics_buffer",
    "mundane",
    "network",
    "pkg_url",
    "product_description($host_toolchain)",
    "proptest-support",
    "security",
    "shared-buffer",
    "structured_ui($host_toolchain)",
    "symbolizer-markup",
    "tcp-stream-ext",
    "tempfile-ext",
    "testing",
    "timekeeper",
    "trace",
    "transfer_manifest($host_toolchain)",
    "trivial-allocator",
    "ui",
    "unwinder",
    "usb_bulk",
    "utf8_path",
    "uuid",
    "versioning",
    "vmo_store",
    "windowed-stats",
    "zbitl",
    "zxdump",
  ]
}

group("tests") {
  testonly = true

  deps = [
    "analytics:tests",
    "async-gunzip:tests",
    "async-utils:tests",
    "async-watchdog:tests",
    "backoff:tests",
    "callback:tests",
    "chunked-compression:tests",
    "cobalt:tests",
    "containers/cpp:tests",
    "cstr:tests",
    "ddk:tests",
    "ddktl:tests",
    "debug:tests",
    "dense-map:tests",
    "diagnostics:tests",
    "digest:tests",
    "directed_graph:tests",
    "driver_symbols:tests",
    "dynfidl:tests",
    "elfldltl:tests",
    "elflib:tests",
    "error/clonable_error:tests",
    "fable:tests",
    "fake-clock:tests",
    "fdio:tests",
    "fidl:tests",
    "fidl_codec:tests",
    "fidl_server:tests",
    "fidl_table_validation:tests",
    "files:tests",
    "flyweights:tests",
    "fostr:tests",
    "fuchsia:tests",
    "fuchsia-async:tests",
    "fuchsia-component:tests",
    "fuchsia-component-test:tests",
    "fuchsia-fs:tests",
    "fuchsia-hyper:tests",
    "fuchsia-image-format:tests",
    "fuchsia-lockfile:tests",
    "fuchsia-runtime:tests",
    "fuchsia-sync:tests",
    "fuchsia-url:tests",
    "fxl:tests",
    "gcs:tests($host_toolchain)",
    "http-sse:tests",
    "http-uri-ext:tests",
    "icu:tests",
    "icu_data:tests",
    "inet:tests",
    "inject:tests",
    "injectable-time:tests",
    "intl:tests",
    "json_parser:tests",
    "libdoc:tests($host_toolchain)",
    "line_input:tests",
    "listnode:tests",
    "llvm-profdata:tests",
    "loader_service:tests",
    "mapped-vmo:tests",
    "mdns:tests",
    "metrics_buffer:tests",
    "mpmc:tests",
    "mundane:tests",
    "network:tests",
    "process:tests",
    "process_builder:tests",
    "product_description:tests($host_toolchain)",
    "pty:tests",
    "replace-with:tests",
    "rust_url:tests",
    "scoped_task:tests",
    "security:tests",
    "shared-buffer:tests",
    "structured_ui:tests",
    "symbolizer-markup:tests",
    "syslog:tests",
    "tcp-stream-ext:tests",
    "tempfile-ext:tests",
    "test_diagnostics:tests",
    "test_util:tests",
    "testing:tests",
    "timekeeper:tests",
    "trace:tests",
    "transfer_manifest:tests",
    "trivial-allocator:tests",
    "ui:tests",
    "unwinder:tests",
    "usb_bulk:tests",
    "usb_rs:tests($host_toolchain)",
    "utf8_path:tests",
    "utf_conversion:tests",
    "versioning:tests",
    "vmo_store:tests",
    "vulkan:tests",
    "watch_handler:tests",
    "windowed-stats:tests",
    "zbitl:tests",
    "zircon:tests",
    "zxc:tests",
    "zxdump:tests",
  ]

  if (current_cpu != "riscv64") {
    deps += [
      # The Go toolchain does not support RISC-V.
      # TODO(https://fxbug.dev/129980): Rename `components` to indicate that it is
      # specific to Go.
      "component:tests",
      "go-benchmarking:tests",
    ]
  }
}

group("boot_tests") {
  testonly = true

  deps = [ "elfldltl:boot_tests" ]
}
