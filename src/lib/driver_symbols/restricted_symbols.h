// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SRC_LIB_DRIVER_SYMBOLS_RESTRICTED_SYMBOLS_H_
#define SRC_LIB_DRIVER_SYMBOLS_RESTRICTED_SYMBOLS_H_

#include <set>

namespace driver_symbols {

//  ________  _________  ________  ________
// |\   ____\|\___   ___\\   __  \|\   __  \
// \ \  \___|\|___ \  \_\ \  \|\  \ \  \|\  \
//  \ \_____  \   \ \  \ \ \  \\\  \ \   ____\
//   \|____|\  \   \ \  \ \ \  \\\  \ \  \___|
//     ____\_\  \   \ \__\ \ \_______\ \__\
//    |\_________\   \|__|  \|_______|\|__|
//    \|_________|
//
// The relative component URLs for drivers which are allowed to spawn custom threads.
//
// Drivers should avoid spawning their own threads if possible and instead utilize
// driver runtime dispatchers.
//
// See https://fuchsia.dev/fuchsia-src/concepts/drivers/driver-dispatcher-and-threads
// or reach out to the Fuchsia Driver Framework team.
//
// To remove items from the allowlist, please send a change to one of the OWNERS of
// this file to remove an element from the list below.
const std::set<std::string> kCreateThreadSymbolsDriversAllowlist = {
    "#meta/acpi-arm64.cm",
    "#meta/ahci.cm",
    "#meta/aml-fifo-mailbox.cm",
    "#meta/aml-g12-pdm-dsp.cm",
    "#meta/aml-g12-pdm.cm",
    "#meta/aml-g12-tdm-dai.cm",
    "#meta/aml-g12-tdm-dsp.cm",
    "#meta/aml-g12-tdm.cm",
    "#meta/aml-i2c.cm",
    "#meta/aml_mipicsi.cm",
    "#meta/amlogic-display.cm",
    "#meta/amlogic_h264_encoder_driver.cm",
    "#meta/amlogic_video_decoder.cm",
    "#meta/aml-pl-mailbox.cm",
    "#meta/aml-ram.cm",
    "#meta/aml-securemem.cm",
    "#meta/aml-thermal-s905d2g-legacy.cm",
    "#meta/aml-thermal.cm",
    "#meta/aml-uart.cm",
    "#meta/aml-usb-crg-phy-v2.cm",
    "#meta/aml-usb-phy-v2.cm",
    "#meta/ams-light.cm",
    "#meta/arm_mali_iv009_isp.cm",
    "#meta/as370-gpio.cm",
    "#meta/as370-pdm-input.cm",
    "#meta/as370-tdm-output.cm",
    "#meta/asix-88179.cm",
    "#meta/asix-88772b.cm",
    "#meta/astro.cm",
    "#meta/at-fake-transport.cm",
    "#meta/block.core.cm",
    "#meta/brcmfmac.cm",
    "#meta/bt-hci-atheros.cm",
    "#meta/bt-hci-broadcom.cm",
    "#meta/bt-hci-intel.cm",
    "#meta/bt-hci-marvell.cm",
    "#meta/bt-hci-virtual.cm",
    "#meta/bt-host.cm",
    "#meta/bt-transport-uart.cm",
    "#meta/bt-transport-usb.cm",
    "#meta/bus-pci.cm",
    "#meta/cadence-hpnfc.cm",
    "#meta/chromiumos-ec-core.cm",
    "#meta/chromiumos-ec-lpc.cm",
    "#meta/compat.cm",
    "#meta/cr50-spi-driver.cm",
    "#meta/crg-udc.cm",
    "#meta/cypress.cm",
    "#meta/display-coordinator.cm",
    "#meta/dwc2.cm",
    "#meta/dwc3.cm",
    "#meta/dw-i2c.cm",
    "#meta/dwmac.cm",
    "#meta/e1000.cm",
    "#meta/fake-ot-radio.cm",
    "#meta/fake-usb-cdc-acm.cm",
    "#meta/fidl-async-llcpp-driver.cm",
    "#meta/focaltech-sherlock.cm",
    "#meta/focaltech.cm",
    "#meta/ftdi-fake-usb.cm",
    "#meta/ftdi.cm",
    "#meta/ftl.cm",
    "#meta/fusb302.cm",
    "#meta/fvm.cm",
    "#meta/gdc.cm",
    "#meta/ge2d.cm",
    "#meta/goldfish_control.cm",
    "#meta/goldfish-display.cm",
    "#meta/goldfish_sensor.cm",
    "#meta/goldfish.cm",
    "#meta/goldfish_sync.cm",
    "#meta/goodix.cm",
    "#meta/gt6853.cm",
    "#meta/gvnic.cm",
    "#meta/hdmi-audio-codec.cm",
    "#meta/hid-buttons.cm",
    "#meta/hidctl.cm",
    "#meta/hid-input-report.cm",
    "#meta/hid-input-report-v2.cm",
    "#meta/hid.cm",
    "#meta/i2c-hid.cm",
    "#meta/igc.cm",
    "#meta/imx8m-gpio.cm",
    "#meta/init-test.cm",
    "#meta/integration-test.cm",
    "#meta/intel-gspi.cm",
    "#meta/intel-hda.cm",
    "#meta/intel-i2c.cm",
    "#meta/intel-i915.cm",
    "#meta/intel-spi-flash.cm",
    "#meta/iwlwifi.cm",
    "#meta/libmsd_arm_dfv2.cm",
    "#meta/libmsd_arm.cm",
    "#meta/libmsd_arm_rebind.cm",
    "#meta/libmsd_arm_test.cm",
    "#meta/libmsd_intel.cm",
    "#meta/libmsd_intel_test.cm",
    "#meta/libmsd_vsi.cm",
    "#meta/libmsd_vsi_test.cm",
    "#meta/machina.cm",
    "#meta/max98373.cm",
    "#meta/mock-device.cm",
    "#meta/motmot.cm",
    "#meta/nand.cm",
    "#meta/nelson-brownout-protection.cm",
    "#meta/nelson-module.cm",
    "#meta/nelson-usb-phy.cm",
    "#meta/network-device.cm",
    "#meta/nvme.cm",
    "#meta/nxpfmac_sdio.cm",
    "#meta/optee.cm",
    "#meta/ot-radio-luis-mfg.cm",
    "#meta/ot-radio-luis.cm",
    "#meta/ot-radio-nelson-mfg.cm",
    "#meta/ot-radio-nelson.cm",
    "#meta/ot-radio-sherlock-mfg.cm",
    "#meta/ot-radio-sherlock.cm",
    "#meta/overnet-usb.cm",
    "#meta/pc-ps2.cm",
    "#meta/pci_protocol_test_driver.cm",
    "#meta/platform-bus-x86.cm",
    "#meta/qemu-arm64.cm",
    "#meta/qemu-audio-codec.cm",
    "#meta/qmi-fake-transport.cm",
    "#meta/qmi-transport.cm",
    "#meta/ramdisk.cm",
    "#meta/ram-nand.cm",
    "#meta/realtek-audio-codec.cm",
    "#meta/rndis-function.cm",
    "#meta/rndis-host.cm",
    "#meta/sdhci.cm",
    "#meta/sdmmc.cm",
    "#meta/selina_radar.cm",
    "#meta/serial-async.cm",
    "#meta/sherlock-camera-controller_driver_component.cm",
    "#meta/sherlock-factory.cm",
    "#meta/sherlock.cm",
    "#meta/simple.amd-kaveri.cm",
    "#meta/simple.bochs.cm",
    "#meta/simple.gga.cm",
    "#meta/simple.intel.cm",
    "#meta/simple.nv.cm",
    "#meta/simple.vmware.cm",
    "#meta/ssd1306_driver.cm",
    "#meta/syn-dma.cm",
    "#meta/sysmem.cm",
    "#meta/tas27xx.cm",
    "#meta/tas5707.cm",
    "#meta/tas5720.cm",
    "#meta/tas58xx.cm",
    "#meta/test-board.cm",
    "#meta/test-codec.cm",
    "#meta/test-codec2.cm",
    "#meta/test-dai.cm",
    "#meta/ti-ina231.cm",
    "#meta/tpm-driver.cm",
    "#meta/tpm-lpc.cm",
    "#meta/uart16550.cm",
    "#meta/ufs.cm",
    "#meta/ums-function.cm",
    "#meta/usb-adb-function.cm",
    "#meta/usb-audio.cm",
    "#meta/usb-bus.cm",
    "#meta/usb-cdc-acm.cm",
    "#meta/usb-cdc-ecm.cm",
    "#meta/usb-cdc-function.cm",
    "#meta/usb-hci-test-driver.cm",
    "#meta/usb-hid.cm",
    "#meta/usb-hub.cm",
    "#meta/usb-mass-storage.cm",
    "#meta/usb-peripheral.cm",
    "#meta/usb-two-endpoint-hid-fake-usb.cm",
    "#meta/usb_video.cm",
    "#meta/usb-virtual-bus.cm",
    "#meta/vim3-usb-phy.cm",
    "#meta/virtio_block.cm",
    "#meta/virtio_console.cm",
    "#meta/virtio_gpu.cm",
    "#meta/virtio_input.cm",
    "#meta/virtio_netdevice.cm",
    "#meta/virtio_rng.cm",
    "#meta/virtio_scsi.cm",
    "#meta/virtual_audio_driver.cm",
    "#meta/virtual-bus-tester.cm",
    "#meta/wlanif.cm",
    "#meta/wlansoftmac.cm",
    "#meta/xhci.cm",
    "#meta/zxcrypt.cm",
};

// The set of restricted symbols for creating custom threads which are only allowed for drivers in
// |kCreateThreadSymbolsDriversAllowlist|.
const std::set<std::string> kCreateThreadSymbols = {
    "thrd_create",
    "thrd_create_with_name",
    "pthread_create",
};

const std::set<std::string> kRestrictedLibcSymbols = {
    "a64l",
    "asctime",
    "asctime_r",
    "atexit",
    "atexit",
    "atof",
    "atol",
    "atoll",
    "at_quick_exit",
    "basename",
    "bcmp",
    "bcopy",
    "bzero",
    "call_once",
    "clearenv",
    "clearerr",
    "clock",
    "clock_getcpuclockid",
    "clock_getres",
    "clock_nanosleep",
    "clock_settime",
    "cnd_timedwait",
    "creat",
    "ctime",
    "ctime_r",
    "difftime",
    "dirname",
    "div",
    "dlerr",
    "dlopen",
    "evct",
    "_Exit",
    "fcvt",
    "feclearexcept",
    "fegetenv",
    "fegetexceptflag",
    "fegetround",
    "feholdexcept",
    "feof",
    "feof_unlcoked",
    "feraiseexcept",
    "ferror",
    "ferror_unlocked",
    "fesetenv",
    "fesetexceptflag",
    "fesetround",
    "fetestexcept",
    "feupdateenv",
    "fflush_unlocked",
    "ffsl",
    "fgetc",
    "fgetln",
    "fgetpos",
    "fgets",
    "fgets_unlocked",
    "fgetwc",
    "fgetwc_unlocked",
    "fgetws",
    "fgetws_unlocked",
    "fileno_unlocked",
    "flockfile",
    "fnmatch",
    "fputs_unlocked",
    "fputws",
    "fread_unlocked",
    "freopen",
    "fscanf",
    "fsetpos",
    "ftello_unlocked",
    "ftime",
    "ftrylockfile",
    "funlockfile",
    "fwide",
    "fwprintf",
    "fwrite_unlocked",
    "fwscanf",
    "gcvt",
    "getauxval",
    "getchar",
    "getchar_unlocked",
    "getc_unlocked",
    "get_current_dir_name",
    "getdate",
    "getdelim",
    "getline",
    "getopt",
    "gets",
    "getsubopt",
    "getsubopt",
    "getw",
    "getwchar",
    "getwchar_unlocked",
    "getwc_unlocked",
    "gmtime",
    "gmtime_r",
    "imaxabs",
    "imaxdiv",
    "index",
    "labs",
    "ldiv",
    "llabs",
    "lldiv",
    "localtime",
    "memccpy",
    "memmem",
    "mempcpy",
    "__memrchr",
    "memrchr",
    "mktime",
    "mtx_timedlock",
    "open_memstream",
    "open_wmemstream",
    "pclose",
    "popen",
    "putc",
    "putchar_unlocked",
    "putc_unlocked",
    "putenv",
    "putw",
    "putwchar",
    "putwchar_unlocked",
    "quick_exit",
    "rand",
    "random",
    "rewind",
    "rindex",
    "scanf",
    "setbuf",
    "setbuffer",
    "setenv",
    "setenv",
    "setlinebuf",
    "setvbuf",
    "srand",
    "srandom",
    "stpcpy",
    "stpncpy",
    "strcasestr",
    "strchrnul",
    "strcoll",
    "strcoll",
    "strcspn",
    "strlcat",
    "strncasecmp",
    "strncat",
    "strndup",
    "strpbrk",
    "strptime",
    "strptime",
    "strspn",
    "strtok",
    "strtok_r",
    "strverscmp",
    "strxfrm",
    "swab",
    "swprintf",
    "swscanf",
    "system",
    "tempnam",
    "thrd_sleep",
    "thrd_yield",
    "timegm",
    "times",
    "tmpfile",
    "tmpnam",
    "tss_create",
    "tss_delete",
    "tss_set",
    "__unsanitized_memcpy",
    "__unsanitized_memmove",
    "__unsanitized_memmove",
    "unsetenv",
    "utime",
    "vdprintf",
    "vfscanf",
    "vfwprintf",
    "vfwscanf",
    "vscanf",
    "vswprintf",
    "vswscanf",
    "vwprintf",
    "vwscanf",
    "wcsftime",
    "wcstod",
    "wcstol",
    "wordexp",
    "wordfree",
    "wprintf",
    "wscanf",
    "__xpg_strerror_r",
};

}  // namespace driver_symbols

#endif  // SRC_LIB_DRIVER_SYMBOLS_RESTRICTED_SYMBOLS_H_
