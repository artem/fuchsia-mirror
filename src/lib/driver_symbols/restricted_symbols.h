// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SRC_LIB_DRIVER_SYMBOLS_RESTRICTED_SYMBOLS_H_
#define SRC_LIB_DRIVER_SYMBOLS_RESTRICTED_SYMBOLS_H_

#include <set>

namespace driver_symbols {

const std::set<std::string> kRestrictedLibcSymbols = {
    "a64l",
    "asctime",
    "asctime_r",
    "atexit",
    "atexit",
    "atof",
    "atol",
    "atoll",
    "at_quick_exit",
    "basename",
    "bcmp",
    "bcopy",
    "bzero",
    "call_once",
    "clearenv",
    "clearerr",
    "clock",
    "clock_getcpuclockid",
    "clock_getres",
    "clock_nanosleep",
    "clock_settime",
    "cnd_timedwait",
    "creat",
    "ctime",
    "ctime_r",
    "difftime",
    "dirname",
    "div",
    "dlerr",
    "dlopen",
    "evct",
    "_Exit",
    "fcvt",
    "feclearexcept",
    "fegetenv",
    "fegetexceptflag",
    "fegetround",
    "feholdexcept",
    "feof",
    "feof_unlcoked",
    "feraiseexcept",
    "ferror",
    "ferror_unlocked",
    "fesetenv",
    "fesetexceptflag",
    "fesetround",
    "fetestexcept",
    "feupdateenv",
    "fflush_unlocked",
    "ffsl",
    "fgetc",
    "fgetln",
    "fgetpos",
    "fgets",
    "fgets_unlocked",
    "fgetwc",
    "fgetwc_unlocked",
    "fgetws",
    "fgetws_unlocked",
    "fileno_unlocked",
    "flockfile",
    "fnmatch",
    "fputs_unlocked",
    "fputws",
    "fread_unlocked",
    "freopen",
    "fscanf",
    "fsetpos",
    "ftello_unlocked",
    "ftime",
    "ftrylockfile",
    "funlockfile",
    "fwide",
    "fwprintf",
    "fwrite_unlocked",
    "fwscanf",
    "gcvt",
    "getauxval",
    "getchar",
    "getchar_unlocked",
    "getc_unlocked",
    "get_current_dir_name",
    "getdate",
    "getdelim",
    "getline",
    "getopt",
    "gets",
    "getsubopt",
    "getsubopt",
    "getw",
    "getwchar",
    "getwchar_unlocked",
    "getwc_unlocked",
    "gmtime",
    "gmtime_r",
    "imaxabs",
    "imaxdiv",
    "index",
    "labs",
    "ldiv",
    "llabs",
    "lldiv",
    "localtime",
    "memccpy",
    "memmem",
    "mempcpy",
    "__memrchr",
    "memrchr",
    "mktime",
    "mtx_timedlock",
    "open_memstream",
    "open_wmemstream",
    "pclose",
    "popen",
    "putc",
    "putchar_unlocked",
    "putc_unlocked",
    "putenv",
    "putw",
    "putwchar",
    "putwchar_unlocked",
    "quick_exit",
    "rand",
    "random",
    "rewind",
    "rindex",
    "scanf",
    "setbuf",
    "setbuffer",
    "setenv",
    "setenv",
    "setlinebuf",
    "setvbuf",
    "srand",
    "srandom",
    "stpcpy",
    "stpncpy",
    "strcasestr",
    "strchrnul",
    "strcoll",
    "strcoll",
    "strcspn",
    "strlcat",
    "strncasecmp",
    "strncat",
    "strndup",
    "strpbrk",
    "strptime",
    "strptime",
    "strspn",
    "strtok",
    "strtok_r",
    "strverscmp",
    "strxfrm",
    "swab",
    "swprintf",
    "swscanf",
    "system",
    "tempnam",
    "thrd_sleep",
    "thrd_yield",
    "timegm",
    "times",
    "tmpfile",
    "tmpnam",
    "tss_create",
    "tss_delete",
    "tss_set",
    "__unsanitized_memcpy",
    "__unsanitized_memmove",
    "__unsanitized_memmove",
    "unsetenv",
    "utime",
    "vdprintf",
    "vfscanf",
    "vfwprintf",
    "vfwscanf",
    "vscanf",
    "vswprintf",
    "vswscanf",
    "vwprintf",
    "vwscanf",
    "wcsftime",
    "wcstod",
    "wcstol",
    "wordexp",
    "wordfree",
    "wprintf",
    "wscanf",
    "__xpg_strerror_r",
};

}  // namespace driver_symbols

#endif  // SRC_LIB_DRIVER_SYMBOLS_RESTRICTED_SYMBOLS_H_
