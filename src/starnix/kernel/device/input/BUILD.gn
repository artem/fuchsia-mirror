# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")

group("tests") {
  testonly = true
  deps = [ ":starnix-input-tests" ]
}

rustc_library("input-device") {
  name = "input-device"
  edition = "2021"
  version = "0.1.0"
  source_root = "lib.rs"
  with_unit_tests = true

  sources = [
    "input_device.rs",
    "input_event_conversion.rs",
    "input_file.rs",
    "lib.rs",
    "uinput.rs",
  ]

  # TODO(https://fxbug.dev/42059075): Re-enable starnix in these environments.
  exclude_toolchain_tags = [
    "asan",
    "hwasan",
  ]

  deps = [
    "//sdk/fidl/fuchsia.input:fuchsia.input_rust",
    "//sdk/fidl/fuchsia.input.report:fuchsia.input.report_rust",
    "//sdk/fidl/fuchsia.ui.input:fuchsia.ui.input_rust",
    "//sdk/fidl/fuchsia.ui.input3:fuchsia.ui.input3_rust",
    "//sdk/fidl/fuchsia.ui.pointer:fuchsia.ui.pointer_rust",
    "//sdk/fidl/fuchsia.ui.policy:fuchsia.ui.policy_rust",
    "//sdk/fidl/fuchsia.ui.test.input:fuchsia.ui.test.input_rust",
    "//sdk/fidl/fuchsia.ui.views:fuchsia.ui.views_rust",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/starnix/kernel:starnix_core",
    "//src/starnix/kernel:starnix_logging",
    "//src/starnix/kernel:starnix_sync",
    "//src/starnix/lib/starnix-syscalls",
    "//src/starnix/lib/starnix-uapi",
    "//third_party/rust_crates:bit-vec",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:once_cell",
    "//third_party/rust_crates:zerocopy",
  ]

  test_deps = [
    "//src/graphics/lib/magma/src/libmagma",
    "//src/lib/diagnostics/testing/diagnostics-assertions/rust:diagnostics-assertions",
    "//src/lib/fuchsia",
    "//src/lib/test_util",
    "//src/lib/ui/fuchsia-scenic",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:assert_matches",
    "//third_party/rust_crates:pretty_assertions",
    "//third_party/rust_crates:test-case",
  ]
}

fuchsia_unittest_package("starnix-input-tests") {
  manifest = "meta/starnix-input-tests.cml"
  deps = [ ":input-device_test" ]
  test_specs = {
    log_settings = {
      # Tests exercise failure cases, so ERROR logs are expected.
      max_severity = "ERROR"
    }
  }
  test_type = "starnix"
}
