-- asm
# Store a 64 bits number and get part of it.
lddw %r1, 0x0102030405060708
stxdw [%r10-8], %r1
ldxdw %r2, [%r10-8]
jne %r2, %r1, exit
ldxw %r2, [%r10-4]
jne %r2, 0x01020304, exit
ldxh %r2, [%r10-2]
jne %r2, 0x0102, exit
ldxb %r2, [%r10-1]
jne %r2, 0x01, exit

# Store a 64 bits number bit by bit and check the value.
stxdw [%r10-8], %r10
mov %r1, 0x09
stxb [%r10-8], %r1
mov %r1, 0x10
stxb [%r10-7], %r1
mov %r1, 0x1211
stxh [%r10-6], %r1
mov %r1, 0x16151413
stxw [%r10-4], %r1
ldxdw %r2, [%r10-8]
lddw %r1, 0x1615141312111009
jne %r2, %r1, exit

# Store a single bit, and get it back.
stxdw [%r10-8], %r10
mov %r1, 0x17
stxb [%r10-6], %r1
ldxb %r2, [%r10-6]
jne %r2, 0x17, exit
mov %r0, 0
exit
-- result
0
