### class
class alg_socket
class appletalk_socket
class association
class atmpvc_socket
class atmsvc_socket
class ax25_socket
class binder
class blk_file
class bluetooth_socket
class bpf
class caif_socket
class can_socket
class cap_userns
class cap2_userns
class capability
class capability2
class chr_file
class dccp_socket
class decnet_socket
class dir
class fd
class fifo_file
class file
class filesystem
class icmp_socket
class ieee802154_socket
class infiniband_endport
class infiniband_pkey
class ipc
class ipx_socket
class irda_socket
class isdn_socket
class iucv_socket
class kcm_socket
class kernel_service
class key
class key_socket
class llc_socket
class lnk_file
class lockdown
class memprotect
class msg
class msgq
class netif
class netlink_audit_socket
class netlink_connector_socket
class netlink_crypto_socket
class netlink_dnrt_socket
class netlink_fib_lookup_socket
class netlink_generic_socket
class netlink_iscsi_socket
class netlink_kobject_uevent_socket
class netlink_netfilter_socket
class netlink_nflog_socket
class netlink_rdma_socket
class netlink_route_socket
class netlink_scsitransport_socket
class netlink_selinux_socket
class netlink_socket
class netlink_tcpdiag_socket
class netlink_xfrm_socket
class netrom_socket
class nfc_socket
class node
class obsolete_netlink_firewall_socket
class obsolete_netlink_ip6fw_socket
class packet
class packet_socket
class peer
class perf_event
class phonet_socket
class pppox_socket
class process
class process2
class qipcrtr_socket
class rawip_socket
class rds_socket
class rose_socket
class rxrpc_socket
class sctp_socket
class security
class sem
class shm
class smc_socket
class sock_file
class socket
class system
class tcp_socket
class tipc_socket
class tun_socket
class udp_socket
class unix_dgram_socket
class unix_stream_socket
class vsock_socket
class x25_socket
class xdp_socket

### sid
sid any_socket
sid devnull
sid file
sid file_labels
sid fs
sid icmp_socket
sid igmp_packet
sid init
sid kernel
sid kmod
sid netif
sid netmsg
sid node
sid policy
sid port
sid scmp_packet
sid security
sid sysctl
sid sysctl_dev
sid sysctl_fs
sid sysctl_kernel
sid sysctl_modprobe
sid sysctl_net
sid sysctl_net_unix
sid sysctl_vm
sid tcp_socket
sid unlabeled

### common
common cap { chown dac_override dac_read_search fowner fsetid kill setgid setuid setpcap linux_immutable net_bind_service net_broadcast net_admin net_raw ipc_lock ipc_owner sys_module sys_rawio sys_chroot sys_ptrace sys_pacct sys_admin sys_boot sys_nice sys_resource sys_time sys_tty_config mknod lease audit_write audit_control setfcap }
common cap2 { mac_override mac_admin syslog wake_alarm block_suspend audit_read }
common database { create drop getattr setattr relabelfrom relabelto }
common file { ioctl read write create getattr setattr lock relabelfrom relabelto append map unlink link rename execute quotaon mounton audit_access open execmod watch watch_mount watch_sb watch_with_perm watch_reads }
common ipc { create destroy getattr setattr read write associate unix_read unix_write }
common socket { ioctl read write create getattr setattr lock relabelfrom relabelto append map bind connect listen accept getopt setopt shutdown recvfrom sendto name_bind }
common x_device { getattr setattr use read write getfocus setfocus bell force_cursor freeze grab manage list_property get_property set_property add remove create destroy }

### class permissions
class alg_socket inherits socket
class appletalk_socket inherits socket
class association { sendto recvfrom setcontext polmatch }
class atmpvc_socket inherits socket
class atmsvc_socket inherits socket
class ax25_socket inherits socket
class binder { impersonate call set_context_mgr transfer }
class blk_file inherits file
class bluetooth_socket inherits socket
class bpf { map_create map_read map_write prog_load prog_run }
class caif_socket inherits socket
class can_socket inherits socket
class cap_userns inherits cap
class cap2_userns inherits cap2
class capability inherits cap
class capability2 inherits cap2
class chr_file inherits file
class dccp_socket inherits socket { node_bind name_connect }
class decnet_socket inherits socket
class dir inherits file { add_name remove_name reparent search rmdir }
class fd { use }
class fifo_file inherits file
class file inherits file { execute_no_trans entrypoint }
class filesystem { mount remount unmount getattr relabelfrom relabelto associate quotamod quotaget watch }
class icmp_socket inherits socket { node_bind }
class ieee802154_socket inherits socket
class infiniband_endport { manage_subnet }
class infiniband_pkey { access }
class ipc inherits ipc
class ipx_socket inherits socket
class irda_socket inherits socket
class isdn_socket inherits socket
class iucv_socket inherits socket
class kcm_socket inherits socket
class kernel_service { use_as_override create_files_as }
class key { view read write search link setattr create }
class key_socket inherits socket
class llc_socket inherits socket
class lnk_file inherits file
class lockdown { integrity confidentiality }
class memprotect { mmap_zero }
class msg { send receive }
class msgq inherits ipc { enqueue }
class netif { ingress egress }
class netlink_audit_socket inherits socket { nlmsg_read nlmsg_write nlmsg_relay nlmsg_readpriv nlmsg_tty_audit }
class netlink_connector_socket inherits socket
class netlink_crypto_socket inherits socket
class netlink_dnrt_socket inherits socket
class netlink_fib_lookup_socket inherits socket
class netlink_generic_socket inherits socket
class netlink_iscsi_socket inherits socket
class netlink_kobject_uevent_socket inherits socket
class netlink_netfilter_socket inherits socket
class netlink_nflog_socket inherits socket
class netlink_rdma_socket inherits socket
class netlink_route_socket inherits socket { nlmsg_read nlmsg_write }
class netlink_scsitransport_socket inherits socket
class netlink_selinux_socket inherits socket
class netlink_socket inherits socket
class netlink_tcpdiag_socket inherits socket { nlmsg_read nlmsg_write }
class netlink_xfrm_socket inherits socket { nlmsg_read nlmsg_write }
class netrom_socket inherits socket
class nfc_socket inherits socket
class node { recvfrom sendto }
class obsolete_netlink_firewall_socket inherits socket { nlmsg_read nlmsg_write }
class obsolete_netlink_ip6fw_socket inherits socket { nlmsg_read nlmsg_write }
class packet { send recv relabelto forward_in forward_out }
class packet_socket inherits socket
class peer { recv }
class perf_event { open cpu kernel tracepoint read write }
class phonet_socket inherits socket
class pppox_socket inherits socket
class process { fork transition sigchld sigkill sigstop signull signal ptrace getsched setsched getsession getpgid setpgid getcap setcap share getattr setexec setfscreate noatsecure siginh setrlimit rlimitinh dyntransition setcurrent execmem execstack execheap setkeycreate setsockcreate getrlimit }
class process2 { nnp_transition nosuid_transition }
class qipcrtr_socket inherits socket
class rawip_socket inherits socket { node_bind }
class rds_socket inherits socket
class rose_socket inherits socket
class rxrpc_socket inherits socket
class sctp_socket inherits socket { node_bind name_connect association }
class security { compute_av compute_create compute_member check_context load_policy compute_relabel compute_user setenforce setbool setsecparam setcheckreqprot read_policy validate_trans }
class sem inherits ipc
class shm inherits ipc { lock }
class smc_socket inherits socket
class sock_file inherits file
class socket inherits socket
class system { ipc_info syslog_read syslog_mod syslog_console module_request module_load halt reboot status start stop enable disable reload }
class tcp_socket inherits socket { node_bind name_connect }
class tipc_socket inherits socket
class tun_socket inherits socket { attach_queue }
class udp_socket inherits socket { node_bind }
class unix_dgram_socket inherits socket
class unix_stream_socket inherits socket { connectto }
class vsock_socket inherits socket
class x25_socket inherits socket
class xdp_socket inherits socket

### sensitivity
sensitivity s0;
sensitivity s1;
sensitivity s2;

### dominance
dominance { s0 s1 s2 }

### category
category c0;
category c1;
category c2;

### level
level s0:c0.c2;
level s1:c0.c2;
level s2:c0.c2;

### mlsconstrain
mlsconstrain { filesystem } { relabelto } (l2 eq h2 and h1 dom h2);

### policycap
policycap network_peer_controls;

### attribute
# Attribute to be associated with security domains (i.e., source processes acting on objects).
attribute domain_a;
# Attribute to be associated with file-like objects (i.e., types meant to be applied tofile,
# lnk_file, chr_file, dir, ...).
attribute file_like_a;
# Attribute to be associated with every type that needs targeted by `runcon` to run a binary in the
# specified context. E.g., if a test must `runcon u:r:my_t:s0 some/binary`, then `my_t` should be
# associated with this attribute.
attribute runcon_target_a;
# Attribute t obe associated with every type that is "effectively unconfined". This pattern is
# useful, for example, to give a special type to the `unlabeled` SID, give it blanket permissions,
# but allow some tests to distinguish between `unconfined_t` and `unlabeled_t`.
attribute unconfined_a;

### bool
bool xserver_object_manager false;

### type
type unconfined_t;
type hermetic_bin_t;
type devpts_t;
type selinuxfs_t;
type lib_t;
type unlabeled_t;

### typeattribute
# unconfined_t and unlabeled_t is applied to processes and file-like objects
typeattribute unconfined_t domain_a;
typeattribute unconfined_t file_like_a;
typeattribute unlabeled_t domain_a;
typeattribute unlabeled_t file_like_a;
# Many types are intended for file-like objects
typeattribute hermetic_bin_t file_like_a;
typeattribute devpts_t file_like_a;
typeattribute selinuxfs_t file_like_a;
typeattribute unlabeled_t file_like_a;
# unconfined_t and unlabeled_t should be "effectively unconfined"
typeattribute unconfined_t unconfined_a;
typeattribute unlabeled_t unconfined_a;

### role
role unconfined_r;

### role types
role unconfined_r types { unconfined_t unlabeled_t };

### allow type
# Blanket allow unconfined_a to file-like objects
allow unconfined_a file_like_a:alg_socket *;
allow unconfined_a file_like_a:appletalk_socket *;
allow unconfined_a file_like_a:association *;
allow unconfined_a file_like_a:atmpvc_socket *;
allow unconfined_a file_like_a:atmsvc_socket *;
allow unconfined_a file_like_a:ax25_socket *;
allow unconfined_a file_like_a:binder *;
allow unconfined_a file_like_a:blk_file *;
allow unconfined_a file_like_a:bluetooth_socket *;
allow unconfined_a file_like_a:bpf *;
allow unconfined_a file_like_a:caif_socket *;
allow unconfined_a file_like_a:can_socket *;
allow unconfined_a file_like_a:cap_userns *;
allow unconfined_a file_like_a:cap2_userns *;
allow unconfined_a file_like_a:capability *;
allow unconfined_a file_like_a:capability2 *;
allow unconfined_a file_like_a:chr_file *;
allow unconfined_a file_like_a:dccp_socket *;
allow unconfined_a file_like_a:decnet_socket *;
allow unconfined_a file_like_a:dir *;
allow unconfined_a file_like_a:fd *;
allow unconfined_a file_like_a:fifo_file *;
allow unconfined_a file_like_a:file *;
allow unconfined_a file_like_a:filesystem *;
allow unconfined_a file_like_a:icmp_socket *;
allow unconfined_a file_like_a:ieee802154_socket *;
allow unconfined_a file_like_a:infiniband_endport *;
allow unconfined_a file_like_a:infiniband_pkey *;
allow unconfined_a file_like_a:ipc *;
allow unconfined_a file_like_a:ipx_socket *;
allow unconfined_a file_like_a:irda_socket *;
allow unconfined_a file_like_a:isdn_socket *;
allow unconfined_a file_like_a:iucv_socket *;
allow unconfined_a file_like_a:kcm_socket *;
allow unconfined_a file_like_a:kernel_service *;
allow unconfined_a file_like_a:key *;
allow unconfined_a file_like_a:key_socket *;
allow unconfined_a file_like_a:llc_socket *;
allow unconfined_a file_like_a:lnk_file *;
allow unconfined_a file_like_a:lockdown *;
allow unconfined_a file_like_a:memprotect *;
allow unconfined_a file_like_a:msg *;
allow unconfined_a file_like_a:msgq *;
allow unconfined_a file_like_a:netif *;
allow unconfined_a file_like_a:netlink_audit_socket *;
allow unconfined_a file_like_a:netlink_connector_socket *;
allow unconfined_a file_like_a:netlink_crypto_socket *;
allow unconfined_a file_like_a:netlink_dnrt_socket *;
allow unconfined_a file_like_a:netlink_fib_lookup_socket *;
allow unconfined_a file_like_a:netlink_generic_socket *;
allow unconfined_a file_like_a:netlink_iscsi_socket *;
allow unconfined_a file_like_a:netlink_kobject_uevent_socket *;
allow unconfined_a file_like_a:netlink_netfilter_socket *;
allow unconfined_a file_like_a:netlink_nflog_socket *;
allow unconfined_a file_like_a:netlink_rdma_socket *;
allow unconfined_a file_like_a:netlink_route_socket *;
allow unconfined_a file_like_a:netlink_scsitransport_socket *;
allow unconfined_a file_like_a:netlink_selinux_socket *;
allow unconfined_a file_like_a:netlink_socket *;
allow unconfined_a file_like_a:netlink_tcpdiag_socket *;
allow unconfined_a file_like_a:netlink_xfrm_socket *;
allow unconfined_a file_like_a:netrom_socket *;
allow unconfined_a file_like_a:nfc_socket *;
allow unconfined_a file_like_a:node *;
allow unconfined_a file_like_a:obsolete_netlink_firewall_socket *;
allow unconfined_a file_like_a:obsolete_netlink_ip6fw_socket *;
allow unconfined_a file_like_a:packet *;
allow unconfined_a file_like_a:packet_socket *;
allow unconfined_a file_like_a:peer *;
allow unconfined_a file_like_a:perf_event *;
allow unconfined_a file_like_a:phonet_socket *;
allow unconfined_a file_like_a:pppox_socket *;
allow unconfined_a file_like_a:process *;
allow unconfined_a file_like_a:process2 *;
allow unconfined_a file_like_a:qipcrtr_socket *;
allow unconfined_a file_like_a:rawip_socket *;
allow unconfined_a file_like_a:rds_socket *;
allow unconfined_a file_like_a:rose_socket *;
allow unconfined_a file_like_a:rxrpc_socket *;
allow unconfined_a file_like_a:sctp_socket *;
allow unconfined_a file_like_a:security *;
allow unconfined_a file_like_a:sem *;
allow unconfined_a file_like_a:shm *;
allow unconfined_a file_like_a:smc_socket *;
allow unconfined_a file_like_a:sock_file *;
allow unconfined_a file_like_a:socket *;
allow unconfined_a file_like_a:system *;
allow unconfined_a file_like_a:tcp_socket *;
allow unconfined_a file_like_a:tipc_socket *;
allow unconfined_a file_like_a:tun_socket *;
allow unconfined_a file_like_a:udp_socket *;
allow unconfined_a file_like_a:unix_dgram_socket *;
allow unconfined_a file_like_a:unix_stream_socket *;
allow unconfined_a file_like_a:vsock_socket *;
allow unconfined_a file_like_a:x25_socket *;
allow unconfined_a file_like_a:xdp_socket *;
# Blanket allow all domains to perform selected operations on all file-like objects
# Opening a file requires searching the fully qualified path of the file. Note that testing these
# permissions may require creating domains that do not associate with `domain_a`.
allow domain_a file_like_a:dir { search };
# Blanket allow all domains targeted by runcon to `use` its `fd` objects; failure to do so causes:
# 1. EPERM from execve() in `runcon` that is attempting to run the target binary
# 2. Nothing output to the audit log???
# 3. `runcon` segfaults
allow runcon_target_a unconfined_t:fd { use };

### user
user system_u roles { unconfined_r } level s0 range s0 - s1:c0.c1;
user unconfined_u roles { unconfined_r } level s0 range s0 - s1:c0.c1;

### sid level
sid any_socket system_u:object_r:unconfined_t:s0
sid devnull system_u:object_r:unconfined_t:s0
sid file system_u:object_r:unconfined_t:s0
sid file_labels system_u:object_r:unconfined_t:s0
sid fs system_u:object_r:unconfined_t:s0
sid icmp_socket system_u:object_r:unconfined_t:s0
sid igmp_packet system_u:object_r:unconfined_t:s0
sid init system_u:object_r:unconfined_t:s0
sid kernel system_u:unconfined_r:unconfined_t:s0
sid kmod system_u:object_r:unconfined_t:s0
sid netif system_u:object_r:unconfined_t:s0
sid netmsg system_u:object_r:unconfined_t:s0
sid node system_u:object_r:unconfined_t:s0
sid policy system_u:object_r:unconfined_t:s0
sid port system_u:object_r:unconfined_t:s0
sid scmp_packet system_u:object_r:unconfined_t:s0
sid security system_u:object_r:unconfined_t:s0
sid sysctl system_u:object_r:unconfined_t:s0
sid sysctl_dev system_u:object_r:unconfined_t:s0
sid sysctl_fs system_u:object_r:unconfined_t:s0
sid sysctl_kernel system_u:object_r:unconfined_t:s0
sid sysctl_modprobe system_u:object_r:unconfined_t:s0
sid sysctl_net system_u:object_r:unconfined_t:s0
sid sysctl_net_unix system_u:object_r:unconfined_t:s0
sid sysctl_vm system_u:object_r:unconfined_t:s0
sid tcp_socket system_u:object_r:unconfined_t:s0
sid unlabeled system_u:object_r:unlabeled_t:s0

### fs_use_xattr
fs_use_xattr ext2 system_u:object_r:unconfined_t:s0;
fs_use_xattr ext3 system_u:object_r:unconfined_t:s0;
fs_use_xattr ext4 system_u:object_r:unconfined_t:s0;
fs_use_xattr jffs2 system_u:object_r:unconfined_t:s0;
fs_use_xattr jfs system_u:object_r:unconfined_t:s0;
fs_use_xattr reiserfs system_u:object_r:unconfined_t:s0;
fs_use_xattr xfs system_u:object_r:unconfined_t:s0;

### fs_use_task
fs_use_task pipefs system_u:object_r:unconfined_t:s0;
fs_use_task sockfs system_u:object_r:unconfined_t:s0;

### fs_use_trans
# Use particular type for devpts filesystem because fork+exec will perform some operations on
# [devpts]/0 and we don't want to over-privilege tests.
fs_use_trans devpts system_u:object_r:devpts_t:s0;
fs_use_trans hugetlbfs system_u:object_r:unconfined_t:s0;
fs_use_trans mqueue system_u:object_r:unconfined_t:s0;
fs_use_trans shm system_u:object_r:unconfined_t:s0;
fs_use_trans tmpfs system_u:object_r:unconfined_t:s0;

### genfscon
genfscon cgroup / system_u:object_r:unconfined_t:s0
genfscon cgroup2 / system_u:object_r:unconfined_t:s0
genfscon debugfs / system_u:object_r:unconfined_t:s0
genfscon proc / system_u:object_r:unconfined_t:s0
genfscon pstore / system_u:object_r:unconfined_t:s0
# Use particular type for selinux filesystem because fork+exec will perform some operations on
# [selinuxfs]/null and we don't want to over-privilege tests.
genfscon selinuxfs / system_u:object_r:selinuxfs_t:s0
genfscon sysfs / system_u:object_r:unconfined_t:s0
genfscon tracefs / system_u:object_r:unconfined_t:s0
