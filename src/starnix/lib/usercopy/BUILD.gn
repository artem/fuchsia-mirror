# Copyright 2023 The Fuchsia Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/toolchain/zircon/user_basic_redirect.gni")
import("//build/zircon/hermetic_code_blob.gni")

group("tests") {
  testonly = true
  deps = [
    ":usercopy-unittests",

    # Make sure that the hermetic copy/zero routines do not bitrot.
    ":usercopy_cpp_reference_routines",
  ]
}

config("leaf-frame-pointer") {
  visibility = [ ":*" ]
  cflags = [ "-mno-omit-leaf-frame-pointer" ]
}

static_library("usercopy_cpp_reference_routines") {
  sources = [
    "hermetic_copy.cc",
    "hermetic_copy_until_null_byte.cc",
    "hermetic_zero.cc",
  ]

  configs += [ "//build/config:default_frame_pointers" ]
  configs -= [ "//build/config:default_frame_pointers" ]
  configs += [
    "//build/config:optimize_speed",
    "//build/config:frame_pointers",
    ":leaf-frame-pointer",
  ]
}

static_library("usercopy_assembly_routines") {
  arch_dir = "arch/${target_cpu}"
  sources = rebase_path([
                          "hermetic_copy.S",
                          "hermetic_zero.S",
                          "hermetic_copy_until_null_byte.S",
                          "hermetic_copy_error.S",
                          "atomic_load.S",
                          "atomic_store.S",
                          "atomic_error.S",
                          "atomic_compare_exchange.S",
                        ],
                        ".",
                        arch_dir)
}

rustc_library("usercopy") {
  edition = "2021"
  sources = [ "src/lib.rs" ]
  deps = [
    "//src/lib/fuchsia-runtime",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:zerocopy",
  ]
  non_rust_deps = [ ":usercopy_assembly_routines" ]
  with_unit_tests = true
  test_deps = [
    "//src/lib/fuchsia",
    "//third_party/rust_crates:test-case",
  ]
  configs += [ "//src/starnix/config:starnix_clippy_lints" ]
}

fuchsia_test_component("usercopy-unittests-component") {
  component_name = "usercopy_test"
  manifest = "meta/usercopy_test.cml"
  deps = [ ":usercopy_test" ]
}

fuchsia_test_package("usercopy-unittests") {
  test_components = [ ":usercopy-unittests-component" ]
}
