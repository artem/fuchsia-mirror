# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/host_test_data.gni")

rustc_library("selinux_policy") {
  edition = "2021"
  with_unit_tests = true
  deps = [
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:bstr",
    "//third_party/rust_crates:once_cell",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:zerocopy",
  ]
  sources = [
    "src/arrays.rs",
    "src/error.rs",
    "src/extensible_bitmap.rs",
    "src/lib.rs",
    "src/metadata.rs",
    "src/symbols.rs",
  ]
}

fuchsia_unittest_package("selinux_policy-tests") {
  deps = [ ":selinux_policy_test" ]
}

if (is_host) {
  testdata_files = [
    "emulator",
    "minimal",
    "selinux_testsuite",
  ]

  policy_files = []
  expectation_files = []
  foreach(file, testdata_files) {
    policy_files += [ "testdata/policies/$file" ]
    expectation_files += [ "testdata/expectations/$file" ]
  }

  host_test_data("testdata_policies") {
    sources = policy_files
    outputs = [ "$target_out_dir/testdata/policies/{{source_file_part}}" ]
  }

  host_test_data("testdata_expectations") {
    sources = expectation_files
    outputs = [ "$target_out_dir/testdata/expectations/{{source_file_part}}" ]
  }

  config("config") {
    testdata_dir = "$target_out_dir/testdata"
    rustenv = [ "TESTDATA_DIR=" + rebase_path(testdata_dir, root_build_dir) ]
  }

  rustc_test("selinux_policy_host_tests") {
    edition = "2021"
    source_root = "host_tests/lib.rs"
    sources = [ "host_tests/lib.rs" ]
    deps = [
      ":selinux_policy",
      ":testdata_expectations",
      ":testdata_policies",
      "//third_party/rust_crates:serde",
      "//third_party/rust_crates:serde_json5",
    ]
    configs += [ ":config" ]
  }
}

group("host_tests") {
  testonly = true
  deps = [ ":selinux_policy_host_tests($host_toolchain)" ]
}

group("tests") {
  testonly = true
  deps = [
    ":host_tests",
    ":selinux_policy-tests",
  ]
}
