// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is auto-generated by cbindgen.py. See README for details.

#ifndef SRC_FIRMWARE_LIB_FASTBOOT_RUST_FFI_C_BINDINGS_H_
#define SRC_FIRMWARE_LIB_FASTBOOT_RUST_FFI_C_BINDINGS_H_

// LINT.IfChange

#include <cstdarg>
#include <cstdint>
#include <cstdlib>
#include <new>
#include <ostream>

extern "C" {

/// Installs images from a source disk to a destination disk.
///
/// This function can auto-detect the install source and destination if there
/// is exactly one viable candidate for each, otherwise they must be supplied
/// by the caller.
///
/// # Arguments
/// `source`: UTF-8 source block device topological path, or NULL to auto-detect a removable disk.
/// `destination`: UTF-8 destination block device topological path, or NULL to auto-detect internal
///                storage.
///
/// # Returns
/// A zx_status code.
///
/// # Safety
/// The string arguments must either be NULL or meet all the conditions given at
/// https://doc.rust-lang.org/std/ffi/struct.CStr.html, primarily:
///   1. The string must be null-terminated
///   2. The contents must not be modified until this function returns
int32_t install_from_usb(const char *source, const char *destination);

}  // extern "C"

// LINT.ThenChange(../src/lib.rs)

#endif  // SRC_FIRMWARE_LIB_FASTBOOT_RUST_FFI_C_BINDINGS_H_
