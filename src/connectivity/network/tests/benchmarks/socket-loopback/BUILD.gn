# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/components/fuchsia_test_package.gni")
import("//build/components/fuchsia_unittest_component.gni")
import("//build/components/fuchsia_unittest_package.gni")
import("//build/test.gni")
import("//build/testing/environments.gni")

test("loopback_socket_benchmarks") {
  sources = [
    "../../os.h",
    "loopback_socket_benchmarks.cc",
  ]
  if (is_fuchsia) {
    sources += [
      "tracing.cc",
      "tracing.h",
    ]
  }

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/perftest",
    "//zircon/system/ulib/zx",
  ]
  if (is_fuchsia) {
    deps += [
      "//sdk/fidl/fuchsia.tracing.controller:fuchsia.tracing.controller_cpp",
      "//sdk/lib/component/incoming/cpp",
      "//zircon/system/ulib/trace",
      "//zircon/system/ulib/trace-provider",
    ]
  }
}

fuchsia_unittest_component("socket-benchmarks-with-netstack3") {
  manifest = "meta/loopback-socket-benchmarks-with-netstack3.cml"
  deps = [
    ":loopback_socket_benchmarks",
    "//src/connectivity/network/netstack3:component",
  ]
}

fuchsia_test_package("socket-benchmarks-tests-netstack3") {
  test_components = [ ":socket-benchmarks-with-netstack3" ]
}

fuchsia_unittest_component("socket-benchmarks-with-netstack3-tracing") {
  manifest = "meta/loopback-socket-benchmarks-with-netstack3-tracing.cml"
  deps = [
    ":loopback_socket_benchmarks",
    "//src/connectivity/network/netstack3:component",
  ]
  test_type = "system"
}

fuchsia_test_package("socket-benchmarks-with-tracing-pkg-netstack3") {
  test_components = [ ":socket-benchmarks-with-netstack3-tracing" ]

  # Prevent this test from being run as a target-side test, since it's kicked
  # off by the dart wrapper.
  test_specs = {
    environments = []
  }
}

# The Go runtime on Fuchsia does not support RISC-V.
if (target_cpu != "riscv64") {
  fuchsia_unittest_component("socket-benchmarks") {
    manifest = "meta/loopback-socket-benchmarks.cml"
    deps = [
      ":loopback_socket_benchmarks",
      "//src/connectivity/network/netstack:component",
    ]
  }

  fuchsia_unittest_component("socket-benchmarks-with-fast-udp") {
    manifest = "meta/loopback-socket-benchmarks-with-fast-udp.cml"
    deps = [
      ":loopback_socket_benchmarks",
      "//src/connectivity/network/netstack:component-with-fast-udp",
    ]
  }

  fuchsia_unittest_component("socket-benchmarks-with-fake-netstack") {
    manifest = "meta/loopback-socket-benchmarks-with-fake-netstack.cml"
    deps = [
      ":loopback_socket_benchmarks",
      "//src/connectivity/network/tests/benchmarks/fake-netstack",
    ]
  }

  fuchsia_test_package("socket-benchmarks-tests-netstack2") {
    test_components = [
      ":socket-benchmarks",
      ":socket-benchmarks-with-fast-udp",
      ":socket-benchmarks-with-fake-netstack",
    ]
  }

  fuchsia_unittest_component("socket-benchmarks-with-tracing") {
    manifest = "meta/loopback-socket-benchmarks-with-tracing.cml"
    deps = [
      ":loopback_socket_benchmarks",
      "//src/connectivity/network/netstack:component-with-tracing-dropin",
    ]
    test_type = "system"
  }

  # TODO(https://fxbug.dev/117883): Delete this once Fast UDP is the default.
  fuchsia_unittest_component("socket-benchmarks-with-fast-udp-tracing") {
    manifest = "meta/loopback-socket-benchmarks-with-fast-udp-tracing.cml"
    deps = [
      ":loopback_socket_benchmarks",
      "//src/connectivity/network/netstack:component-with-fast-udp-tracing",
    ]
    test_type = "system"
  }

  fuchsia_test_package("socket-benchmarks-with-tracing-pkg-netstack2") {
    test_components = [
      ":socket-benchmarks-with-tracing",
      ":socket-benchmarks-with-fast-udp-tracing",
    ]

    # Prevent this test from being run as a target-side test, since it's kicked
    # off by the dart wrapper.
    test_specs = {
      environments = []
    }
  }

  ns2_test_targets = [
    ":socket-benchmarks-tests-netstack2",
    ":socket-benchmarks-with-tracing-pkg-netstack2",
  ]
} else {
  ns2_test_targets = []
}

all_test_targets = [
                     ":socket-benchmarks-tests-netstack3",
                     ":socket-benchmarks-with-tracing-pkg-netstack3",
                   ] + ns2_test_targets

group("tests") {
  testonly = true
  deps = all_test_targets
  if (host_os == "linux") {
    deps += [ ":loopback_socket_benchmarks($host_toolchain)" ]
  }
}

group("benchmarks") {
  testonly = true
  deps = all_test_targets
}
