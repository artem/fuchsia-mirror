# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load(
    "@fuchsia_sdk//fuchsia:defs.bzl",
    "fuchsia_cc_test",
    "fuchsia_unittest_package",
)

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "fidl",
    srcs = [
        "gatt2_client_server.cc",
        "gatt2_remote_service_server.cc",
        "gatt2_server_server.cc",
        "gatt_client_server.cc",
        "gatt_remote_service_server.cc",
        "gatt_server_server.cc",
        "host_server.cc",
        "low_energy_central_server.cc",
        "low_energy_connection_server.cc",
        "low_energy_peripheral_server.cc",
        "profile_server.cc",
    ],
    hdrs = [
        "gatt2_client_server.h",
        "gatt2_remote_service_server.h",
        "gatt2_server_ids.h",
        "gatt2_server_server.h",
        "gatt_client_server.h",
        "gatt_remote_service_server.h",
        "gatt_server_server.h",
        "host_server.h",
        "low_energy_central_server.h",
        "low_energy_connection_server.h",
        "low_energy_peripheral_server.h",
        "profile_server.h",
        "server_base.h",
    ],
    deps = [
        ":helpers",
        "//src/connectivity/bluetooth/core/bt-host:stack",
        "//src/connectivity/bluetooth/core/bt-host/fidl/measure_tape:peer_hlcpp",
        "//src/connectivity/bluetooth/core/bt-host/fidl/measure_tape:read_by_type_result_hlcpp",
        "//src/connectivity/bluetooth/lib/fidl",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth:fuchsia.bluetooth_hlcpp",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth.gatt:fuchsia.bluetooth.gatt_hlcpp",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth.gatt2:fuchsia.bluetooth.gatt2_hlcpp",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth.le:fuchsia.bluetooth.le_hlcpp",
        "@fuchsia_sdk//pkg/fit-promise",
        "@fuchsia_sdk//pkg/zx",
        "@internal_sdk//fidl/fuchsia.bluetooth.host:fuchsia.bluetooth.host_hlcpp",
        "@pigweed//pw_intrusive_ptr",
    ],
)

cc_library(
    name = "helpers",
    srcs = [
        "helpers.cc",
    ],
    hdrs = [
        "helpers.h",
    ],
    deps = [
        "//src/connectivity/bluetooth/core/bt-host/common",
        "//src/connectivity/bluetooth/core/bt-host/gap",
        "//src/connectivity/bluetooth/core/bt-host/gatt",
        "//src/connectivity/bluetooth/core/bt-host/sdp",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth:fuchsia.bluetooth_hlcpp",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth.gatt:fuchsia.bluetooth.gatt_hlcpp",
        "@fuchsia_sdk//fidl/fuchsia.bluetooth.gatt2:fuchsia.bluetooth.gatt2_hlcpp",
        "@internal_sdk//fidl/fuchsia.bluetooth.bredr:fuchsia.bluetooth.bredr_cpp",
        "@internal_sdk//fidl/fuchsia.bluetooth.host:fuchsia.bluetooth.host_hlcpp",
    ],
)

cc_library(
    name = "adapter_test_fixture",
    testonly = True,
    srcs = [
        "adapter_test_fixture.cc",
    ],
    hdrs = [
        "adapter_test_fixture.h",
    ],
    deps = [
        "//src/connectivity/bluetooth/core/bt-host/gap",
        "//src/connectivity/bluetooth/core/bt-host/gatt:testing",
        "//src/connectivity/bluetooth/core/bt-host/l2cap:testing",
        "//src/connectivity/bluetooth/core/bt-host/testing",
        "//src/connectivity/bluetooth/core/bt-host/testing:fake_controller",
        "//src/connectivity/bluetooth/core/bt-host/testing:loop_fixture",
        "//third_party/pigweed/backends/pw_async_fuchsia:dispatcher",
        "@fuchsia_sdk//fidl/fuchsia.io:fuchsia.io_hlcpp",
    ],
)

cc_library(
    name = "fake_adapter_test_fixture",
    testonly = True,
    hdrs = [
        "fake_adapter_test_fixture.h",
    ],
    deps = [
        "//src/connectivity/bluetooth/core/bt-host/common",
        "//src/connectivity/bluetooth/core/bt-host/gatt",
        "//src/connectivity/bluetooth/core/bt-host/gatt:testing",
        "//src/connectivity/bluetooth/core/bt-host/testing:loop_fixture",
        "//third_party/pigweed/backends/pw_async_fuchsia:dispatcher",
    ],
)

cc_library(
    name = "fake_gatt_test_fixture",
    testonly = True,
    srcs = [
        "fake_gatt_fixture.cc",
    ],
    hdrs = [
        "fake_gatt_fixture.h",
    ],
    deps = [
        "//src/connectivity/bluetooth/core/bt-host/common",
        "//src/connectivity/bluetooth/core/bt-host/gatt",
        "//src/connectivity/bluetooth/core/bt-host/gatt:testing",
        "//src/connectivity/bluetooth/core/bt-host/testing:loop_fixture",
        "//third_party/pigweed/backends/pw_async_fuchsia:dispatcher",
    ],
)

cc_library(
    name = "fake_hci_test_fixture",
    testonly = True,
    hdrs = [
        "fake_hci_server.h",
    ],
    deps = [
        "//src/connectivity/bluetooth/core/bt-host/iso",
        "//src/connectivity/bluetooth/core/bt-host/transport",
    ],
)

fuchsia_cc_test(
    name = "fidl_test",
    testonly = True,
    srcs = [
        "gatt2_client_server_test.cc",
        "gatt2_remote_service_server_test.cc",
        "gatt2_server_server_test.cc",
        "gatt_client_server_test.cc",
        "gatt_remote_service_server_test.cc",
        "helpers_test.cc",
        "host_server_test.cc",
        "low_energy_central_server_test.cc",
        "low_energy_connection_server_test.cc",
        "low_energy_peripheral_server_test.cc",
        "profile_server_test.cc",
    ],
    death_unittest = True,
    visibility = ["//visibility:public"],
    deps = [
        ":adapter_test_fixture",
        ":fake_adapter_test_fixture",
        ":fake_gatt_test_fixture",
        ":fidl",
        "//src/connectivity/bluetooth/core/bt-host/gap:testing",
        "//src/connectivity/bluetooth/core/bt-host/gatt:testing",
        "//src/connectivity/bluetooth/core/bt-host/testing",
        "//src/connectivity/bluetooth/core/bt-host/testing:fake_controller",
        "//src/connectivity/bluetooth/core/bt-host/testing:gtest_main",
        "//src/connectivity/bluetooth/core/bt-host/testing:loop_fixture",
    ],
)

fuchsia_unittest_package(
    name = "test_pkg",
    package_name = "bt_host_fidl_tests_bazel",
    testonly = True,
    fuchsia_api_level = "HEAD",
    unit_tests = [
        ":fidl_test",
    ],
    visibility = ["//visibility:public"],
)
