# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fuzz.gni")
import("//build_overrides/pigweed.gni")
import("$dir_pw_fuzzer/fuzzer.gni")
import("$dir_pw_unit_test/test.gni")

public_dir = "//src/connectivity/bluetooth/core/bt-host/public/pw_bluetooth_sapphire/internal/host/common"

pw_source_set("common") {
  sources = [
    "$public_dir/advertising_data.h",
    "$public_dir/assert.h",
    "$public_dir/bounded_inspect_list_node.h",
    "$public_dir/byte_buffer.h",
    "$public_dir/device_address.h",
    "$public_dir/device_class.h",
    "$public_dir/error.h",
    "$public_dir/expiring_set.h",
    "$public_dir/fake_inspect.h",
    "$public_dir/host_error.h",
    "$public_dir/identifier.h",
    "$public_dir/inspect.h",
    "$public_dir/inspectable.h",
    "$public_dir/log.h",
    "$public_dir/macros.h",
    "$public_dir/manufacturer_names.h",
    "$public_dir/metrics.h",
    "$public_dir/packet_view.h",
    "$public_dir/pipeline_monitor.h",
    "$public_dir/random.h",
    "$public_dir/retire_log.h",
    "$public_dir/slab_allocator.h",
    "$public_dir/slab_buffer.h",
    "$public_dir/smart_task.h",
    "$public_dir/supplement_data.h",
    "$public_dir/to_string.h",
    "$public_dir/trace.h",
    "$public_dir/uint128.h",
    "$public_dir/uint256.h",
    "$public_dir/uuid.h",
    "$public_dir/weak_self.h",
    "$public_dir/windowed_inspect_numeric_property.h",
    "advertising_data.cc",
    "bounded_inspect_list_node.cc",
    "byte_buffer.cc",
    "device_address.cc",
    "device_class.cc",
    "host_error.cc",
    "identifier.cc",
    "log.cc",
    "manufacturer_names.cc",
    "metrics.cc",
    "random.cc",
    "retire_log.cc",
    "slab_allocator.cc",
    "supplement_data.cc",
    "uuid.cc",
  ]

  public_deps = [
    "$dir_pw_assert",
    "$dir_pw_bluetooth:emboss_hci_group",
    "$dir_pw_intrusive_ptr",
    "$dir_pw_log",
    "$dir_pw_random",
    "$dir_pw_span",
    "$dir_pw_string",
    "$dir_pw_third_party/fuchsia:fit",
    "//src/connectivity/bluetooth/lib/cpp-string",
    "//src/connectivity/bluetooth/lib/cpp-type",
    "//third_party/pigweed:pw_async_dispatcher",
    "//third_party/pigweed:pw_async_task",
  ]

  if (current_os == "fuchsia") {
    public_deps += [
      "//sdk/lib/inspect/component/cpp",
      "//zircon/system/ulib/trace",
    ]
  }
}

pw_test("tests") {
  sources = [
    "advertising_data_unittest.cc",
    "bounded_inspect_list_node_unittest.cc",
    "byte_buffer_unittest.cc",
    "device_address_unittest.cc",
    "device_class_unittest.cc",
    "error_unittest.cc",
    "expiring_set_unittest.cc",
    "identifier_unittest.cc",
    "inspectable_unittest.cc",
    "manufacturer_names_unittest.cc",
    "metrics_unittest.cc",
    "packet_view_unittest.cc",
    "pipeline_monitor_unittest.cc",
    "retire_log_unittest.cc",
    "slab_allocator_unittest.cc",
    "supplement_data_unittest.cc",
    "uuid_unittest.cc",
    "weak_self_unittest.cc",
    "windowed_inspect_numeric_property_unittest.cc",
  ]

  deps = [
    ":common",
    "//src/connectivity/bluetooth/core/bt-host/testing",
    "//third_party/pigweed/backends/pw_async_fuchsia:fake_dispatcher_fixture",
  ]
}

fuchsia_library_fuzzer("advertising_data_fuzzer") {
  sources = [ "advertising_data_fuzztest.cc" ]
  deps = [
    ":common",
    "//src/connectivity/bluetooth/core/bt-host/testing:fuzztest_driver",
  ]
}

pw_fuzzer("pw_advertising_data_fuzzer") {
  sources = [ "advertising_data_fuzztest.cc" ]
  deps = [ ":common" ]
}
