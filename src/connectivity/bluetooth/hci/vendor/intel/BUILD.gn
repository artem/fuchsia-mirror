# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/cipd.gni")
import("//build/components.gni")
import("//build/dist/resource.gni")
import("//build/drivers.gni")
import("//build_overrides/pigweed.gni")

driver_bind_rules("bt_hci_intel_bind") {
  rules = "bt_hci_intel.bind"
  tests = "bind_tests.json"
  deps = [
    "//src/devices/bind/fuchsia.bluetooth",
    "//src/devices/bind/fuchsia.usb",
  ]
}

config("undefined_behavior_misaligned_memory") {
  cflags = [ "-fno-sanitize=alignment" ]
}

source_set("common") {
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]

  # TODO(https://fxbug.dev/42136089): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]

  sources = [
    "device.cc",
    "device.h",
    "firmware_loader.cc",
    "firmware_loader.h",
    "logging.h",
    "vendor_hci.cc",
    "vendor_hci.h",
  ]

  deps = [
    ":bt_hci_intel_bind",
    "//src/connectivity/bluetooth/core/bt-host/common",
    "//src/connectivity/bluetooth/core/bt-host/hci-spec",
    "//src/connectivity/bluetooth/core/bt-host/transport",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/zx",
  ]

  public_deps = [
    "//sdk/banjo/fuchsia.hardware.bt.hci:fuchsia.hardware.bt.hci_banjo_c",
    "//sdk/banjo/fuchsia.hardware.bt.hci:fuchsia.hardware.bt.hci_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.bt.vendor:fuchsia.hardware.bt.vendor_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.usb:fuchsia.hardware.usb_banjo_cpp",
    "//sdk/fidl/fuchsia.hardware.bluetooth:fuchsia.hardware.bluetooth_cpp",
  ]
}

fuchsia_driver("fuchsia_driver") {
  output_name = "bt-hci-intel"
  deps = [ ":common" ]
}

fuchsia_driver_component("driver") {
  component_name = "bt-hci-intel"
  deps = [ ":fuchsia_driver" ]
  info = "driver-info.json"
  manifest = "meta/driver.cml"
}

if (internal_access) {
  resource("btintel-firmware") {
    sources = [
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-0041-0041.sfi",
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-11-5.sfi",
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-12-16.sfi",
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-17-2.sfi",
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-18-2.sfi",
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-hw-37.8.10-fw-22.50.19.14.f.bseq",
      "//prebuilt/connectivity/bluetooth/firmware/intel/ibt-hw-37.8.bseq",
    ]
    outputs = [ "lib/firmware/{{source_file_part}}" ]
  }
}

fuchsia_driver_package("intel") {
  driver_components = [ ":driver" ]

  deps = []
  if (internal_access) {
    deps += [ ":btintel-firmware($shlib_toolchain)" ]
  }
}

executable("tests_executable") {
  testonly = true

  output_name = "bt-hci-intel-tests"

  sources = [ "vendor_hci_unittest.cc" ]

  deps = [
    ":common",
    "//sdk/lib/driver/runtime:driver_runtime_cpp",
    "//sdk/lib/fdio",
    "//src/devices/bus/lib/device-protocol-pdev",
    "//src/devices/testing/mock-ddk",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/zircon-internal",
  ]

  public_deps = [
    "$dir_pw_assert",
    "$dir_pw_bluetooth:emboss_hci_group",
    "$dir_pw_chrono:system_clock",
    "$dir_pw_intrusive_ptr",
    "$dir_pw_log",
    "$dir_pw_random",
    "$dir_pw_span",
    "$dir_pw_string",
    "$dir_pw_third_party/fuchsia:fit",
  ]

  # Suppress UBsan's complains on the __PACKED structure.
  configs += [ ":undefined_behavior_misaligned_memory" ]
}

fuchsia_unittest_package("bt-hci-intel-tests") {
  deps = [ ":tests_executable" ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

group("tests") {
  testonly = true
  deps = [
    ":bt-hci-intel-tests",
    ":bt_hci_intel_bind_test",
  ]
}
