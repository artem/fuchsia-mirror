// Copyright 2021 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//src/connectivity/bluetooth/profiles/bt-a2dp/meta/bt-a2dp.shard.cml",
        "inspect/offer.shard.cml",
    ],
    program: {
        binary: "bin/bt_a2dp",
    },
    children: [
        {
            name: "bt-avrcp-target",
            url: "fuchsia-pkg://fuchsia.com/bt-avrcp-target#meta/bt-avrcp-target.cm",
        },
    ],
    config: {
        // enable sink, allowing peers to stream audio to be played on this device
        enable_sink: { type: "bool" },

        // MediaSession domain when publishing the media info from a connected peer
        domain: {
            type: "string",
            max_size: 20,
        },

        // Where to source audio to send to peers
        // Source types available:
        //  - audio_out - (Default) add an audio output to the system
        //  - big_ben - generated a set of tones which approximate the Westminster Quarters.
        //  - none - source is disabled, and will not be available to peers
        source_type: {
            type: "string",
            max_size: 10,
        },

        // enable avrcp-target, allowing media info to be relayed to peers from local MediaSessions
        enable_avrcp_target: { type: "bool" },

        // attempt to use AAC. If an AAC encoder / decoder is not available, this has no effect.
        enable_aac: { type: "bool" },

        // duration for to wait in milliseconds before assuming role of the initiator.
        // If a signaling channel has not been established by this time,
        // create the signaling channel, configure, open and start the stream.
        // Defaults to 500 milliseconds. Set to 0 to disable initiation.
        //
        // NOTE: This must be low enough to prevent peers from timing out while waiting for
        // initiation. The true delay from the peer's perspective is experimentally 100-500ms larger
        // than the value here.
        initiator_delay: { type: "uint32" },

        // channel mode requested for the signaling channel
        // options: ["basic", "etrm"]
        channel_mode: {
            type: "string",
            max_size: 5,
        },
    },
}
