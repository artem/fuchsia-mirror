# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/test.gni")

config("wlansoftmac_config") {
  include_dirs = [ "." ]
}

driver_bind_rules("wlansoftmac_bind") {
  rules = "wlansoftmac.bind"
  bind_output = "wlansoftmac.bindbc"
  tests = "bind_tests.json"
  deps = [ "//sdk/fidl/fuchsia.wlan.softmac:fuchsia.wlan.softmac_bindlib" ]
}

wlansoftmac_convert_sources = [
  "convert.cc",
  "convert.h",
]

wlansoftmac_convert_deps = [
  "//sdk/banjo/fuchsia.hardware.ethernet:fuchsia.hardware.ethernet_banjo_cpp",
  "//sdk/fidl/fuchsia.wlan.common:fuchsia.wlan.common_banjo_c",
  "//sdk/fidl/fuchsia.wlan.ieee80211:fuchsia.wlan.ieee80211_cpp",
  "//sdk/fidl/fuchsia.wlan.internal:fuchsia.wlan.internal_banjo_c",
  "//sdk/fidl/fuchsia.wlan.internal:fuchsia.wlan.internal_cpp",
  "//sdk/fidl/fuchsia.wlan.softmac:fuchsia.wlan.softmac_banjo_c",
  "//sdk/fidl/fuchsia.wlan.softmac:fuchsia.wlan.softmac_cpp",
  "//src/connectivity/wlan/drivers/lib/log/cpp",
  "//src/lib/ddk",
  "//zircon/system/ulib/fbl",
  "//zircon/system/ulib/zx",
]

source_set("wlansoftmac_convert") {
  sources = wlansoftmac_convert_sources
  public_deps = wlansoftmac_convert_deps
}

source_set("source_set") {
  sources = [
    "buffer_allocator.cc",
    "buffer_allocator.h",
    "device_interface.h",
    "driver.cc",
    "softmac_binding.cc",
    "softmac_binding.h",
    "softmac_bridge.cc",
    "softmac_bridge.h",
    "softmac_ifc_bridge.cc",
    "softmac_ifc_bridge.h",
  ]

  public_deps = [
    ":wlansoftmac_bind",
    ":wlansoftmac_convert",
    "//sdk/fidl/fuchsia.wlan.softmac:fuchsia.wlan.softmac_cpp",
    "//sdk/lib/driver/runtime:driver_runtime_cpp",
    "//sdk/lib/fidl/cpp/wire",
    "//sdk/lib/fidl_driver",
    "//src/connectivity/wlan/drivers/lib/log/cpp",
    "//src/connectivity/wlan/drivers/wlansoftmac/rust_driver/c-binding:wlansoftmac-c",
    "//src/connectivity/wlan/lib/common/cpp:common",
    "//src/devices/lib/dev-operation",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/sync:sync-cpp",
  ]
}

fuchsia_driver("wlansoftmac_driver-driver") {
  output_name = "wlansoftmac"
  deps = [ ":source_set" ]
  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]

  # TODO(https://fxbug.dev/42136089): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

fuchsia_driver_component("wlansoftmac_driver") {
  component_name = "wlansoftmac"
  deps = [ ":wlansoftmac_driver-driver" ]
  info = "wlansoftmac_driver-info.json"
  manifest = "meta/wlansoftmac.cml"
}

fuchsia_driver_package("wlansoftmac") {
  package_name = "wlansoftmac"
  driver_components = [ ":wlansoftmac_driver" ]
}

test("wlansoftmac_tests") {
  sources = [ "tests/buffer_allocator_test.cc" ]

  deps = [
    ":source_set",
    "//src/connectivity/wlan/drivers/lib/log/cpp/test:log_overrides",
    "//src/lib/fxl/test:gtest_main",
  ]
}

fuchsia_unittest_package("wlansoftmac-tests") {
  deps = [ ":wlansoftmac_tests" ]
}

# TODO(https://fxbug.dev/42075638): This test target will be removed after wlansoftmac
#                         no longer uses Banjo types.
test("wlansoftmac_convert_tests") {
  testonly = true
  sources = wlansoftmac_convert_sources + [ "tests/convert_test.cc" ]

  deps = wlansoftmac_convert_deps + [
           "//src/connectivity/wlan/drivers/lib/log/cpp/test:log_overrides",
           "//src/lib/fxl/test:gtest_main",
           "//third_party/googletest:gtest",
         ]

  # TODO(https://fxbug.dev/42136089): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

fuchsia_unittest_package("wlansoftmac-convert-tests") {
  deps = [ ":wlansoftmac_convert_tests" ]
}

group("tests") {
  testonly = true
  deps = [
    ":wlansoftmac-convert-tests",
    ":wlansoftmac-tests",
    ":wlansoftmac_bind_test",
  ]
}
