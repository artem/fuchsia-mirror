# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/test.gni")

source_set("manifest_parser") {
  visibility = [ ":*" ]
  sources = [
    "manifest_parser.cc",
    "manifest_parser.h",
  ]
  public_deps = [
    "//sdk/fidl/fuchsia.component.decl:fuchsia.component.decl_cpp",
    "//sdk/lib/fdio",
    "//src/devices/lib/log",
    "//src/lib/pkg_url",
    "//zircon/system/ulib/zx",
  ]
}

source_set("driver") {
  visibility = [ ":*" ]
  sources = [
    "driver.cc",
    "driver.h",
  ]
  public_deps = [
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_cpp_wire",
    "//sdk/fidl/fuchsia.driver.index:fuchsia.driver.index_cpp",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp_wire",
    "//sdk/lib/fdio",
    "//sdk/lib/fit",
    "//src/devices/lib/log",
    "//src/lib/ddk:ddk-deprecated-binding-headers",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/zx",
  ]
}

source_set("coordinator") {
  sources = [
    "base_package_resolver.cc",
    "base_package_resolver.h",
    "bind_driver_manager.cc",
    "bind_driver_manager.h",
    "composite_device.cc",
    "composite_device.h",
    "composite_device_fragment.cc",
    "composite_device_fragment.h",
    "composite_node_spec_v1.cc",
    "composite_node_spec_v1.h",
    "constants.h",
    "coordinator.cc",
    "coordinator.h",
    "device.cc",
    "device.h",
    "device_manager.cc",
    "device_manager.h",
    "driver_development.cc",
    "driver_development.h",
    "driver_host.cc",
    "driver_host.h",
    "driver_loader.cc",
    "driver_loader.h",
    "firmware_loader.cc",
    "firmware_loader.h",
    "init_task.cc",
    "package_resolver.cc",
    "package_resolver.h",
    "resume_context.h",
    "resume_task.cc",
    "suspend_handler.cc",
    "suspend_handler.h",
    "suspend_matching_task.cc",
    "suspend_resume_manager.cc",
    "suspend_resume_manager.h",
    "suspend_task.cc",
    "system_instance.cc",
    "system_instance.h",
    "task.cc",
    "unbind_task.cc",
  ]

  public_deps = [
    ":driver",
    ":manifest_parser",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_cpp_wire",
    "//sdk/fidl/fuchsia.component.resolution:fuchsia.component.resolution_cpp_wire",
    "//sdk/fidl/fuchsia.device.fs:fuchsia.device.fs_cpp_wire",
    "//sdk/fidl/fuchsia.device.manager:fuchsia.device.manager_cpp",
    "//sdk/fidl/fuchsia.driver.development:fuchsia.driver.development_cpp_wire",
    "//sdk/fidl/fuchsia.driver.test.logger:fuchsia.driver.test.logger_cpp_wire",
    "//sdk/fidl/fuchsia.fshost:fuchsia.fshost_cpp_wire",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_cpp_wire",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp_wire",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_cpp_wire",
    "//sdk/fidl/fuchsia.ldsvc:fuchsia.ldsvc_cpp_wire",
    "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle_cpp_wire",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/driver/compat/cpp",
    "//sdk/lib/driver/component/cpp:cpp",
    "//sdk/lib/fdio",
    "//sdk/lib/fdio:fdio-spawn-actions",
    "//sdk/lib/fidl",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/fit",
    "//sdk/lib/inspect/service/cpp",
    "//sdk/lib/stdcompat",
    "//sdk/lib/sys/cpp",
    "//src/bringup/lib/mexec",
    "//src/devices/bin/driver_manager:binding",
    "//src/devices/bin/driver_manager:inspect",
    "//src/devices/bin/driver_manager/composite_node_spec:lib",
    "//src/devices/bin/driver_manager/devfs",
    "//src/devices/bin/driver_manager/driver_development:lib",
    "//src/devices/lib/bind:bind-lib",
    "//src/devices/lib/log",
    "//src/lib/ddk",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//src/lib/pkg_url",
    "//src/storage/lib/vfs/cpp",
    "//src/zircon/lib/zircon",
    "//zircon/system/public",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/inspector",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]

  deps = [
    "//src/lib/fsl",
    "//src/lib/zbitl",
  ]

  configs += [ "//build/config:all_source" ]
}

test("driver_manager_test") {
  sources = [
    "tests/builtin_devices_test.cc",
    "tests/composite_device_tests.cc",
    "tests/coordinator_test_utils.cc",
    "tests/device_tests.cc",
    "tests/driver_development_test.cc",
    "tests/driver_loader_test.cc",
    "tests/init_tests.cc",
    "tests/inspect_test.cc",
    "tests/misc_tests.cc",
    "tests/multiple_device_test.cc",
    "tests/multiple_device_test_utils.cc",
    "tests/resume_tests.cc",
    "tests/suspend_tests.cc",
    "tests/system_instance_test.cc",
    "tests/task_test.cc",
    "tests/unbind_tests.cc",
  ]

  deps = [
    ":coordinator",
    "//sdk/fidl/fuchsia.io:fuchsia.io_cpp_wire",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/fdio",
    "//sdk/lib/inspect/testing/cpp:zxtest",
    "//src/devices/lib/bind:bind-lib",
    "//src/storage/lib/vfs/cpp:test_support",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/mock-boot-arguments",
    "//zircon/system/ulib/sync:sync-cpp",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_unittest_component("driver-manager-test") {
  manifest = "meta/driver-manager-test.cml"
  deps = [
    ":driver_manager_test",
    "testing:ambient_vmex_test_util",
    "testing:new_process_test_util",
    "//src/devices/bin/driver_host",
    "//src/devices/bus/drivers/platform",
    "//src/devices/internal/drivers/fragment",
    "//src/devices/tests/mock-device",
  ]
  test_type = "system"
}

executable("manifest_parser_test") {
  testonly = true
  sources = [ "tests/manifest_parser_test.cc" ]

  deps = [
    ":driver",
    ":manifest_parser",
    "//zircon/system/ulib/zxtest",
  ]
}

fuchsia_component("manifest-test-driver") {
  testonly = true
  component_name = "manifest-test"
  manifest = "meta/manifest-test-driver.cml"
}

fuchsia_component("manifest-with-scheduler-role") {
  testonly = true
  component_name = "manifest-with-scheduler-role"
  manifest = "meta/manifest-with-scheduler-role.cml"
}

fuchsia_component("manifest-missing-driver") {
  testonly = true
  component_name = "manifest-missing-driver"
  manifest = "meta/manifest-missing-driver.cml"
}

fuchsia_component("manifest-no-services") {
  testonly = true
  component_name = "manifest-no-services"
  manifest = "meta/manifest-no-services.cml"
}

fuchsia_unittest_component("manifest_parser_test_component") {
  deps = [
    ":manifest-missing-driver",
    ":manifest-no-services",
    ":manifest-test-driver",
    ":manifest-with-scheduler-role",
    ":manifest_parser_test",
  ]
}

fuchsia_test_package("driver-manager-v1-tests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }

  test_components = [
    ":driver-manager-test",
    ":manifest_parser_test_component",
  ]
}
