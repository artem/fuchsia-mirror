# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/cipd.gni")
import("//build/drivers.gni")

if (internal_access) {
  config_tas2770 = "audio/config/tas2770/tas2770_config.h"
  copy("config-tas2770-copy") {
    sources = [ "//prebuilt/$config_tas2770" ]
    outputs = [ "$root_out_dir/$config_tas2770" ]
  }
}

driver_bind_rules("astro-bind") {
  rules = "astro.bind"
  header_output = "astro-bind.h"
  bind_output = "astro.bindbc"
  tests = "bind-tests.json"
  deps = [
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.platform",
  ]
}

driver_bind_rules("astro-pwm-bind") {
  rules = "bind/astro-pwm.bind"
  header_output = "astro-pwm-bind.h"
  bind_output = "astro-pwm-bind.bc"
  tests = "bind-tests/astro-pwm-test.json"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.s905d2",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("astro-video-bind") {
  rules = "bind/astro-video.bind"
  header_output = "astro-video-bind.h"
  bind_output = "astro-video_bind.bc"
  tests = "bind-tests/astro-video-test.json"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.meson",
    "//src/devices/bind/fuchsia.clock",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sysmem",
    "//src/devices/bind/fuchsia.tee",
  ]
}

driver_bind_rules("pd-armcore-bind") {
  rules = "bind/pd-armcore.bind"
  header_output = "pd-armcore-bind.h"
  bind_output = "pd-armcore-bind.bc"
  tests = "bind-tests/pd-armcore-test.json"
  deps = [
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.power",
  ]
}

driver_bind_rules("pwm-ao-d-bind") {
  rules = "bind/pwm-ao-d.bind"
  header_output = "pwm-ao-d-bind.h"
  bind_output = "pwm-ao-d-bind.bc"
  tests = "bind-tests/pwm-ao-d-test.json"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s905d2",
    "//src/devices/bind/fuchsia.google.platform",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("astro-aml-sdio-bind") {
  rules = "bind/astro-aml-sdio.bind"
  header_output = "astro-aml-sdio-bind.h"
  bind_output = "astro-aml-sdio-bind.bc"
  tests = "bind-tests/astro-aml-sdio-test.json"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform",
    "//src/devices/bind/fuchsia.amlogic.platform.s905d2",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.pwm",
  ]
}

driver_bind_rules("astro-wifi-bind") {
  rules = "bind/astro-wifi.bind"
  header_output = "astro-wifi-bind.h"
  bind_output = "astro-wifi-bind.bc"
  tests = "bind-tests/astro-wifi-test.json"
  deps = [
    "//src/devices/bind/fuchsia.amlogic.platform.s905d2",
    "//src/devices/bind/fuchsia.broadcom.platform",
    "//src/devices/bind/fuchsia.gpio",
    "//src/devices/bind/fuchsia.platform",
    "//src/devices/bind/fuchsia.sdio",
  ]
}

fuchsia_driver("astro-driver") {
  output_name = "astro"
  configs += [
    "//build/config:all_source",
    "//build/config/fuchsia:enable_zircon_asserts",
  ]
  sources = [
    "astro-adc.cc",
    "astro-audio.cc",
    "astro-backlight.cc",
    "astro-bluetooth.cc",
    "astro-buttons.cc",
    "astro-canvas.cc",
    "astro-clk.cc",
    "astro-cpu.cc",
    "astro-display.cc",
    "astro-dsi.cc",
    "astro-gpio.cc",
    "astro-i2c.cc",
    "astro-light.cc",
    "astro-mali.cc",
    "astro-power.cc",
    "astro-pwm.cc",
    "astro-ram.cc",
    "astro-rawnand.cc",
    "astro-registers.cc",
    "astro-sdio.cc",
    "astro-securemem.cc",
    "astro-sysmem.cc",
    "astro-tee.cc",
    "astro-thermal.cc",
    "astro-thermistor.cc",
    "astro-touch.cc",
    "astro-usb.cc",
    "astro-video.cc",
    "astro.cc",
  ]
  deps = [
    ":astro-aml-sdio-bind_header",
    ":astro-bind",
    ":astro-pwm-bind_header",
    ":astro-video-bind_header",
    ":astro-wifi-bind_header",
    ":pd-armcore-bind_header",
    ":pwm-ao-d-bind_header",
    "//sdk/banjo/fuchsia.hardware.gpioimpl:fuchsia.hardware.gpioimpl_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.iommu:fuchsia.hardware.iommu_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.powerimpl:fuchsia.hardware.powerimpl_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.serial:fuchsia.hardware.serial_banjo_cpp",
    "//sdk/banjo/fuchsia.sysmem:fuchsia.sysmem_banjo_c",
    "//sdk/fidl/fuchsia.hardware.adc:fuchsia.hardware.adc_bindlib_cpp",
    "//sdk/fidl/fuchsia.hardware.amlogiccanvas:fuchsia.hardware.amlogiccanvas_bindlib_cpp",
    "//sdk/fidl/fuchsia.hardware.clockimpl:fuchsia.hardware.clockimpl_cpp",
    "//sdk/fidl/fuchsia.hardware.gpioimpl:fuchsia.hardware.gpioimpl_cpp",
    "//sdk/fidl/fuchsia.hardware.gpu.amlogic:fuchsia.hardware.gpu.amlogic_cpp",
    "//sdk/fidl/fuchsia.hardware.platform.bus:fuchsia.hardware.platform.bus_cpp",
    "//sdk/fidl/fuchsia.hardware.sdmmc:fuchsia.hardware.sdmmc_cpp",
    "//sdk/fidl/fuchsia.hardware.serial:fuchsia.hardware.serial_cpp",
    "//sdk/fidl/fuchsia.hardware.thermal:fuchsia.hardware.thermal_cpp",
    "//sdk/lib/driver/component/cpp:cpp",
    "//src/devices/bind/fuchsia:fuchsia_cpp",
    "//src/devices/bind/fuchsia.adc:fuchsia.adc_cpp",
    "//src/devices/bind/fuchsia.amlogic.platform:fuchsia.amlogic.platform_cpp",
    "//src/devices/bind/fuchsia.amlogic.platform.s905d2:fuchsia.amlogic.platform.s905d2_cpp",
    "//src/devices/bind/fuchsia.ams.platform:fuchsia.ams.platform_cpp",
    "//src/devices/bind/fuchsia.arm.platform:fuchsia.arm.platform_cpp",
    "//src/devices/bind/fuchsia.clock:fuchsia.clock_cpp",
    "//src/devices/bind/fuchsia.codec:fuchsia.codec_cpp",
    "//src/devices/bind/fuchsia.display.dsi:fuchsia.display.dsi_cpp",
    "//src/devices/bind/fuchsia.focaltech.platform:fuchsia.focaltech.platform_cpp",
    "//src/devices/bind/fuchsia.goodix.platform:fuchsia.goodix.platform_cpp",
    "//src/devices/bind/fuchsia.google.platform:fuchsia.google.platform_cpp",
    "//src/devices/bind/fuchsia.gpio:fuchsia.gpio_cpp",
    "//src/devices/bind/fuchsia.i2c:fuchsia.i2c_cpp",
    "//src/devices/bind/fuchsia.platform:fuchsia.platform_cpp",
    "//src/devices/bind/fuchsia.power:fuchsia.power_cpp",
    "//src/devices/bind/fuchsia.pwm:fuchsia.pwm_cpp",
    "//src/devices/bind/fuchsia.register:fuchsia.register_cpp",
    "//src/devices/bind/fuchsia.rpmb:fuchsia.rpmb_cpp",
    "//src/devices/bind/fuchsia.sysmem:fuchsia.sysmem_cpp",
    "//src/devices/bind/fuchsia.tee:fuchsia.tee_cpp",
    "//src/devices/bind/fuchsia.ti.platform:fuchsia.ti.platform_cpp",
    "//src/devices/bind/fuchsia.usb.phy:fuchsia.usb.phy_cpp",
    "//src/devices/bus/lib/platform-bus-composites",
    "//src/devices/lib/amlogic",
    "//src/devices/lib/broadcom",
    "//src/devices/lib/driver",
    "//src/devices/lib/driver:driver_runtime",
    "//src/devices/lib/fidl-metadata",
    "//src/devices/lib/focaltech",
    "//src/devices/lib/metadata:llcpp",
    "//src/devices/lib/mmio",
    "//src/devices/lib/thermal",
    "//src/devices/lib/ti",
    "//src/devices/usb/lib/usb",
    "//src/devices/usb/lib/usb:cdc",
    "//src/devices/usb/lib/usb:peripheral",
    "//src/devices/usb/lib/usb:peripheral-config",
    "//src/graphics/display/lib/device-protocol-display",
    "//src/lib/ddk",
    "//src/lib/ddk:ddk-metadata-headers",

    # TODO(https://fxbug.dev/38132): Migrate to the new bind rules and delete the below
    "//src/lib/ddk:ddk-deprecated-binding-headers",
    "//src/lib/ddktl",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]
  if (internal_access) {
    deps += [ ":config-tas2770-copy($shlib_toolchain)" ]
    include_dirs = [ "$root_out_dir" ]
    defines = [ "TAS2770_CONFIG_PATH=\"$config_tas2770\"" ]
  }

  # TODO(https://fxbug.dev/94768): This target uses mutable tables which are deprecated,
  # rather than builders.
  configs += [ "//build/cpp:fidl-wire-deprecated-mutable-tables" ]
}

fuchsia_driver_component("astro") {
  component_name = "astro"
  deps = [ ":astro-driver" ]
  info = "astro-info.json"
  manifest = "meta/astro.cml"
}

fuchsia_driver_package("package") {
  package_name = "astro"
  driver_components = [ ":astro" ]
}

group("tests") {
  testonly = true
  deps = [
    ":astro-aml-sdio-bind_test",
    ":astro-bind_test",
    ":astro-pwm-bind_test",
    ":astro-video-bind_test",
    ":astro-wifi-bind_test",
    ":pd-armcore-bind_test",
    ":pwm-ao-d-bind_test",
  ]
}
