# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/bootfs_files_for_assembly.gni")
import("//build/components.gni")
import("//build/dist/component_manifest_resources.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/environments.gni")
import("//src/storage/fshost/generated_fshost_config.gni")
import("//src/sys/pkg/bin/grand-swd-binary/gsb.gni")

rustc_binary("bin") {
  name = "pkg_cache"
  with_unit_tests = true
  edition = "2021"

  deps = [
    ":config_lib",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_rust",
    "//sdk/fidl/fuchsia.component.decl:fuchsia.component.decl_rust",
    "//sdk/fidl/fuchsia.component.resolution:fuchsia.component.resolution_rust",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.metrics:fuchsia.metrics_rust",
    "//sdk/fidl/fuchsia.pkg:fuchsia.pkg_rust",
    "//sdk/fidl/fuchsia.space:fuchsia.space_rust",
    "//sdk/fidl/fuchsia.update:fuchsia.update_rust",
    "//src/lib/cobalt/rust/builders",
    "//src/lib/diagnostics/inspect/runtime/rust",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fidl/rust/fidl-contrib",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-runtime",
    "//src/lib/fuchsia-url",
    "//src/lib/trace/rust:trace",
    "//src/lib/trace/rust:trace-provider",
    "//src/lib/versioning/version-history/rust:version-history",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/storage/lib/vfs/rust:vfs",
    "//src/sys/lib/fidl-fuchsia-component-abi-ext",
    "//src/sys/lib/fidl-fuchsia-pkg-ext",
    "//src/sys/lib/mem_util",
    "//src/sys/pkg/lib/blobfs",
    "//src/sys/pkg/lib/fuchsia-hash",
    "//src/sys/pkg/lib/fuchsia-merkle",
    "//src/sys/pkg/lib/fuchsia-pkg",
    "//src/sys/pkg/lib/metrics:cobalt_sw_delivery_registry_rustlib",
    "//src/sys/pkg/lib/package-directory",
    "//src/sys/pkg/lib/system-image",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-lock",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:hmac",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:sha2",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing",
  ]

  test_deps = [
    "//src/lib/diagnostics/testing/diagnostics-assertions/rust:diagnostics-assertions",
    "//src/lib/fuchsia-fs",
    "//src/sys/pkg/lib/far/rust:fuchsia-archive",
    "//src/sys/pkg/lib/fuchsia-pkg-testing",
    "//src/sys/pkg/testing/blobfs-ramdisk",
    "//third_party/rust_crates:assert_matches",
    "//third_party/rust_crates:maplit",
    "//third_party/rust_crates:test-case",
  ]

  source_root = "src/main.rs"
  sources = [
    "src/base_packages.rs",
    "src/base_resolver.rs",
    "src/base_resolver/component.rs",
    "src/base_resolver/context_authenticator.rs",
    "src/base_resolver/package.rs",
    "src/cache_service.rs",
    "src/cache_service/missing_blobs.rs",
    "src/compat.rs",
    "src/compat/pkgfs.rs",
    "src/compat/pkgfs/packages.rs",
    "src/compat/pkgfs/packages/variants.rs",
    "src/compat/pkgfs/validation.rs",
    "src/gc_service.rs",
    "src/index.rs",
    "src/index/dynamic.rs",
    "src/index/package.rs",
    "src/index/retained.rs",
    "src/main.rs",
    "src/reboot.rs",
    "src/required_blobs.rs",
    "src/retained_packages_service.rs",
    "src/test_utils.rs",
  ]

  visibility = [
    ":*",
    "//src/sys/pkg/bin/grand-swd-binary:*",
  ]

  configs += [
    "//build/config/rust/lints:clippy_warn_all",
    "//build/config/rust:bootfs",
  ]

  # TODO(https://fxbug.dev/324112857): When Blobfs also supports open2, remove this feature flag
  # and the generated_fshost_config.gni import above.
  if (fxfs_blob) {
    features = [ "supports_open2" ]
  }
}

fuchsia_component_manifest("manifest") {
  component_name = "pkg-cache"
  manifest = "meta/pkg-cache.cml"
}

fuchsia_structured_config_rust_lib("config_lib") {
  cm_label = ":manifest"
  name = "pkg_cache_config"
  visibility = [ ":*" ]
}

fuchsia_structured_config_values("config_values_from_gn") {
  cm_label = ":manifest"
  values = {
    protect_open_packages = false

    # LINT.IfChange
    use_fxblob = fxfs_blob

    # LINT.ThenChange(/src/sys/pkg/testing/blobfs-ramdisk/BUILD.gn)
    use_system_image = true
  }
  visibility = [ ":*" ]
}

fuchsia_structured_config_values("config_values_from_gn-ignore-system-image") {
  cm_label = ":manifest"
  values = {
    protect_open_packages = false

    # TODO(https://fxbug.dev/42081210) Recovery should use fxblob if available.
    use_fxblob = false
    use_system_image = false
  }
  visibility = [ ":*" ]
}

fuchsia_structured_config_values("config_values_from_gn-cpp-blobfs") {
  cm_label = ":manifest"
  values = {
    protect_open_packages = false
    use_fxblob = false
    use_system_image = true
  }
  visibility = [ ":*" ]
}

fuchsia_structured_config_values("config_values_from_gn-fxblob") {
  cm_label = ":manifest"
  values = {
    protect_open_packages = false
    use_fxblob = true
    use_system_image = true
  }
  visibility = [ ":*" ]
}

fuchsia_component("component") {
  cm_label = ":manifest"
  deps = [ ":bin" ]
}

group("production-component-and-config") {
  testonly = true
  public_deps = [
    ":component",
    ":config_values_from_gn",
  ]
}

group("ignore-system-image-component-and-config") {
  public_deps = [
    ":component",
    ":config_values_from_gn-ignore-system-image",
  ]
}

group("production-component-and-config-cpp-blobfs") {
  testonly = true
  public_deps = [
    ":component",
    ":config_values_from_gn-cpp-blobfs",
  ]
}

group("production-component-and-config-fxblob") {
  testonly = true
  public_deps = [
    ":component",
    ":config_values_from_gn-fxblob",
  ]
}

fuchsia_package("pkg-cache") {
  validate_structured_config = false
  deps = [ ":component" ]
}

fuchsia_component("pkg-cache-test") {
  testonly = true
  manifest = "meta/pkg-cache-bin-test.cml"
  deps = [ ":bin_test" ]
}

fuchsia_test_package("pkg-cache-tests") {
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  test_components = [ ":pkg-cache-test" ]
  deps = [ "//src/storage/testing:storage_driver_test_realm" ]
}

group("tests") {
  testonly = true
  public_deps = [ ":pkg-cache-tests" ]
}

# If the file in this resource is included in the system_image package, then pkg-cache will *not*
# enforce executability restrictions.
resource("disable-executability-restrictions-resource") {
  sources = [ "disable_executability_restrictions" ]
  outputs = [ "data/pkgfs_disable_executability_restrictions" ]
  visibility = [ ":*" ]
}

fuchsia_system_package("disable-executability-restrictions") {
  deps = [
    ":disable-executability-restrictions-resource",
    "//build/validate:non_production_tag",
  ]
  visibility = [
    "//bundles/assembly:*",
    "//src/sys/pkg:*",
  ]
}
