// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//src/sys/component_manager/tests/meta/elf_runner_and_environment.shard.cml",
        "inspect/offer.shard.cml",
        "syslog/offer.shard.cml",
    ],
    children: [
        /// This service exposes the services to the root realm, which are passed down to the three children realms.
        {
            name: "policy_service",
            url: "#meta/policy_service.cm",
            environment: "#elf-env",
        },
        {
            name: "dir_service",
            url: "#meta/dir_service.cm",
            environment: "#elf-env",
        },

        // Three children which are all identical except for their identity
        // (monikers) plus the fact that #policy_not_violated does not ask for
        // a capability restricted by allowlist. The security policy used alongside this test
        // has #policy_allowed alone allowlisted.
        {
            name: "policy_allowed",
            url: "#meta/cap_getter.cm",
            environment: "#elf-env",
        },
        {
            name: "policy_denied",
            url: "#meta/cap_getter.cm",
            environment: "#elf-env",
        },
        {
            name: "policy_not_violated",
            url: "#meta/cap_getter.cm",
            environment: "#elf-env",
        },
    ],
    offer: [
        {
            protocol: [
                "test.policy.Restricted",
                "test.policy.Unrestricted",
            ],
            from: "#policy_service",
            to: [
                "#policy_allowed",
                "#policy_denied",
                "#policy_not_violated",
            ],
        },
        {
            directory: "restricted",
            from: "#dir_service",
            to: [
                "#policy_allowed",
                "#policy_denied",
                "#policy_not_violated",
            ],
        },
        {
            directory: "unrestricted",
            from: "#dir_service",
            to: [
                "#policy_allowed",
                "#policy_denied",
                "#policy_not_violated",
            ],
        },
    ],
    expose: [
        // Expose the root realm's Realm protocol so that the test logic can
        // bind to specific children.
        {
            protocol: "fuchsia.component.Realm",
            from: "framework",
        },
    ],
}
