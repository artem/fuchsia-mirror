# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bazel/assembly/bazel_product_bundle.gni")

# A GN target to perform system assembly in Bazel exclusively, using
# Ninja-generated inputs.

if (current_cpu == "x64") {
  bazel_product_bundle("workbench_eng.x64") {
    testonly = true
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = "//products/workbench:product_bundle_eng.x64"
    bazel_product_image_target = "//products/workbench:assembly_eng.x64"
    bazel_recovery_image_target = "//products/zedboot:x64"
    bazel_elf_sizes_target = "//products/workbench:elf_sizes.x64"
    bazel_inputs_from_gn = [
      "//boards/x64:x64.bazel_input",
      "//build/images/flash:esp.bazel_input",
      "//build/images/fuchsia:fuchsia.bazel_legacy_aib",
      "//build/images/zedboot:zedboot.bazel_legacy_aib",
      "//products/workbench/workbench_session:workbench_session_bazel_inputs",
    ]
  }

  bazel_product_bundle("workbench_eng.qemu-x64") {
    testonly = true
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target =
        "//products/workbench:product_bundle_eng.qemu-x64"
    bazel_product_image_target = "//products/workbench:assembly_eng.qemu-x64"
    bazel_recovery_image_target = "//products/zedboot:qemu-x64"
    bazel_elf_sizes_target = "//products/workbench:elf_sizes.qemu-x64"
    bazel_inputs_from_gn = [
      "//boards/qemu-x64:qemu-x64.bazel_input",
      "//build/images/flash:esp.bazel_input",
      "//build/images/fuchsia:fuchsia.bazel_legacy_aib",
      "//build/images/zedboot:zedboot.bazel_legacy_aib",
      "//products/workbench/workbench_session:workbench_session_bazel_inputs",
    ]
  }
}

if (current_cpu == "arm64") {
  bazel_product_bundle("workbench_eng.vim3") {
    testonly = true
    allow_eng_platform_bundle_use = true
    bazel_product_bundle_target = "//products/workbench:product_bundle_eng.vim3"
    bazel_product_image_target = "//products/workbench:assembly_eng.vim3"
    bazel_recovery_image_target = "//products/zedboot:vim3"
    bazel_elf_sizes_target = "//products/workbench:elf_sizes.vim3"
    bazel_inputs_from_gn = [
      "//boards/vim3:vim3.bazel_input",
      "//build/images/flash:esp.bazel_input",
      "//build/images/fuchsia:fuchsia.bazel_legacy_aib",
      "//build/images/zedboot:zedboot.bazel_legacy_aib",
      "//products/workbench/workbench_session:workbench_session_bazel_inputs",
    ]
  }
}
