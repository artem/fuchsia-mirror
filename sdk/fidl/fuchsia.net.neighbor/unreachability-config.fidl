// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.net.neighbor;

using zx;

/// Configuration options related to the operation of Neighbor Unreachability
/// Detection (NUD), as defined by RFC 4861 section 7.3.
///
/// Field names loosely follow RFC 4861 sections 6.3.2 and 10, any deviations
/// are noted. Descriptions are kept implementation-independent by using a set
/// of generic terminology.
///
/// ,-------------------------------------------------------------------.
/// | Generic Term              | ARP Protocol | NDP Protocol           |
/// |---------------------------+--------------+------------------------|
/// | Reachability Probe        | ARP Request  | Neighbor Solicitation  |
/// | Reachability Confirmation | ARP Reply    | Neighbor Advertisement |
/// `---------------------------+--------------+------------------------'
type UnreachabilityConfig = table {
    /// A base duration for computing the random reachable time.
    ///
    /// Reachable time is the duration for which a neighbor is considered
    /// reachable after a positive reachability confirmation is received. It is
    /// a function of a uniformly distributed random value between
    /// [`min_random_factor`] and [`max_random_factor`] multiplied by
    /// [`base_reachable_time`]. Using a random component eliminates the
    /// possibility that Neighbor Unreachability Detection messages will
    /// synchronize with each other.
    ///
    /// After this time, an entry will transition from REACHABLE to STALE state.
    ///
    /// Referred to as "BaseReachableTime" by RFC 4861.
    ///
    /// Must be greater than 0.
    1: base_reachable_time zx.Duration;
};

/// Default value for [`UnreachabilityConfig.base_reachable_time`] as
/// recommended by RFC 4861 section 10.
const DEFAULT_BASE_REACHABLE_TIME zx.Duration = 30000000000; // 30 seconds
