// Copyright 2023 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.scheduler;

using zx;

const MAX_ROLE_NAME_LENGTH int32 = 2048;

/// A Zircon object to which a profile can be applied.
/// Currently, only threads and vmars are supported.
type RoleTarget = flexible resource union {
    1: thread zx.Handle:THREAD;
    2: vmar zx.Handle:VMAR;
};

/// Allows callers to modify the runtime profiles of zircon objects.
@discoverable
open protocol RoleManager {
    /// Sets the given object's performance parameters based on the requested
    /// role. The exact parameters of the role are system dependent and may
    /// vary based on device-specific tuning and/or runtime system goals.
    ///
    /// + request `target` is a handle to a zircon object to which a profile
    ///     can be applied.
    /// + request `role` is the name of the role to apply to the target.
    /// * error a zx_status value indicating success or failure.
    flexible SetRole(resource table {
        1: target RoleTarget;
        2: role string:MAX_ROLE_NAME_LENGTH;
    }) -> () error zx.Status;
};
