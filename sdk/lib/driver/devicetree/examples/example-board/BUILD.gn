# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bazel/bazel_inputs.gni")
import("//build/bazel/drivers/bazel_driver_package.gni")
import("//build/bazel/wrappers.gni")
import("//build/config/fuchsia_cxx_version.gni")
import("//build/devicetree/devicetree.gni")
import("//build/zbi/zbi_input.gni")

bazel_driver_package("bazel_package") {
  bazel_target =
      "//sdk/lib/driver/devicetree/examples/example-board:example-board"
  package_name = "example-board"
}

devicetree("example-board") {
  sources = [ "dts/example-board.dts.S" ]
  golden = "dts/example-board.golden.dts"
  deps = [ "//zircon/system/ulib/ddk-platform-defs" ]
}

# Add this target to |kernel_zbi_extra_deps| to include the devicetree blob
# (dtb) in the kernel ZBI. Typically the bootloader will pass down the dtb.
# This method should only be used during board bringup.
zbi_input("example-board-dtb") {
  deps = [ ":example-board-dt" ]
  type = "devicetree"
  sources = [ "$target_out_dir/example-board.dtb" ]
}

bazel_input_resource("test-dtb") {
  deps = [ ":example-board" ]
  sources = [ "$target_out_dir/example-board.dtb" ]
  outputs = [ "{{source_file_part}}" ]
}

bazel_fuchsia_test_package("example-board-test-package") {
  test_package_name = "example-board-test"
  test_component_names = [ "example-board-test" ]

  # Integration test for the board driver requires these prebuilt artifacts:
  #   - devicetree blob (.dtb)
  #   - Platform bus driver (.far)
  #   - driver-test-realm package (.far)
  bazel_inputs = [
    ":test-dtb",
    "//sdk/lib/driver/devicetree/testing:devicetree-test-bazel-inputs",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":example-board-test-package" ]
}
