# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

%YAML 1.2
---
$id: http://devicetree.org/schemas/power-element.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Fuchsia power element configuration

maintainers:
  - Puneetha Ramachandra (puneetha@google.com)
  - Justin Mattson (jmatt@google.com)

description: |
  Fuchsia power framework consists of power elements which are objects that are managed by the power
  framework to vary system power usage. Drivers can take part in this framework by adding power
  element configuration corresponding to the device they manage. This file contains bindings that
  can be mapped into `fuchsia.hardware.power/config.fidl`.

definitions:
  power-level-transition-table-entry:
    type: object
    description:
      Table entries with supported level change details from current level, like target level and
      latency in microseconds.
    properties:
      target-level:
        description: Level id of the target level.
        $ref: /schemas/types.yaml#/definitions/uint32
      latency-us:
        description: Latency for transition from current level to target level in microseconds.
        $ref: /schemas/types.yaml#/definitions/uint32
    required:
      - target-level
    additionalProperties: false

  power-level:
    type: object
    description:
      Each power level node contains the level number, dependencies on other level nodes
      and level transitions table.
    properties:
      level:
        description: Level id of the current level.
        $ref: /schemas/types.yaml#/definitions/uint32
      level-transition-table:
        type: object
        description: Container for transition table entries.
        patternProperties:
          "^transition-[a-zA-Z0-9-]*$":
            $ref: "#/definitions/power-level-transition-table-entry"
      level-dependencies:
        description: Phandles of level nodes that this level depends on.
        $ref: /schemas/types.yaml#/definitions/phandle-array
        items:
          maxItems: 2
          minItems: 2
          description: 1st cell for phandle and 2nd cell for
            fuchsia.hardware.power::RequirementType.
    required:
      - level

properties:
  $nodename:
    const: power-elements
    description:
      A /power-elements node is required in order to set power element configuration for
      the device. It does not represent a real device in the system, but acts as a container to
      describe the power levels and dependencies.

patternProperties:
  "^[a-zA-Z0-9-]*-element$":
    type: object
    description:
      Each power element node contains information the power levels, dependencies and transitions
      supported.
    properties:
      power-levels:
        type: object
        description: Container for power level nodes.
        patternProperties:
          "^[a-zA-Z0-9-]*-level$":
            $ref: "#/definitions/power-level"
            description: Individual power level nodes.
    required:
      - power-levels
    additionalProperties: false

additionalProperties: false

examples:
  - |
    bluetooth {
      compatible = "test,bluetooth";

      power-elements {
        wake-on-interrupt-element {
          power-levels {
            off-level {
              level = <0>;
              level-transition-table {
                transition-to-on {
                  target-level = <1>;
                  latency-us = <1000>;
                };
              };
            };
            on-level {
              level = <1>;
              level-transition-table {
                transition-to-off {
                  target-level = <0>;
                  latency-us = <1000>;
                };
              };
              level-dependencies = <&rail_on_level 1>;
            };
          };
        };
      };
    };

    power-controller {
      compatible = "test,power-controller";
      power-elements {
        rail-1-element {
          power-levels {
            rail_on_level: rail-on-level {
              ...
            };
          };
        };
      };
    };
