# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components/fuchsia_unittest_package.gni")
import("//build/test.gni")

is_elf = current_os != "mac" && current_os != "win"

group("tests") {
  testonly = true

  deps = [
    ":ld-tests",
    ":ld-unittests($host_toolchain)",
  ]
}

test("ld-unittests") {
  sources = [ "abi-tests.cc" ]
  deps = [
    "..:headers",
    "//src/lib/fxl/test:gtest_main",
  ]

  if (is_elf) {
    deps += [ ":load-tests" ]
  }
}

fuchsia_unittest_package("ld-tests") {
  deps = [ ":ld-unittests" ]
}

# This collects the -DLD_STARTUP_TEST_LIB=... flag in the response file.
generated_file("ld-startup-test-switches.rsp") {
  visibility = [ ":*" ]
  testonly = true
  output_conversion = "list lines"
  data_keys = [ "ld_startup_test_switches" ]
  outputs = [ "$target_gen_dir/$target_name" ]
  data_deps = [ "..:ld-startup.basic" ]
}

source_set("load-tests") {
  visibility = [ ":*" ]
  testonly = true

  sources = [ "ld-startup-tests.cc" ]
  deps = [
    "..:posix-header",
    "//src/lib/elfldltl",
    "//src/lib/elfldltl:elfldltl-testutils",
    "//third_party/googletest:gtest",
  ]
  if (is_fuchsia) {
    deps += [
      "../testing",
      "//zircon/system/ulib/zx",
    ]
  }

  if (is_fuchsia) {
    # Plumb in the switch via the response file to give the name under lib/
    # that the test can pass to fuchsia.ldsvc.Loader/LoadObject.
    deps += [ ":ld-startup-test-switches.rsp" ]
    inputs = get_target_outputs(":ld-startup-test-switches.rsp")
    cflags = [ "@" + rebase_path(inputs[0], root_build_dir) ]
  } else {
    defines = [ "LD_STARTUP_TEST_LIB=\"libld-startup.so\"" ]
  }

  data_deps = [ ":load-test-data" ]
}

if (is_host) {
  test_shlib_tc = ""
  test_shlib_out_dir = root_out_dir
  if (is_linux) {
    # The linux_$cpu (vs host_$cpu) handles shared libraries.
    test_shlib_tc = "(//build/toolchain:linux_$current_cpu-shared)"
    test_shlib_out_dir = get_label_info(":here$test_shlib_tc", "root_out_dir")
  }

  # For host tests, the test binaries must be packaged in host_test_data() at
  # the expected path where elfldltl::testing::GetTestLib will find them.
  host_test_data("load-test-data") {
    visibility = [ ":*" ]

    deps = []
    sources = []
    outputs = [ "$root_out_dir/test_data/elfldltl/{{source_file_part}}" ]

    deps += [ "..:ld-startup$test_shlib_tc" ]
    sources += [ "$test_shlib_out_dir/libld-startup.so" ]
  }
} else {
  # On Fuchsia these are just included in /pkg/lib implicitly by dint
  # of being in data_deps of the test code.
  group("load-test-data") {
    visibility = [ ":*" ]
    testonly = true
    deps = [ "..:ld-startup.basic" ]
  }
}
